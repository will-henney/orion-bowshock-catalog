* Looking at the stellar sources
:PROPERTIES:
:ID:       F4110680-613F-4ED9-AC81-8AF6D404AE90
:END:
** Write out a region file for all the sources
+ This is based on [[id:0552A67D-F467-4F41-BD5D-DF5212B4AB35][Write ds9 region file for the LL objects]]

*** First some utility functions
#+BEGIN_SRC python :eval no :tangle catalog_utils.py
  region_hdr_lines = [
      '# Region file format: DS9 version 4.1',
      'global color=yellow dashlist=8 3 width=1 font=\"helvetica 10 normal roman\" '
      + 'select=1 highlite=1 dash=0 fixed=0 edit=1 move=1 delete=1 include=1 source=1',
      'fk5',
  ]

  def region_box_to_string(ra='5:34:40.800', dec='-5:22:43.00', text='LL2',
                           color='yellow', width=2, height=2, angle=0.0):
                           pattern = 'box({},{},{}\",{}\",{}) # text={{{}}} color={}'
                           return pattern.format(ra, dec, width, height, angle, text, color)


  def region_lines_from_table(table, ra='RAJ2000', dec='DEJ2000',
                              name='Name', name_fmt='{}', color='yellow'):
      """Create DS9 region lines for all sources in an astropy `table`

      Coordinates come from the columns named `ra` and `dec`, while
      source names come the column named `name` and are formatted
      according to `name_fmt`"""

      region_lines = region_hdr_lines[:]
      for row in table:
          region_lines.append(
              region_box_to_string(row[ra], row[dec],
                                   name_fmt.format(row[name]), color))

      return region_lines
#+END_SRC

*** Now try it on the COUP data
#+BEGIN_SRC python :results file :return regionfile
  from astropy.table import Table
  from catalog_utils import region_lines_from_table
  xdata = Table.read('COUP/Getman2005/Getman-2005-Vizier.fits')
  regionfile = 'coup-sources.reg'
  with open(regionfile, 'w') as f:
      f.write('\n'.join(region_lines_from_table(xdata, name='COUP',
                                                name_fmt='COUP {:04d}',
                                                color='cyan')))
#+END_SRC

#+RESULTS:
#+begin_example
[['Robb-13', '5r'], ['Robb-13', '0l'], ['Bally-06', 1], ['Bally-06', 9], ['Bally-06', 17]]
/Users/will/Work/OrionTreasury/acs/hlsp_orion_hst_acs_strip5r_f658n_v1_drz.fits
/Users/will/Work/OrionTreasury/acs/hlsp_orion_hst_acs_strip5r_f555w_v1_drz.fits
/Users/will/Work/OrionTreasury/acs/hlsp_orion_hst_acs_strip5r_f435w_v1_drz.fits
/Users/will/Work/OrionTreasury/acs/hlsp_orion_hst_acs_strip0l_f658n_v1_drz.fits
/Users/will/Work/OrionTreasury/acs/hlsp_orion_hst_acs_strip0l_f555w_v1_drz.fits
/Users/will/Work/OrionTreasury/acs/hlsp_orion_hst_acs_strip0l_f435w_v1_drz.fits
/Users/will/Work/OrionTreasury/Bally-ACS/j8oc1010_wcs.fits
NOT FOUND: Bally-06 1 f555w
NOT FOUND: Bally-06 1 f435w
/Users/will/Work/OrionTreasury/Bally-ACS/j8oc9010_wcs.fits
NOT FOUND: Bally-06 9 f555w
NOT FOUND: Bally-06 9 f435w
/Users/will/Work/OrionTreasury/Bally-ACS/j8oc17010_wcs.fits
NOT FOUND: Bally-06 17 f555w
NOT FOUND: Bally-06 17 f435w
#+end_example

*** And on the NICMOS data
#+BEGIN_SRC python :results file :return regionfile
  from astropy.table import Table
  from catalog_utils import region_lines_from_table
  table = Table.read('Andersen2011/nicmos.fits')
  regionfile = 'nicmos-sources.reg'
  with open(regionfile, 'w') as f:
      f.write('\n'.join(region_lines_from_table(table, name='Seq',
                                                name_fmt='NIC {:04d}',
                                                color='red')))
#+END_SRC

#+RESULTS:
[[file:nicmos-sources.reg]]

*** And the bizarre Russian Oricat data
#+BEGIN_SRC python :results file :return regionfile
  from astropy.table import Table
  from catalog_utils import region_lines_from_table
  table = Table.read('Vereshchagn2011/oricat.fits')
  regionfile = 'oricat-sources.reg'
  with open(regionfile, 'w') as f:
      f.write('\n'.join(region_lines_from_table(table, name='Oricat',
                                                name_fmt='Oricat {:05d}',
                                                color='green')))
#+END_SRC

#+RESULTS:
[[file:oricat-sources.reg]]

Accretion mass loss rates from Manara et al 2012

#+BEGIN_SRC python :results file :return regionfile
  from astropy.table import Table
  from catalog_utils import region_lines_from_table
  table = Table.read('Manara2012/mdot-catalog.fits')
  regionfile = 'mdotcat.reg'
  with open(regionfile, 'w') as f:
      f.write('\n'.join(region_lines_from_table(table, name='OM',
                                                name_fmt='Mdot OM {:04d}',
                                                color='#44cc44')))
#+END_SRC

#+RESULTS:
[[file:mdotcat.reg]]

*** Hillenbrand 1997 optical catalog
#+BEGIN_SRC python :results file :return regionfile
  from astropy.table import Table
  from catalog_utils import region_lines_from_table
  table = Table.read('Hillenbrand1997/hillenbrand-V-I.fits')
  regionfile = 'hill97.reg'
  with open(regionfile, 'w') as f:
      f.write('\n'.join(region_lines_from_table(table, name='ID',
                                                name_fmt='H97 {:04d}',
                                                color='#ff8888')))
#+END_SRC

#+RESULTS:
[[file:hill97.reg]]

*** Hillenbrand 1998 IR catalog
#+BEGIN_SRC python :results file :return regionfile
  from astropy.table import Table
  from catalog_utils import region_lines_from_table
  table = Table.read('Hillenbrand1998/hillenbrand-J-Q.fits')
  regionfile = 'hill98.reg'
  with open(regionfile, 'w') as f:
      f.write('\n'.join(region_lines_from_table(table, name='ID',
                                                ra='_RA', dec='_DE',
                                                name_fmt='H98 {:04d}',
                                                color='#aa4444')))
#+END_SRC

#+RESULTS:
[[file:hill98.reg]]

*** Hillenbrand 2000 IR catalog
#+BEGIN_SRC python :results file :return regionfile
  from astropy.table import Table
  from catalog_utils import region_lines_from_table
  table = Table.read('Hillenbrand2000/hillenbrand-J-K.fits')
  regionfile = 'hill00.reg'
  with open(regionfile, 'w') as f:
      f.write('\n'.join(region_lines_from_table(table, name='__HC2000_',
                                                name_fmt='H00 {:04d}',
                                                color='#ff44aa')))
#+END_SRC

#+RESULTS:
[[file:hill00.reg]]

*** Robberto 2010 wide field NIR catalog
#+BEGIN_SRC python :results file :return regionfile
  from astropy.table import Table
  from catalog_utils import region_lines_from_table
  table = Table.read('Robberto2010/RSS2010-core.fits')
  regionfile = 'rss2010.reg'
  with open(regionfile, 'w') as f:
      f.write('\n'.join(region_lines_from_table(table, name='ID',
                                                name_fmt='RSS00 {:05d}',
                                                color='#aa22aa')))
#+END_SRC

#+RESULTS:
[[file:rss2010.reg]]

+ In order to give a small enough region file for ds9, I have restricted the catalog to the following range: 
  + RA = 83.78323 +/- 0.12
  + Dec = -5.45435 +/- 0.12
*** Robberto 2005 MIR catalog
#+BEGIN_SRC python :results file :return regionfile
  from astropy.table import Table
  from catalog_utils import region_lines_from_table
  table = Table.read('Robberto2005/robberto-mir.fits')
  regionfile = 'robb05-mir.reg'
  with open(regionfile, 'w') as f:
      f.write('\n'.join(region_lines_from_table(table, name='MAX',
                                                name_fmt='MAX {:03d}',
                                                color='#aaaa22')))
#+END_SRC

#+RESULTS:
[[file:robb05-mir.reg]]

*** Smith 2005 MIR catalog
#+BEGIN_SRC python :results file :return regionfile
  from astropy.table import Table
  from catalog_utils import region_lines_from_table
  table = Table.read('Smith2005/smith05-mir.fits')
  regionfile = 'smith05-mir.reg'
  with open(regionfile, 'w') as f:
      f.write('\n'.join(region_lines_from_table(table, name='recno',
                                                name_fmt='Smith {:03d}',
                                                color='#ffaa22')))
#+END_SRC

#+RESULTS:
[[file:smith05-mir.reg]]

*** YSOVAR MIR catalog
#+BEGIN_SRC python :results file :return regionfile
  from astropy.table import Table
  from catalog_utils import region_lines_from_table
  table = Table.read('Morales-Calderon2011/ysovar-stars.fits')
  regionfile = 'ysovar.reg'
  with open(regionfile, 'w') as f:
      f.write('\n'.join(region_lines_from_table(table, name='ISOY',
                                                name_fmt='{}',
                                                color='#44cc66')))
#+END_SRC

#+RESULTS:
[[file:ysovar.reg]]

*** Conclusion so far
+ Hillenbrand 2000 is mostly complete for inner region
+ Hillenbrand 1998 is good for EON
  + Note that Hillenbrand 1997 has offsets in coordinates of order 2 arcsec
+ But Robberto 2010 (NIR) is the best
  + Although I had to restrict it to a 0.24 x 0.24 degree box
  + Otherwise, it was too many boxes for ds9!
+ The Robberto 2013 (ACS) catalog is also very complete
+ The COUP x-ray catalog makes an interesting complement
** Find the coincident stellar sources for each arc
:PROPERTIES:
:ID:       F7BCAB63-E507-48FD-B594-09F82ED6F7A3
:END:
#+BEGIN_SRC python
  import numpy as np
  from astropy.table import Table, Column, MaskedColumn
  import astropy.coordinates as coord

  arctab = Table.read('luis-programas/arcs-summary-unique.ecsv', 
                      format='ascii.ecsv')
  #                    fill_values=('--', np.nan) ).filled(np.nan)
  outcols = ['Object']

  arctab['coord'] = coord.SkyCoord(ra=arctab['RA'], dec=arctab['Dec'],
                                   unit=('hourangle', 'deg'))

  catalogs = {'RSS': {'file': 'Robberto2010/RSS2010-core.fits',
                      'ID': 'ID'},
              'COUP': {'file': 'COUP/Getman2005/Getman-2005-Vizier.fits',
                       'ID': 'COUP'},
              'MAX': {'file': 'Robberto2005/robberto-mir.fits',
                      'ID': 'MAX'},
              'MIR': {'file': 'Smith2005/smith05-mir.fits',
                      'ID': 'recno'},
              'H00': {'file': 'Hillenbrand2000/hillenbrand-J-K.fits',
                      'ID': '__HC2000_'},
              'ISOY': {'file': 'Morales-Calderon2011/ysovar-stars.fits',
                      'ID': 'ISOY'},
              'ACS': {'file': 'Robberto2013/robberto-2013.fits',
                      'ID': 'ONCacs'},
  }

  MAXSEP = 1.0
  for cat, metadata in catalogs.items():
      cattab = Table.read(metadata['file'])
      cattab['coord'] = coord.SkyCoord(ra=cattab['RAJ2000'], dec=cattab['DEJ2000'],
                                       unit=('deg', 'deg'))
      sourcenames = []
      sourceseps = []
      for arc in arctab:
          seps = arc['coord'].separation(cattab['coord']).arcsec
          iclosest = seps.argmin()
          sourcenames.append('{} {}'.format(cat, cattab[iclosest][metadata['ID']]))
          sourceseps.append(seps[iclosest])

      mask = np.array(sourceseps) > MAXSEP
      outcols.append(cat)
      arctab.add_column(
          MaskedColumn(name=cat, data=sourcenames, mask=mask, meta=metadata,
                       description='Closest source from the {} catalog'.format(cat)))
      outcols.append(cat + ' sep')
      arctab.add_column(
          MaskedColumn(name=cat + ' sep', data=sourceseps, mask=mask, format='{:.3f}'))



  outtab = arctab[outcols]
  outtab.write('arc-stellar-sources.ecsv', format='ascii.ecsv')
#+END_SRC

#+RESULTS:
: None

[[file:arc-stellar-sources.ecsv]]

* OSF 2014 Conference
** Resumen de Luis
Catalog of stationary bowshock arcs in the Orion Nebula

Presentamos una lista completa de todos los choques estacionarios asociados a estrellas jóvenes (objetos LL) que se han descubierto en la Nebulosa de Orión. Hemos identificado en las imágenes de Bally los arcos de emisión circunestelar. Estas imágenes fueron tomadas con la cámara ASC del Telescopio Espacial Hubble y son emisiones de Ha y NII debido a que contiene el filtro f658n. Se han separado las emisiones de Ha y NII utilizando las imágenes de Robberto, puesto que estas se tomaron con la cámara WFPC2 y cómo contiene el filtro f656n sólo admite las líneas de Ha. Con el objetivo de caracterizar los objetos LL hemos trazado la forma de los arcos para estimar los radios de curvatura Rc tanto del borde externo como del interno de los choques estacionarios, de la misma forma también se ha calculado  la distancia Ro de los arcos a la estrella jóven. Utilizando la forma de los arcos se ha medido el brillo superficial de Ha y con este parámetro hemos estimado el producto MV de todos los Objetos LL.
** Version in English
Catalog of stationary bowshock arcs in the Orion Nebula

We present a complete catalog of all the stationary emission line arcs (LL objects and proplyd bowshocks) found in archival HST imaging of the Orion Nebula.   The total number of objects detected is 73, of which 20 have not previously been reported in the literature.  We classify the shapes of emission line arcs by fitting conic sections to the inner and outer shell boundaries and calculate the background corrected H alpha surface brightness of each object.   We find significant differences in the shell shapes between the objects closest to the ionizing stars and those farther away.  The closer group, which all represent proplyd interactions with the hypersonic stellar wind, have relatively closed shapes, while the farther group, which are due to interactions with the transonic ionized champagne flow in the nebula, are more open and hyperbolic.  Although some of the latter group are also known proplyds, many are not, and the largest and brighest arcs tend to be associated with particularly luminous young stars, suggesting that the intrinsic T Tauri disk wind may play a role.  The orientations of the arcs, together with the stagnation pressures estimated from the surface brightness, allow the internal velocity field of the H II region to be probed.  We find that approximately radial flows from the core of the nebula dominate over disordered, turbulent flows.

* Spatial groups of arcs
+ We can divide the arcs into 6 groups:
  1. LV knots and other very close-in arcs
     - D' < 20''
     - approx isotropic distribution
     - consistent with stellar wind confinement
     - radiation pressure may also be important
     - roughly half of all proplyds in this zone have arcs
     - no consistent offset between axis and radial direction
  2. The intermediate arcminute halo
     - D' ~= 0.5' -> 1'
     - most are either to SW, or to N
       - but the N ones may be are just the inner extension of the N group
       - and the SW ones may be outer extension of the LV group
     - no consistent offset between axis and radial direction
     - seem to require too high an outer pressure for the stellar wind
       - but perhaps mass loading could rescue this
     - Only 20% of proplyds in this zone have arcs
  3. The northwest group
     - D' ~= 2' -> 4'
     - From N to WNW
     - Slight negative (clockwise) offset between axis and radial direction
       - => clockwise non-radial external flow (to W)
     - 
** Finding the spatial groups
:PROPERTIES:
:header-args: :noweb yes
:END:
*** Eliminate duplicates
#+BEGIN_SRC python :return newtabfile :results file
  from astropy.table import Table
  import numpy as np

  table = Table.read("luis-programas/arcs-summary-merge.ecsv", 
                     format="ascii.ecsv")
  # Eliminate duplicates, keeping only the first instance of each source
  sources, idups = [], []
  for i, source in  enumerate(table['Object']):
      if source in sources:
          idups.append(i)
      sources.append(source)
  if idups:
      table.remove_rows(idups)

  newtabfile = "luis-programas/arcs-summary-unique.ecsv"
  table.write(newtabfile, format="ascii.ecsv")

#+END_SRC

#+RESULTS:
[[file:luis-programas/arcs-summary-unique.ecsv]]

*** Read in the data



#+name: read-data-for-classification
#+BEGIN_SRC python
  import matplotlib.pyplot as plt
  from matplotlib.patches import Ellipse
  from astropy.table import Table
  import numpy as np

  table = Table.read("luis-programas/arcs-summary-unique.ecsv", 
                     format="ascii.ecsv")
  #
  with open("luis-programas/problem-sources.txt") as f:
      problem_sources = f.read().split('\n')
  with open("luis-programas/interproplyd.txt") as f:
      interprop_sources = f.read().split('\n')

  problem_mask = np.array([name in problem_sources for name in table['Object']])
  interprop_mask = np.array([name in interprop_sources for name in table['Object']])
  m = (~problem_mask) & (~interprop_mask)

  D60 = table['D'][m]/60.0
  PA = (table['PA_star'][m] - 180.0) % 360.0
#+END_SRC
*** Plot graph of PA vs log Distance 
#+BEGIN_SRC python :return pltfile :results file
  <<read-data-for-classification>>
  xmin, xmax = 0.05, 20.0
  x = np.concatenate((D60, D60, D60))
  y = np.concatenate((PA-360, PA, PA+360))

  plt.plot(x, y, 'o', color='k', alpha=0.7)
  plt.fill_between([xmin, xmax], [0.0, 0.0], [360.0, 360.0], alpha=0.05, color='k')
  # plt.gca().add_patch(Ellipse((5.0, 200), 2.0, 60.0))
  plt.xlim(xmin, xmax)
  plt.xscale('log')
  plt.ylim(-180.0, 360.0 + 180.0)
  plt.xlabel('Projected distance, arcmin')
  plt.ylabel('Position angle, degrees')
  plt.gcf().set_size_inches(8, 8)
  pltfile = 'distro-D-PA.pdf'
  plt.savefig(pltfile)
#+END_SRC

#+RESULTS:
[[file:distro-D-PA.pdf]]

- I have edited the file with iDraw to add colored ellipses for the groups that we find:
  - [[file:arc-classify.pdf]]

*** Look at the PA distribution histograms in different radial bins
#+BEGIN_SRC python :return pltfile :results file
  <<read-data-for-classification>>
  PA0 = 60
  PA = ((PA - PA0) % 360) + PA0
  rangemasks = [
      (D60 < 0.2, "D' <= 0.2'"),
      ((D60 >= 0.2) & (D60 < 1.2), "D' = 0.2' - 1.2'"),
      ((D60 >= 1.2) & (D60 < 5.5), "D' = 1.2' - 5.5'"),
      ((D60 >= 5.5), "D' > 5'")
  ]

  import seaborn as sns
  import matplotlib.ticker
  import sys

  hist_kws = {"range": (PA0, 360 + PA0), "alpha": 0.6}
  fig, axes = plt.subplots(4, 1, sharex=True, sharey=True)
  #with sns.color_palette("RdPu_r", 4):
  all_labels, all_handles = [], []

  palette = iter(sns.color_palette(["gray", "orange", "purple", "green"]))
  for ax, (mask, label), nbins in zip(axes, rangemasks, [4, 12, 36, 24]):
      ax.hist(PA[mask], bins=nbins, color=next(palette), label=label, **hist_kws)
      handles, labels = ax.get_legend_handles_labels()
      all_labels.extend(labels)
      all_handles.extend(handles)
      ax.set_ylabel('# of arcs')

  sys.stderr.write(str(all_labels))
  sys.stderr.write(str(all_handles))
  axes[-1].legend(all_handles, all_labels)
  axes[-1].set_xlim(*hist_kws["range"])
  axes[-1].set_xlabel('Position angle, degrees')
  axes[-1].set_xticks(np.arange(PA0, 360+PA0+1, 30))
  axes[-1].xaxis.set_major_formatter(matplotlib.ticker.FuncFormatter(lambda x, pos: x % 360))
  fig.set_size_inches(5, 10)
  fig.tight_layout()
  pltfile = 'histogram-PA-vs-D.pdf'
  plt.savefig(pltfile)

#+END_SRC

#+RESULTS:
[[file:histogram-PA-vs-D.pdf]]


*** Assign the arcs to the groups
#+BEGIN_SRC python :return newtabfile :results file
  <<read-data-for-classification>>
  # recalculate D60 and PA but for all sources
  D60 = table['D']/60.0
  PA = (table['PA_star'] - 180.0) % 360.0

  criteria = {
      "LV": D60 < 0.2,
      "SE": (D60 >= 0.2) & (D60 < 1.2) & (PA > 60) & (PA < 200),
      "N": (D60 >= 0.2) & (D60 < 1.2) & ((PA + 100) % 360 < 150),
      "NW": (D60 >= 1.2) & (D60 < 5.0) & ((PA - 60) % 360 > 210),
      "W": (D60 >= 1.2) & (PA > 210) & (PA < 290),
      "S": (D60 >= 3.0) & (PA > 100) & (PA < 210),
  }

  table["Group"] = '  '
  for group, mask in criteria.items():
      table["Group"][mask] = group
  table["Group"][problem_mask] = '*P'
  table["Group"][interprop_mask] = '*I'

  newtabfile = "luis-programas/arcs-summary-classify.ecsv"
  table.write(newtabfile, format="ascii.ecsv")

#+END_SRC

#+RESULTS:
[[file:luis-programas/arcs-summary-classify.ecsv]]

+ This program adds an extra column to the table, which is a 2-character string representing the spatial group.
+ We also use =*I= and =*P= to represent interproplyd arcs and "problematic" arcs
*** Repeat the earlier diagnostic graphs, but classifying by spatial group
:PROPERTIES:
:header-args: :noweb yes :dir luis-programas
:ID:       761C80D7-EBD1-46FC-87B9-26CF28BD6201
:END:

Note that these run in the [[file:luis-programas]] folder

#+name: read-classify-table
#+BEGIN_SRC python
  tab = Table.read("arcs-summary-classify.ecsv", format="ascii.ecsv")
#+END_SRC

#+name: classify-plots-setup
#+BEGIN_SRC python
  import numpy as np
  import json
  import matplotlib.pyplot as plt
  from  astropy.table import Table
  import seaborn as sns

  <<annotations>>
  <<read-classify-table>>
  <<mask-out-unwanted>>
  <<set-common-vars>>

  groups = [ "LV", "SE", "N", "NW", "W", "S", ]
  colors = [ "light brown", "light orange", "cerulean", "dark pink", "purple", 
             "forest green", ]
  colors = sns.xkcd_palette(colors)
  groups_and_colors = zip(groups, colors)

  lgd_kws = {'frameon': True, 'fancybox': True, 'shadow': True}

  <<identify-proplyds>>
  proplyd_mask = np.array([is_proplyd.get(source) == 1 for source in tab['Object']])
  not_proplyd_mask = np.array([is_proplyd.get(source) == -1 for source in tab['Object']])
  maybe_proplyd_mask = np.array([is_proplyd.get(source) == 0 for source in tab['Object']])

  def sanitize_source_label(inlabel):
      if inlabel.startswith('w'):
          outlabel = inlabel[1:]
      else:
          outlabel = inlabel
      return outlabel

  source_labels = np.array([sanitize_source_label(s) for s in tab['Object']])
#+END_SRC

#+RESULTS: classify-plots-setup
: None

#+BEGIN_SRC python :return pltfile :results file
  <<classify-plots-setup>>
  xmin, xmax = 0.05, 20.0

  pltfile = 'distro-D-PA-class.pdf'
  fig, ax = plt.subplots(figsize=(5, 5))

  pagrid = np.linspace(-360.0, 720.0)
  rgrid = np.exp(-4*pagrid/360.0)
  for dpa in -360, 0, 360, 720:
      ax.plot(rgrid, pagrid + dpa, color="k", ls=":", alpha=0.5, zorder=-100)

  lab_pos = {
      "LV": (0.07, 180),
      "SE": (0.55, 125),
      "N": (0.4, 330),
      "NW": (2.5, 340),
      "W": (1.2, 210),
      "S": (2.8, 160),
  }
  for group, color in groups_and_colors:
      mm = m & (tab['Group'] == group)
      x = np.concatenate((D60[mm], D60[mm], D60[mm]))
      y = np.concatenate((PA_star[mm]-360, PA_star[mm], PA_star[mm]+360))
      ax.scatter(x, y, s=50, color=color, alpha=0.7, label=group+' group')
      xx, yy = lab_pos[group]
      for dy in -360, 0, 360:
          ax.text(xx, yy + dy, group+' group', color=color).set_clip_on(True)

  ax.fill_between([xmin, xmax], [0.0, 0.0], [360.0, 360.0], alpha=0.05, color='k')
  ax.set(
      xlim=[xmin, xmax],
      xscale="log",
      # ylim=[-180.0, 360.0 + 180.0],
      ylim=[-178.0, 360 + 180],
      xlabel="Projected distance, arcmin",
      ylabel="Position angle, degrees",
  )
  #ax.legend(loc="lower left", ncol=2, **lgd_kws)
  ax.set_yticks([-180, -90, 0, 90, 180, 270, 360, 450, 540])
  fig.tight_layout()
  fig.savefig(pltfile)
#+END_SRC

#+RESULTS:
[[file:luis-programas/distro-D-PA-class.pdf]]


#+BEGIN_SRC python :return pltfile :results file 
  <<classify-plots-setup>>

  pltfile = 'will-Aout-vs-Ain-class.pdf'
  fig = plt.figure(figsize=(6,6))
  ax = fig.add_subplot(111)
  ax.plot([0.0, 10.0], [0.0, 10.0], '-w', lw=1, zorder=-1)
  for group, color in groups_and_colors:
      mm = m & (tab['Group'] == group)
      plt.scatter(Ain[mm], A[mm], s=20*tab['R_out'][mm], c=color,
                  label=group+' group',
                  alpha=0.8)
  label_sources(source_labels, Ain, A, allmask=m,
                extramask=(A > 2*Ain) | (Ain > 2*A))
  plt.xlabel('Inner shock bluntness, A = Rc/r0')
  plt.ylabel('Outer shock bluntness, A = Rc/r0')
  ax.text(0.05, 0.05, 'Symbol size indicates outer shell radius, R0',
           transform=ax.transAxes, fontsize='x-small')
  ax.set(
      xscale="log",
      yscale="log",
      xlim=[0.66, 15.0],
      ylim=[0.66, 15.0],
  )
  ax.set_aspect('equal')
  ax.legend(loc='upper left', ncol=2, **lgd_kws)
  fig.tight_layout()
  fig.savefig(pltfile)
#+END_SRC

#+RESULTS:
[[file:luis-programas/will-Aout-vs-Ain-class.pdf]]

This diagnostic, Aout vs Ain, is actually not very useful.  A better way of looking at it is the flare parameter that we use below. 

#+BEGIN_SRC python :return pltfile :results file 
  <<classify-plots-setup>>

  pltfile = 'will-A-vs-q-class.pdf'
  fig = plt.figure(figsize=(7,6))
  ax = fig.add_subplot(111)
  for group, color in groups_and_colors:
      mm = m & (tab['Group'] == group)
      plt.scatter(q[mm], A[mm], s=20*tab['R_out'][mm], c=color,
                  label=group+' group',
                  alpha=0.8)
  label_sources(source_labels, q, A, allmask=m, 
                extramask=(A > 5.0) | (A < 1.3) | (q > 0.2) | (q < 4e-3))
  plt.xlabel(r'Bowshock fractional size, $q = r_0/D$')
  plt.ylabel(r'Bowshock planitude, $\Pi = R_c/r_0$')
  ax.text(0.05, 0.05, 'Symbol size indicates outer shell radius, R0',
           transform=ax.transAxes, fontsize='x-small')
  ax.set_xscale('log')
  ax.set_xlim(0.001, 1.0)
  ax.set_yscale('log')
  ax.set_ylim(0.8, 11.0)
  ax.legend(**lgd_kws)
  fig.savefig(pltfile)
#+END_SRC

#+RESULTS:
[[file:luis-programas/will-A-vs-q-class.pdf]]

#+BEGIN_SRC python :return pltfile :results file 
  <<classify-plots-setup>>

  pltfile = 'will-H-vs-q-class.pdf'
  fig = plt.figure(figsize=(7,6))
  ax = fig.add_subplot(111)
  for group, color in groups_and_colors:
      mm = m & (tab['Group'] == group)
      plt.scatter(q[mm], H[mm], s=20*tab['R_out'][mm], c=color,
                  label=group+' group',
                  alpha=0.8)
  label_sources(source_labels, q, H, allmask=m,
                extramask=(H > 0.6) | (H < 0.2) | (q > 0.2) | (q < 4e-3))
  plt.xlabel('Bowshock fractional size, q = r0/D')
  plt.ylabel('Shell relative thickness, H = h/r0')
  plt.text(0.05, 0.05, 'Symbol size indicates outer shell radius, R0',
           transform=ax.transAxes, fontsize='x-small')
  ax.set_xscale('log')
  ax.set_xlim(0.001, 1.0)
  ax.legend(**lgd_kws)
  fig.savefig(pltfile)
#+END_SRC

#+RESULTS:
[[file:luis-programas/will-H-vs-q-class.pdf]]

For the flaring, we take the geometric mean of the values calculated from the center of curvature of the inner and outer shells.  
#+BEGIN_SRC python :return pltfile :results file 
  <<classify-plots-setup>>
  out_fac = (tab['Rc_out'] - tab['h'])/(tab['Rc_in']*tab['h'])
  in_fac = (tab['Rc_in'] + tab['h'])/(tab['Rc_out']*tab['h'])
  Flair = np.sqrt(out_fac*in_fac)*(tab['Rc_out'] - tab['h'] - tab['Rc_in'])
  Flair = np.sign(Flair)*np.sqrt(np.abs(Flair))
  pltfile = 'will-Flare-vs-H-class.pdf'
  fig = plt.figure(figsize=(7,6))
  ax = fig.add_subplot(111)
  for group, color in groups_and_colors:
      mm = m & (tab['Group'] == group)
      plt.scatter(H[mm], Flair[mm], s=20*tab['R_out'][mm], c=color,
                  label=group+' group',
                  alpha=0.8)
  label_sources(source_labels, H, Flair, allmask=m,
                extramask=(Flair > 2.0) | (Flair < -0.5))
  plt.xlabel('Shell relative thickness, H = h/r0')
  plt.ylabel('Shell flaring factor')
  ax.axhline(color='black', lw=0.5)
  ax.text(0.05, 0.05, 'Symbol size indicates outer shell radius, R0',
           transform=ax.transAxes, fontsize='x-small')
  ax.set_xlim(0.0, None)
  ax.set_ylim(-3, 5)
  ax.legend(loc='upper left', **lgd_kws)
  fig.tight_layout()
  fig.savefig(pltfile)
#+END_SRC

#+RESULTS:
[[file:luis-programas/will-Flare-vs-H-class.pdf]]

#+BEGIN_SRC python :return pltfile :results file 
  <<classify-plots-setup>>

  pltfile = 'will-r0-vs-D-class.pdf'
  fig = plt.figure(figsize=(7,4))
  ax = fig.add_subplot(111)
  for group, color in groups_and_colors:
      for thismask, marker, label in [
              (proplyd_mask | maybe_proplyd_mask, 's', group+' group'),
              (not_proplyd_mask, 'D', group+' group (non-proplyd)'),
      ]:
          mm = m & (tab['Group'] == group) & thismask
          n = len(D60[mm])
          if n > 0:
              plt.scatter(D60[mm], tab['R_out'][mm], s=100*H[mm], c=[color]*n,
                          label=label, marker=marker, alpha=0.8, zorder=100)
  label_sources(source_labels, D60, tab['R_out'],
                (tab['R_out'] >= 5.0) | (tab['R_out'] <= 0.8), allmask=m)
  plt.xlabel('Projected distance from Trapezium, D / arcmin')
  plt.ylabel('Bowshock radius, r0 / arcsec')
  plt.text(0.02, 0.02, 'Symbol size indicates shell relative thickness, H = h/r0',
           transform=ax.transAxes, fontsize='x-small')
  ax.set_xlim(0.05, 20.0)
  ax.set_ylim(0.25, 14.0)
  ax.set_xscale('log')
  ax.set_yscale('log')
  ax.minorticks_on()
  ax.grid(which='major', lw=0.4)
  ax.grid(which='minor', lw=0.2)
  ax.legend(loc='upper left', ncol=2, fontsize='x-small',
            ,**lgd_kws)
  fig.savefig(pltfile)
#+END_SRC

#+RESULTS:
[[file:luis-programas/will-r0-vs-D-class.pdf]]

#+BEGIN_SRC python :return pltfile :results file 
  <<classify-plots-setup>>

  pltfile = 'will-H-vs-D-class.pdf'
  fig = plt.figure(figsize=(7,4))
  ax = fig.add_subplot(111)
  for group, color in groups_and_colors:
      for thismask, marker, label in [
              (proplyd_mask | maybe_proplyd_mask, 's', group+' group'),
              (not_proplyd_mask, 'D', group+' group (non-proplyd)'),
      ]:
          mm = m & (tab['Group'] == group) & thismask
          n = len(D60[mm])
          if n > 0:
              plt.scatter(D60[mm], H[mm], s=20*tab['R_out'][mm], c=[color]*n,
                          label=label, marker=marker, alpha=0.8, zorder=100)
  label_sources(source_labels, D60, H, (H > 0.6) | (H < 0.2), allmask=m)
  plt.xlabel('Projected distance from Trapezium, D / arcmin')
  plt.ylabel('Shell relative thickness, H = h/r0')
  plt.text(0.02, 0.02, 'Symbol size indicates outer shell radius, R0',
           transform=ax.transAxes, fontsize='x-small')
  ax.set_xlim(0.05, 20.0)
  ax.set_ylim(0.09, 1.05)
  ax.set_xscale('log')
  ax.set_yscale('log')
  ax.minorticks_on()
  ax.set_yticks(0.1*np.arange(1, 11))
  ax.set_yticklabels([f"{_:.1f}" for _ in 0.1*np.arange(1, 11)])
  ax.grid(which='major', lw=0.4)
  ax.grid(which='minor', lw=0.2)
  # ax.legend(ncol=2, fontsize='x-small',
  #           **lgd_kws)
  fig.savefig(pltfile)
#+END_SRC

#+RESULTS:
[[file:luis-programas/will-H-vs-D-class.pdf]]

#+BEGIN_SRC python :return pltfile :results file 
  <<classify-plots-setup>>
  <<angle-stats>>

  pltfile = 'will-PA-vs-PA-class.pdf'
  sns.set_style('ticks')
  fig = plt.figure(figsize=(7,4))
  ax = fig.add_subplot(111)
  plt.fill_betweenx([-90.0, 90.0], [0.0, 0.0], [90.0, 90.0], zorder=-10, alpha=0.08)
  plt.fill_betweenx([-90.0, 90.0], [180.0, 180.0], [270.0, 270.0], zorder=-10, alpha=0.08)
  plt.fill_betweenx([-90.0, 90.0], [360.0, 360.0], [450.0, 450.0], zorder=-10, alpha=0.08)
  plt.text(45.0, -80.0, 'NE\nquadrant',  ha='center', fontsize='x-small')
  plt.text(135.0, -80.0, 'SE\nquadrant', ha='center', fontsize='x-small')
  plt.text(225.0, -80.0, 'SW\nquadrant', ha='center', fontsize='x-small')
  plt.text(315.0, -80.0, 'NW\nquadrant', ha='center', fontsize='x-small')
  plt.axhline(zorder=-5, color='k', alpha=0.5)
  for group, color in groups_and_colors:
      mm = m & (tab['Group'] == group) & (np.abs(dPA) < 90.0)
      label = '{} group:'.format(group).ljust(10)
      s = '+' if dPA[mm].mean() >= 0.0 else '−'
      label += '{}{:02d}±{:02d}'.format(s, abs(int(dPA[mm].mean())), int(dPA[mm].std()))
      plt.scatter(PA_star[mm], dPA[mm], s=20*tab['R_out'][mm], c=color,
                  label=label, alpha=0.8)
  label_sources(source_labels, PA_star, dPA, np.abs(dPA) > 30.0, allmask=m)
  plt.xlabel('PA of source from Trapezium, deg')
  plt.ylabel('Angle between bowshock axis and radial direction, deg')
  plt.text(0.05, 0.95, 'Symbol size indicates outer shell radius, R0',
           transform=ax.transAxes, fontsize='x-small')
  ax.set_xlim(-30.0, 390.0)
  ax.set_xticks(np.arange(0, 360+1, 45))
  ax.set_yticks([-60, -30, 0, 30, 60])
  ax.set_ylim(-90.0, 90.0)
  ax.legend(prop={'family': 'monospace', 'size': 'x-small'}, **lgd_kws)
  fig.savefig(pltfile)
#+END_SRC

#+RESULTS:
[[file:luis-programas/will-PA-vs-PA-class.pdf]]


#+name: angle-stats
#+BEGIN_SRC python
  def anglestats(PA, dth, th1, th2):
      mask = (PA >= th1) & (PA <= th2) & (np.abs(dth) < 65.0)
      return '({:+.0f} +/- {:.0f})'.format(dth[mask].mean(), dth[mask].std())

  # def anglestats(PA, dth, th1, th2):
  #     mask = (PA >= th1) & (PA <= th2) & (np.abs(dth) < 90.0)
  #     return '({:+.0f} +/- {:.0f})'.format(dth[mask].mean(), dth[mask].std())

#+END_SRC

#+BEGIN_SRC python :return pltfile :results file 
  <<classify-plots-setup>>
  <<angle-stats>>
  ddPA = tab['PA_out'] - tab['PA_in']

  pltfile = 'will-PA-out-vs-in-class.pdf'
  sns.set_style('ticks')
  fig = plt.figure(figsize=(7,4))
  ax = fig.add_subplot(111)
  plt.fill_betweenx([-90.0, 90.0], [0.0, 0.0], [90.0, 90.0], zorder=-10, alpha=0.08)
  plt.fill_betweenx([-90.0, 90.0], [180.0, 180.0], [270.0, 270.0], zorder=-10, alpha=0.08)
  plt.fill_betweenx([-90.0, 90.0], [360.0, 360.0], [450.0, 450.0], zorder=-10, alpha=0.08)
  plt.text(45.0, -80.0, 'NE\nquadrant',  ha='center', fontsize='x-small')
  plt.text(135.0, -80.0, 'SE\nquadrant', ha='center', fontsize='x-small')
  plt.text(225.0, -80.0, 'SW\nquadrant', ha='center', fontsize='x-small')
  plt.text(315.0, -80.0, 'NW\nquadrant', ha='center', fontsize='x-small')
  plt.axhline(zorder=-5, color='k', alpha=0.5)
  for group, color in groups_and_colors:
      mm = m & (tab['Group'] == group) & (np.abs(ddPA) < 90.0)
      n = mm.sum()
      label = '{} group:'.format(group).ljust(10)
      s = '+' if ddPA[mm].mean() >= 0.0 else '−'
      label += '{}{:02d}±{:02d}'.format(s, abs(int(ddPA[mm].mean())), int(ddPA[mm].std()))
      plt.scatter(PA_star[mm], ddPA[mm], s=20*tab['R_out'][mm], color=color,
                  label=label, alpha=0.8)
  label_sources(source_labels, PA_star, ddPA, np.abs(ddPA) > 30.0, allmask=m)
  plt.xlabel('PA of source from Trapezium, deg')
  plt.ylabel('Angle between outer and inner bowshock axes, deg')
  plt.text(0.05, 0.95, 'Symbol size indicates outer shell radius, R0',
           transform=ax.transAxes, fontsize='x-small')
  ax.set_xlim(-30.0, 390.0)
  ax.set_xticks(np.arange(0, 360+1, 45))
  ax.set_yticks([-60, -30, 0, 30, 60])
  ax.set_ylim(-90.0, 90.0)
  ax.legend(prop={'family': 'monospace', 'size': 'x-small'}, **lgd_kws)
  fig.savefig(pltfile)
#+END_SRC

#+RESULTS:
[[file:luis-programas/will-PA-out-vs-in-class.pdf]]





*** Plot the spiral distribution back into real space
This is done in [[file:programas/plot-ll-spiral.py]]

#+begin_src sh
python programas/plot-ll-spiral.py
#+end_src

#+RESULTS:
: INFO: Auto-setting resolution to 300 dpi [aplpy.core]

*** Output a latex table for the catalog paper, which includes the groups
:LOGBOOK:  
CLOCK: [2014-12-05 Fri 12:46]--[2014-12-05 Fri 12:47] =>  0:01
CLOCK: [2014-12-04 Thu 10:10]--[2014-12-04 Thu 13:20] =>  3:10
:END:      
:PROPERTIES:
:ID:       5E3DCF1E-ADD5-4FB7-A212-2B99389B433B
:noweb:    yes
:END:
- First version is one big table.
- This is based on [[file:luis-programas/table-sort.py]] 
- Main change is to make the output precision be uniform for each column
#+name: table-write-setup
#+BEGIN_SRC python
  from  astropy.table import Table
  import astropy.coordinates as coord
  import astropy.units as u
  
  def format_RA(ra):
      return coord.Angle(ra, unit=u.hour).to_string(sep=':', precision=2, pad=True)
  
  def format_DEC(dec):
      s = coord.Angle(dec, unit=u.deg).to_string(sep=':', precision=1, pad=True)
      if s.startswith('-'):
	  return r'$-$' + s[1:]
      else:
	  return s
  
  arctab = Table.read("luis-programas/arcs-summary-classify.ecsv", format = "ascii")
  selected_columns = ['Object', 'Group', 'RA', 'Dec',
		      'D', 'PA_star', 'R_out','R_in', 'Pi_out', 'Pi_in', 'Lambda_out',
		      'Lambda_in', 'h', 'PA_out', 'PA_in',
		      'Star']
  
  latex_columns = ['Object', 'Group', 'RA', 'Dec',
		   r'\(D\)', 'PA',
		   r'\(R_\mathrm{out}\)',
		   r'\(R_\mathrm{in}\)',
		   r'\(\Pi_\mathrm{out}\)',
		   r'\(\Pi_\mathrm{in}\)',
		   r'\(\Lambda_\mathrm{out}\)',
		   r'\(\Lambda_\mathrm{in}\)',
		   r'\(h\)',
		   r'PA\(\mathrm{_{out}}\)',
		   r'PA\(\mathrm{_{in}}\)',
		   'Star ID'
  ]
  
  #Stellar sources
  star = []
  stellar_sources = Table.read("arc-stellar-sources.ecsv", format = "ascii.ecsv")
  for i, j in zip(stellar_sources["ACS"], stellar_sources["RSS"]):
    if i:
	star.append(i)
    else:
	star.append(j)
  
  arctab['Star'] = star
  
  #Adding planitude and alatude
  
  pi_out, pi_in, lambda_out, lambda_in = [], [], [], []
  pi_lambda = Table.read("luis-programas/arcs-sources-Pi-Lambda.ecsv", format = "ascii.ecsv")
  for pi_lambda_ in pi_lambda:
      pi_out.append(pi_lambda_["Pi_out"])
      pi_in.append(pi_lambda_["Pi_in"])
      lambda_out.append(pi_lambda_["Lambda_out"])
      lambda_in.append(pi_lambda_["Lambda_in"])
  
  
  arctab['Pi_out'] = pi_out
  arctab['Pi_in'] = pi_in
  arctab['Lambda_out'] = lambda_out
  arctab['Lambda_in'] = lambda_in
  
  column_formats = {}
  for c, cc in zip(selected_columns, latex_columns):
      if c[0] in 'DRh':
	  column_formats[cc] = '%.2f'
      elif c.startswith('PA'):
	  column_formats[cc] = '%.1f'
      elif c.startswith('Pi'):
	  column_formats[cc] = '%.2f'
      elif c.startswith('Lambda'):
	  column_formats[cc] = '%.2f'
      else:
	  column_formats[cc] = '%s'
  
  column_formats['RA'] = format_RA
  column_formats['Dec'] = format_DEC
  arctab.sort('RA')
  
  #Simbad coincidences 
  # simbad_sources = Table.read("Simbad/ll-stars-arcs-simbad-clean.ecsv", format = "ascii")
  # simbad_sources.sort('RA')
  # arctab['MAIN_ID'] = simbad_sources['MAIN_ID']
  # arctab['SP_TYPE'] = simbad_sources['SP_TYPE']
  
#+END_SRC

#+RESULTS: table-write-setup
: None

#+BEGIN_SRC python :return table_filename :results file
  <<table-write-setup>>
  table_filename = 'catalog-paper/table-sort-full.tex'
  arctab[selected_columns].write(
      table_filename,
      format = "ascii.aastex",
      names=latex_columns,
      formats=column_formats,
      col_align='r'*len(latex_columns),
      fill_values=[('nan', r''), ('0.00', r'')]) 
#+END_SRC 

#+RESULTS:
[[file:catalog-paper/table-sort-full.tex]]

But what we really want is a separate table for each spatial group.  This is what I do next:
#+BEGIN_SRC python
  <<table-write-setup>>
  groupdict = {
      "LV": ("01-LV", "LV knots"),
      "SE": ("02-southeast", "Southeast group"),
      "N": ("03-north", "North group"),
      "NW": ("04-northwest", "Northwest group"),
      "W": ("06-west", "West group"),
      "S": ("07-south", "South group"),
      "*P": ("XX-problematic", "Problematic objects"),
      "*I": ("00-interproplyd", "Interproplyd shells"),
  }
  selected_columns.remove('Group')
  latex_columns.remove('Group')
  for group, (label, cap) in groupdict.items():
      table_filename = 'catalog-paper/table-sort-{}.tex'.format(label)
      m = arctab['Group'] == group
      arctab[m][selected_columns].write(
          table_filename,
          format = "ascii.aastex",
          latexdict=dict(tabletype='deluxetable*'),
          names=latex_columns,
          formats=column_formats,
          col_align='r'*len(latex_columns),
          caption='Shell geometric parameters of {}'.format(cap.lower()),
          fill_values=[('nan', r''), ('0.00', r'')])
      
#+END_SRC

#+RESULTS:
: None


**** TODO Remaining issues with the catalog latex tables [0/6]
- [ ] Do we really need to use deluxetable?
  - There is blank space between the last row and the hline at the end of the table.  It doen't seem easy to avoid this.  I think it would not be there if we used a normal table
- [ ] Could we use booktabs instead?
- [ ] The interproplyd shell table needs to have some more columns
  - The D and PA from the primary
- [ ] We should put in the units for each column
- [ ] And maybe number the columns
- [ ] And add notes to the table, at least for the first one. 

**** COMMENT Scratch area for writing astropy tables as latex

#+BEGIN_SRC python :results output
  from astropy.table import Table
  import astropy.coordinates as coord
  import astropy.units as u
  
  arctab = Table.read("luis-programas/arcs-summary-classify.tab", format = "ascii")
  ra = arctab['RA'][0]
  a = coord.Angle(ra, unit=u.hour)
  print(type(arctab['RA'][0]))
  print(arctab['RA'][0])
  print(a.to_string(sep=':', precision=2, pad=True))
#+END_SRC

#+RESULTS:
: <class 'numpy.str_'>
: 5:35:02.200
: 05:35:02.20

*** [7/7] Output latex figures with the individual sources
:PROPERTIES:
:ID:       F5BEFDCB-D776-4CD5-B6BA-E93439AF7A8F
:END:
:LOGBOOK:  
CLOCK: [2014-12-05 Fri 10:05]--[2014-12-05 Fri 13:25] =>  3:20
:END:      
- This is similar to what [[id:E783982D-1FC7-4E2A-B2FE-C49BE0A5AAF5][we did for the Greece poster]]
- But we want a separate figure for each group
- [X] first version failed because '158-323' is not in =db=
  - this is because it is actually LV5, and called such in ll-data.json
  - Use a similar fix to what we did here: [[id:013B7A01-2624-435F-8B47-B591397F507C][Make a table of Jorge's measurements]]
- [X] Duplicate proplyd: w005-514
- [X] 204-330 should be in the interproplyd group
- [X] Should be using images from ../JorgeBowshocks/ETC
- [X] Some of the sources need to use images that are not from Bally
  - We list these in the following table
- [X] LL7 was missing - it was in a strange folder
  - =~/Dropbox/LuisBowshocks/wfpc2_64_f656n/=
- [X] Copy all the figure files to =catalog-paper/figs=

#+name: non-Bally-images
|  124-131 |  124-131 | Robberto_ACS_5l_f555w |
|  160-350 |  160-350 | PC_mosaic_f502        |
|  162-456 |  162-456 | Robberto_ACS_0l_f658n |
|  163-317 |      LV3 | PC_mosaic_f547        |
|  167-317 |      LV2 | PC_mosaic_f656        |
|  158-323 |      LV5 | PC_mosaic_f656        |
|      LL7 |      LL7 | Robberto_ACS_7l_f658n |
| 4285-458 | 4285-458 | Robberto_ACS_1r_f658n |

#+header: :var extratab=non-Bally-images
#+BEGIN_SRC python :tangle generate-fig-table.py
  import json
  import os
  import shutil
  from astropy.table import Table

  # This is the sample list with the group information (in astropy.table format)
  arctab = Table.read("luis-programas/arcs-summary-classify.ecsv", format = "ascii")
  arctab.sort('RA')

  # and this is the list from ll-data.json -> db, keys
  <<list-of-sources-sorted-by-ra>>

  # Deal with the non-standard images
  nonstandard = {}
  for k, source, image in extratab:
      nonstandard[k] = (source, image)

  pc_will_dir = "../JorgeBowshocks/Jorge_prop/PC-will"
  ll7_dir = "wfpc2_64_f656n"
  bally_dir_template = "j8oc{:02d}010_wcs"
  bally_pdf_template = "{:s}-Bally_{:02d}-images"
  other_pdf_template = "{:s}-{:s}-images"
  fig_template = r'\BowshockFig{{{:s}}}'
  nofig_template = r'\MissingFig{{{:s}}}{{{:02d}}}'

  <<extract-usual-name-of-each-source>>
  <<extract-which-of-bally-fields-contains-source>>

  ## First add new entries to db with the canonical names for LV knots
  dbextra = {}
  for source, data in db.items():
      if "LV" in source or "HST" in source:
          dbextra[data["oname"]] = data
  db.update(dbextra)

  ## and remove w from names in the Object column of the table
  for row in arctab:
      if row['Object'].startswith('w'):
          row['Object'] = row['Object'][1:]

  groupdict = {
      "LV": ("01-LV", "LV knots group"),
      "SE": ("02-southeast", "Southeast group"),
      "N": ("03-north", "North group"),
      "NW": ("04-northwest", "Northwest group"),
      "W": ("06-west", "West group"),
      "S": ("07-south", "South group"),
      "*P": ("XX-problematic", "Problematic objects"),
      "*I": ("00-interproplyd", "Interproplyd shells"),
  }


  NCOLS = 3
  labels = ["abc", "def", "ghi", "jkl", "mno", "pqr", "stu"]

  for group, (label, cap) in groupdict.items():
      figure_filename = 'catalog-paper/fig-stamps-{}.tex'.format(label)

      m = arctab['Group'] == group
      grouptab = arctab[m]
      captiontext = "Stationary arc sources in the {}.".format(cap)
      figs = []
      for k in grouptab['Object']:
          if k in nonstandard:
              fig_dir = ll7_dir if k == 'LL7' else pc_will_dir
              fig_file = other_pdf_template.format(*nonstandard[k])
          elif field(k):
              fig_file = bally_pdf_template.format(name(k), field(k))
              if os.path.isfile(os.path.join(pc_will_dir, fig_file) + '.pdf'):
                  fig_dir = pc_will_dir
              else:
                  fig_dir = bally_dir_template.format(field(k))
          else:
              raise ValueError(k)
          figs.append(fig_template.format(fig_file))
          shutil.copy2(os.path.join(fig_dir, fig_file) + '.pdf', 'catalog-paper/figs')

      thisrow = []
      thistable = []
      for fig in figs:
          thisrow.append(fig)
          if len(thisrow) == NCOLS:
              thistable.append(thisrow)
              thisrow = []
      if thisrow:
          # catch any partial row at the end
          thistable.append(thisrow)

      def output_row(row):
          return " & ".join(row) + r" \\"

      def format_abc(abc):
          return [r"\raiselabel{(\textit{" + s + "})}" for s in abc]

      def output_figtable(table):
          result = r"\begin{figure*}" + "\n"
          result += r"  \setlength\tabcolsep{\figstampcolsep}" + "\n"
          result += r"  \begin{tabular}{" + "l "*NCOLS + "}" + "\n"
          for row, abc in zip(table, labels):
              result += "    " + output_row(row) + "\n"
              result += "    " + output_row(format_abc(abc[:len(row)])) + "\n"
          result += r"  \end{tabular}" + "\n"
          result += r"  \caption{" + captiontext + "}" + "\n"
          result += r"  \label{fig:stamps-" + group + "}" + "\n"
          result += r"\end{figure*}" + "\n"
          return result

      with open(figure_filename, 'w') as f:
          f.write(output_figtable(thistable))
#+END_SRC

#+RESULTS:

** New images of each group
:PROPERTIES:
:header-args:      :dir /Users/will/Work/OrionTreasury/acs
:ID:       171A91D5-C0D6-4411-9DB2-C1AB76D18E61
:END:



*** Stitch together bespoke fields for each group figure
+ Many of the groups fall on awkward boundaries of the Robberto strips
+ So it would be better to stitch together images using ~reproject~ that have exactly the coverage we want
  + This has the disadvantage that we will lose a little resolution in the reprojection
  + But on the other hand it will allow us to use for example the Bally fields in places where they make sense
+ I had to get some Robberto fields that were missing
  + https://archive.stsci.edu/pub/hlsp/orion/images/acs/
**** Proof of concept: NW group
+ It would be good to extend the FOV beyond what we have from ~strip5r~
  + We could get the frothy shocks region better
+ Probably ~0l~ will cover it
+ Also Bally fields 1, 9, 10
  + But 10 has no ~_wcs~ version
***** DONE Make a template HDU to reproject onto
CLOSED: [2021-09-09 Thu 18:16]
This is done in [[file:reproject-images/fits-image-from-ds9-box.py]]
***** DONE Mask out problematic areas of individual images
CLOSED: [2021-09-09 Thu 18:16]
+ Some of the Bally fields in particular have artefacts close to the sharp edges
+ We could deal with this by some sort of dilation of the NaN areas
  + But the boundary area is many pixels in some cases
+ A more general solution would be to define areas with DS9 regions
+ This could also be used on areas where the Bally field has geometric distortions that lead to double stars when combining
+ These are now used in the combination phase below: [[id:833C0C2E-A06A-4EDD-A063-5495D01C40BE][Combine the individual images to make a "best" mosaic]]
  
***** Reproject all the images
#+name: nw-reproject-files
| Robb-13  | 5r |
| Robb-13  | 0l |
| Robb-13  | 0r |
| Robb-13  | 3l |
| Bally-06 | 01 |
| Bally-06 | 02 |
| Bally-06 | 09 |


#+name: nw-subset
| Robb-13 | 0r |

#+name: reproject-acs
#+header: :var INFILES=nw-subset NEWFIELD="NW-Field"
#+begin_src python :results output :tangle reproject-images/test-reproject.py
  from pathlib import Path
  import numpy as np
  from astropy.io import fits
  from reproject import reproject_interp

  base_path = Path("/Users/will/Work/OrionTreasury/")

  def get_filename(dataset, field, filter):
      if dataset == "Robb-13":
          return base_path / "acs" / f"hlsp_orion_hst_acs_strip{field}_{filter}_v1_drz.fits"
      elif dataset == "Bally-06":
          if filter == "f658n":
              return base_path / "Bally-ACS" / f"j8oc{field:02d}010_wcs.fits"
          else:
              return None
      else:
          return None

  hdu0 = fits.open(f"blank-{NEWFIELD}.fits")[0]
  FILTERS = "f658n", "f555w", "f435w"
  for dataset, field in INFILES:
      for filter in FILTERS:
          fn = get_filename(dataset, field, filter)
          if fn is not None:
              hdulist = fits.open(fn)
              hdu = hdulist["SCI"]
              # Remove any unwanted SIP keywords
              del hdu.header["A_*"]
              del hdu.header["B_*"]
              # switch zeros for NaN
              hdu.data = np.where(
                  hdu.data > 0.0,
                  hdu.data,
                  np.nan,
              )
              newdata, _ = reproject_interp(hdu, hdu0.header, order="nearest-neighbor")
              newhdu = fits.PrimaryHDU(header=hdu0.header, data=newdata)
              try:
                  field = f"{field:02d}"
              except:
                  pass
              newfn = f"{NEWFIELD}-{dataset}-{field}-{filter}.fits"
              newhdu.writeto(newfn, overwrite=True)
          else:
              pass

#+end_src

#+begin_src sh :dir reproject-images :results verbatim
python test-reproject.py
#+end_src

#+RESULTS:
***** Combine the individual images to make a "best" mosaic
:PROPERTIES:
:ID:       833C0C2E-A06A-4EDD-A063-5495D01C40BE
:END:

#+begin_src python :tangle reproject-images/make-best-image.py
  from pathlib import Path
  import sys
  from astropy.io import fits
  from astropy.wcs import WCS
  import numpy as np
  import regions


  field = sys.argv[1]
  filter = sys.argv[2]

  files = Path(".").glob(f"{field}-*-{filter}.fits")

  imlist = []
  for file in files:
      if "-best-" in str(file): continue
      hdu = fits.open(file)[0]
      regfile = str(file).replace(".fits", "-exclude.reg")
      try:
          regs = regions.read_ds9(regfile)
          print("Masking:", regs)
          w = WCS(hdu.header)
          shape = hdu.data.shape
          for reg in regs:
              m = reg.to_pixel(w).to_mask().to_image(shape).astype(bool)
              hdu.data[m] = np.nan
      except:
          pass
      imlist.append(hdu.data)
  imstack = np.stack(imlist)
  imbest = np.nanmin(imstack, axis=0)
  fits.PrimaryHDU(
      header=hdu.header,
      data=imbest,
  ).writeto(f"{field}-best-{filter}.fits", overwrite=True)

#+end_src


Working OK, but I need the ability to exclude some bits of the Bally images - but not all!

***** New program for the spatial filtering
+ The previous version was specialized to the Robberto files
+ Here is something more general
+ But we also remove the ability to work on sub-images, since we assume that we already made a sub-image

#+name: smooth-image
#+BEGIN_SRC python :tangle reproject-images/smooth-sharp.py
  import click
  import numpy as np
  from astropy.io import fits
  from astropy.convolution import convolve_fft, Gaussian2DKernel

  @click.command()
  @click.argument("infile")
  @click.option("--width", default=20, show_default=True,
                help="Width of Gaussian smoothing kernel in pixels")
  @click.option("--suffix", default="",
                help="Extra id string to add to output filename")
  @click.option("--twopass/--no-twopass", default=False, show_default=True,
                help="Whether to do a second pass for eliminating negative halos")
  @click.option("--threshold", default=1.5, show_default=True,
                help="Mask out relative brightnesses higher than this in second pass")
  def main(infile, width, suffix, twopass, threshold):
      """
      Do high-pass filtering of Fits file INFILE
      """
      hdu = fits.open(infile)[0]

      im = hdu.data

      gauss_kernel = Gaussian2DKernel(width)
      smoothim = convolve_fft(im, gauss_kernel, allow_huge=True)
      sharpim = im/smoothim

      if twopass:
          mask = (sharpim > threshold) | (im == 0.0)
          im[mask] = np.nan
          print('Starting second pass: N(masked) =', mask.sum())
          smoothim = convolve_fft(im, gauss_kernel, normalize_kernel=True, allow_huge=True)
          sharpim = im/smoothim

      outhdu = fits.PrimaryHDU(data=smoothim, header=hdu.header)

      outfile = infile.replace(".fits", f"_smooth_{width}{suffix}.fits")
      outhdu.writeto(outfile, overwrite=True)

      outhdu.data = sharpim
      outfile = outfile.replace("_smooth_", "_sharp_")
      outhdu.writeto(outfile, overwrite=True)

  if __name__ == "__main__":
      main()

#+END_SRC

#+begin_src shell :dir reproject-images :results verbatim
python smooth-sharp.py --help
#+end_src

#+RESULTS:
#+begin_example
Usage: smooth-sharp.py [OPTIONS] INFILE

  Do high-pass filtering of Fits file INFILE

Options:
  --width INTEGER           Width of Gaussian smoothing kernel in pixels
                            [default: 20]
  --suffix TEXT             Extra id string to add to output filename
  --twopass / --no-twopass  Whether to do a second pass for eliminating
                            negative halos  [default: no-twopass]
  --threshold FLOAT         Mask out relative brightnesses higher than this in
                            second pass  [default: 1.5]
  --help                    Show this message and exit.
#+end_example

***** Example of the spatial filtering
#+begin_src shell :eval no
time python smooth-sharp.py NW-Field-best-f658n.fits --width 20 --twopass --threshold 3.0
#+end_src


***** Convert to color image to include in figure
+ Looks like ~plt.imsave()~ from matplotlib is the way to go
#+begin_src python :tangle reproject-images/fits2image.py
  from matplotlib import pyplot as plt
  from astropy.io import fits
  import click

  @click.command()
  @click.argument("fitsname")
  @click.option("--vmin", default=0.5)
  @click.option("--vmax", default=1.5)
  @click.option("--format", default="png")
  @click.option("--verbose/--no-verbose", default=False)
  def fits2image(fitsname, vmin, vmax, format, verbose):
      """
      Convert FITSNAME.fits to an image
      """
      hdu = fits.open(fitsname)[0]
      imname = fitsname.replace(".fits", f".{format}")
      plt.imsave(imname, hdu.data, vmin=vmin, vmax=vmax, cmap="gray", origin="lower")
      if verbose:
          print("Saved", imname)

  if __name__ == "__main__":
      fits2image()


#+end_src

#+RESULTS:

#+begin_src shell :dir reproject-images :results verbatim
  python fits2image.py NW-Field-best-f658n_sharp_100.fits --vmin 0.9 --vmax 1.2 --verbose
  python fits2image.py NW-Field-best-f555w_sharp_100.fits --vmin 0.9 --vmax 1.2 --verbose
  python fits2image.py NW-Field-best-f435w_sharp_100.fits --vmin 0.9 --vmax 1.2 --verbose
  convert -verbose NW-Field-best-f{658n,555w,435w}_sharp_100.png -channel RGB -combine NW-Field-best-RGB_sharp_100.png
#+end_src

#+RESULTS:
: Saved NW-Field-best-f658n_sharp_100.png
: Saved NW-Field-best-f555w_sharp_100.png
: Saved NW-Field-best-f435w_sharp_100.png
: NW-Field-best-f658n_sharp_100.png=>NW-Field-best-RGB_sharp_100.png PNG 5896x4300 5896x4300+0+0 8-bit sRGB 25.8441MiB 12.950u 0:09.030





**** [11/11] The trapezium group
+ We have lots of images to choose from here
  + The original PC mosaic in many filters
    + But unfortunately, the only one that is well aligned to Robberto frame is [O III]
    + It would be a lot of work to repeat this for the other filters
  + The Bally 2015 H alpha and NUV  images
  + The ACS Ramp 2004-01 images (includes a wider [O III] filter)
  + The Robberto H alpha images



***** DONE Copy relevant images 
CLOSED: [2021-09-14 Tue 13:45]
+ Put them in [[file:reproject-images/Trap/]]
+ I got the ones from the [[file:~/Dropbox/OrionHST-2012/Combine/]] project

***** DONE Preprocess WFC3 image before sharpening
CLOSED: [2021-09-15 Wed 12:18]
+ This has a gap between two halves of the detector, which has garbage pixels at its boundaries
+ We can also mask out values of zero and >= 80 (saturated)

#+begin_src python :dir reproject-images/Trap 
  from pathlib import Path
  import numpy as np
  from astropy.wcs import WCS
  from astropy.io import fits
  import regions

  infile = "icaz01040_drz.fits"
  datapath = Path("/Users/will/Dropbox/OrionBally-2016/data-2016-01-11")
  hdu = fits.open(datapath / infile)["SCI"]

  w = WCS(hdu.header)
  shape = hdu.data.shape
  regs = regions.read_ds9("trap-wfc3-ha-gap.reg")

  # Start with empty mask
  boxmask = np.zeros(shape, dtype=bool)
  for reg in regs:
      # Add in each of the box regions from the file
      m = reg.to_pixel(w).to_mask().to_image(shape).astype(bool)
      boxmask = boxmask | m

  mask = boxmask | (hdu.data == 0.0) | (hdu.data >= 75.0)
  hdu.data[mask] = np.nan


  outfile = infile.replace("_drz.fits", "_fix.fits")
  hdu.writeto(outfile, overwrite=True)
#+end_src

#+RESULTS:
: None


***** DONE Reproject to a common frame
CLOSED: [2021-09-14 Tue 13:48]
+ Might as well use the same method as above
#+begin_src shell :dir reproject-images/Trap :eval no
python ../fits-image-from-ds9-box.py trap-reproject-field.reg
#+end_src

#+begin_src shell :dir reproject-images/Trap :eval no
python ../fits-image-from-ds9-box.py trap-reproject-field.reg
#+end_src

#+begin_src python :results output :tangle reproject-images/Trap/trap-reproject.py
  from pathlib import Path
  import numpy as np
  from astropy.io import fits
  from reproject import reproject_interp

  base_path = Path(".")

  hdu0 = fits.open("blank-Trap-Field.fits")[0]

  infiles = base_path.glob("*-align-rob_drz_sci.fits")
  for fn in infiles:
      hdulist = fits.open(fn)
      hdu = hdulist[0]
      # Remove any unwanted SIP keywords
      del hdu.header["A_*"]
      del hdu.header["B_*"]
      # switch zeros for NaN
      hdu.data = np.where(
          hdu.data > 0.0,
          hdu.data,
          np.nan,
      )
      newdata, _ = reproject_interp(hdu, hdu0.header, order="nearest-neighbor")
      newhdu = fits.PrimaryHDU(header=hdu0.header, data=newdata)
    
      newfn = "Trap-field-" + str(fn).replace("-align-rob_drz_sci.fits", ".fits")
      newhdu.writeto(newfn, overwrite=True)

#+end_src

#+begin_src sh :dir reproject-images/Trap :results verbatim
python trap-reproject.py
#+end_src

#+RESULTS:

Repeat for Ha fields

#+begin_src python :results output :tangle reproject-images/Trap/trap-reproject-ha.py
  from pathlib import Path
  import numpy as np
  from astropy.io import fits
  from reproject import reproject_interp
  import sys
  sys.path.append("../../../wcsfile")
  import wcsfile


  base_path = Path(".")

  hdu0 = fits.open("blank-Trap-Field.fits")[0]

  hdu1 = fits.open(
      "/Users/will/Work/OrionTreasury/acs/hlsp_orion_hst_acs_strip0l_f658n_v1_drz.fits"
  )["SCI"]

  hdu2 = fits.open("icaz01040_fix.fits")["SCI"]
  hdu2.header.update(**wcsfile.read("trap-south-align-robberto.wcs"))

  for hdu, suffix in [
          [hdu1, "ACS-2005"],
          [hdu2, "WFC3-2016"],
  ]:
      # Remove any unwanted SIP keywords
      del hdu.header["A_*"]
      del hdu.header["B_*"]
      # switch zeros for NaN
      hdu.data = np.where(
          hdu.data > 0.0,
          hdu.data,
          np.nan,
      )
      newdata, _ = reproject_interp(hdu, hdu0.header, order="nearest-neighbor")
      newhdu = fits.PrimaryHDU(header=hdu0.header, data=newdata)

      newfn = f"Trap-field-ha-{suffix}.fits"
      newhdu.writeto(newfn, overwrite=True)

#+end_src

#+begin_src sh :dir reproject-images/Trap :results verbatim
python trap-reproject-ha.py
#+end_src

#+RESULTS:


***** DONE Pre-process the ramp images before sharpening
CLOSED: [2021-09-14 Tue 13:47]
+ We want to avoid the effect of the diffraction spike as much as we can
+ So we make a mask that hopefully 

#+begin_src python :dir reproject-images/Trap
  import numpy as np
  from astropy.wcs import WCS
  from astropy.io import fits
  import regions

  # Trap-field-fr505n-5007.fits
  hdu1 = fits.open("Trap-field-fr505n-5007.fits")[0]
  hdu2 = fits.open("Trap-field-fr505n-4959.fits")[0]

  w = WCS(hdu1.header)
  shape = hdu1.data.shape
  regs = regions.read_ds9("trap-fr505n-saturation.reg")

  # Start with empty mask
  boxmask = np.zeros(shape, dtype=bool)
  for reg in regs:
      # Add in each of the box regions from the file
      m = reg.to_pixel(w).to_mask().to_image(shape).astype(bool)
      boxmask = boxmask | m

  ratio = hdu1.data / hdu2.data
  mean = 0.5 * (hdu1.data + hdu2.data)

  # Use a criterion on the ratio and mean to try and get all of the saturation spike within the boxes
  mask = boxmask & (np.abs(ratio - 1.0) <= 0.15) & (mean > 100.0)
  # And then a tighter criterion to get any other fully saturated parts
  mask = mask | ((np.abs(ratio - 1.0) <= 1e-5) & (mean > 100.0))
  hdu1.data[mask] = np.nan
  hdu2.data[mask] = np.nan

  hdu1.writeto("Trap-field-fr505n-5007-mask.fits", overwrite=True)
  hdu2.writeto("Trap-field-fr505n-4959-mask.fits", overwrite=True)
#+end_src

#+RESULTS:
: None



***** DONE Do the sharpening of the ramp and PC mosaic images
CLOSED: [2021-09-14 Tue 13:47]
+ Threshold of 5 is compromise between:
  + not losing too much of the bright proplyd peaks
  + but avoiding a big halo dip around the bright stars and saturation spikes
#+begin_src shell :eval no :dir reproject-images/Trap
    time python ../smooth-sharp.py Trap-field-f502n-allpc.fits --width 20 --twopass --threshold 5.0
    time python ../smooth-sharp.py Trap-field-fr505n-5007-mask.fits --width 20 --twopass --threshold 5.0
    time python ../smooth-sharp.py Trap-field-fr505n-4959-mask.fits --width 20 --twopass --threshold 5.0
#+end_src
+ Repeat for the Ha images
#+begin_src shell :eval no :dir reproject-images/Trap
  time python ../smooth-sharp.py Trap-field-ha-ACS-2005.fits --width 20 --twopass --threshold 5.0
  time python ../smooth-sharp.py Trap-field-ha-WFC3-2016.fits --width 20 --twopass --threshold 5.0
#+end_src  

***** DONE Combine two of the ACS ramp images to eliminate cosmic rays
CLOSED: [2021-09-14 Tue 13:47]
+ Taking the minimum of the 5007 and 4959 images seems to work
#+begin_src python :dir reproject-images/Trap
  import numpy as np
  from astropy.io import fits

  # Trap-field-fr505n-5007.fits
  hdu1 = fits.open("Trap-field-fr505n-5007-mask_sharp_20.fits")[0]
  hdu2 = fits.open("Trap-field-fr505n-4959-mask_sharp_20.fits")[0]

  # hdu1.data = np.min(np.stack((hdu1.data, hdu2.data, hdu3.data)), axis=0)
  hdu1.data = np.min(np.stack((hdu1.data, hdu2.data)), axis=0)
  hdu1.writeto("Trap-field-best-ramp-oiii_sharp_20.fits", overwrite=True)
#+end_src

#+RESULTS:
: None


***** DONE Divide the sharp [O III] images
CLOSED: [2021-09-14 Tue 13:47]

#+begin_src python :dir reproject-images/Trap
  from astropy.io import fits

  hdu1 = fits.open("Trap-field-best-ramp-oiii_sharp_20.fits")[0]
  hdu2 = fits.open("Trap-field-f502n-allpc_sharp_20.fits")[0]

  hdu1.data /= hdu2.data
  hdu1.writeto("Trap-field-ratio-f502n-ramp_sharp_20.fits", overwrite=True)
#+end_src

#+RESULTS:
: None

#+begin_src python :dir reproject-images/Trap
  from astropy.io import fits

  hdu1 = fits.open("Trap-field-ha-WFC3-2016_sharp_20.fits")[0]
  hdu2 = fits.open("Trap-field-ha-ACS-2005_sharp_20.fits")[0]

  hdu1.data /= hdu2.data
  hdu1.writeto("Trap-field-ratio-ha-2016-2005_sharp_20.fits", overwrite=True)
#+end_src

#+RESULTS:
: None


***** DONE Make an RGB image of Trapezium proper motion
CLOSED: [2021-09-14 Tue 13:47]

#+begin_src shell :dir reproject-images/Trap :results verbatim
  python ../fits2image.py Trap-field-best-ramp-oiii_sharp_20.fits --vmin 0.7 --vmax 1.5 --verbose
  python ../fits2image.py Trap-field-f502n-allpc_sharp_20.fits --vmin 0.7 --vmax 1.5 --verbose
  python ../fits2image.py Trap-field-ratio-f502n-ramp_sharp_20.fits --vmin 0.5 --vmax 1.5 --verbose
  convert -verbose Trap-field-f502n-allpc_sharp_20.png Trap-field-best-ramp-oiii_sharp_20.png Trap-field-ratio-f502n-ramp_sharp_20.png -channel RGB -combine Trap-field-oiii-motion-RGB_sharp_20.png
#+end_src

#+RESULTS:
: Saved Trap-field-best-ramp-oiii_sharp_20.png
: Saved Trap-field-f502n-allpc_sharp_20.png
: Saved Trap-field-ratio-f502n-ramp_sharp_20.png
: Trap-field-f502n-allpc_sharp_20.png=>Trap-field-oiii-motion-RGB_sharp_20.png PNG 1171x1224 1171x1224+0+0 8-bit sRGB 1.41371MiB 3.730u 0:00.898

Repeat for  H alpha

#+begin_src shell :dir reproject-images/Trap :results verbatim
  python ../fits2image.py Trap-field-ha-ACS-2005_sharp_20.fits --vmin 0.7 --vmax 1.5 --verbose
  python ../fits2image.py Trap-field-ha-WFC3-2016_sharp_20.fits --vmin 0.7 --vmax 1.5 --verbose
  python ../fits2image.py Trap-field-ratio-ha-2016-2005_sharp_20.fits --vmin 0.5 --vmax 1.5 --verbose
  convert -verbose Trap-field-ha-ACS-2005_sharp_20.png Trap-field-ha-WFC3-2016_sharp_20.png Trap-field-ratio-ha-2016-2005_sharp_20.png -channel RGB -combine Trap-field-ha-motion-RGB_sharp_20.png
#+end_src

#+RESULTS:
: Saved Trap-field-ha-ACS-2005_sharp_20.png
: Saved Trap-field-ha-WFC3-2016_sharp_20.png
: Saved Trap-field-ratio-ha-2016-2005_sharp_20.png
: Trap-field-ha-ACS-2005_sharp_20.png=>Trap-field-ha-motion-RGB_sharp_20.png PNG 1171x1224 1171x1224+0+0 8-bit sRGB 1076810B 4.270u 0:01.341


***** DONE Calculate the proper motions with FLCT
CLOSED: [2021-09-14 Tue 19:45]
#+begin_src python :dir . :results output silent
  import sys
  sys.path.append("../../Source/pyflct")
  import os
  from pathlib import Path
  import numpy as np
  import pyflct
  from astropy.io import fits
  from astropy.wcs import WCS

  os.environ["PATH"] = ":".join((os.environ["PATH"], "/Users/will/.local/bin"))
  datadir = Path("reproject-images/Trap")

  # h1, = fits.open(datadir / "Trap-field-f502n-allpc_sharp_20.fits")
  # h2, = fits.open(datadir / "Trap-field-best-ramp-oiii_sharp_20.fits")
  h1, = fits.open(datadir / "Trap-field-f502n-allpc.fits")
  h2, = fits.open(datadir / "Trap-field-fr505n-5007-mask.fits")

  data_scale = h1.data.max()
  m = ~np.isfinite(h2.data)
  h2.data = np.where(m, h1.data, h2.data)
  m = ~np.isfinite(h1.data)
  h1.data = np.where(m, h2.data, h1.data)

  sigma = 5.0
  vx, vy, vm = pyflct.flct(h1.data.T, h2.data.T,
                           deltat=1.0, deltas=1.0, sigma=sigma,
                           thresh=0.1/data_scale,
                           )
  vx[vm==0] = np.nan
  vy[vm==0] = np.nan

  fits.PrimaryHDU(
      header=h1.header,
      data=vx.T,
  ).writeto(datadir / f"Trap_field_oiii_1994_2004_vx_sig{int(sigma):02d}.fits", overwrite=True)

  fits.PrimaryHDU(
      header=h1.header,
      data=vy.T,
  ).writeto(datadir / f"Trap_field_oiii_1994_2004_vy_sig{int(sigma):02d}.fits", overwrite=True)
#+end_src

****** Make a figure of the proper motions
#+begin_src python :results file :return figfile :dir .
  from pathlib import Path
  import numpy as np
  from matplotlib import pyplot as plt
  import matplotlib.patheffects as path_effects
  import seaborn as sns
  from astropy.io import fits
  from astropy.wcs import WCS

  figdir = Path("reproject-images/Trap")
  datadir = figdir
  sigma = 10.0
  prefix = "Trap_field_oiii_1994_2004"
  s0 = f"sig{int(sigma):02d}"


  figfile = figdir / f"{prefix}_{s0}_proper_motions.jpg"

  hdu, = fits.open(datadir / "Trap-field-f502n-allpc_sharp_20.fits")
  w = WCS(hdu)
  im = hdu.data
  vx = fits.open(datadir / f"{prefix}_vx_{s0}.fits")[0].data
  vy = fits.open(datadir / f"{prefix}_vy_{s0}.fits")[0].data
  vv = np.hypot(vx, vy)
  pa = np.rad2deg(np.arctan2(-vx, vy)) % 360


  vx[vv > 7.0] = np.nan
  vx[vv < 0.1] = np.nan
  vx[(im < 1.02)] = np.nan 
  vx[(im > 3.0)] = np.nan 


  ny, nx = im.shape
  X, Y = np.meshgrid(np.arange(nx), np.arange(ny))


  fig, ax = plt.subplots(figsize=(4.5, 4), subplot_kw=dict(projection=w))
  ax.imshow(im, vmin=0.5, vmax=1.5, origin="lower", cmap="gray_r")
  step = slice(3, None, 5), slice(4, None, 5)

  Q = ax.quiver(X[step], Y[step], vx[step], vy[step], pivot="middle",
                headwidth=4, headlength=6, minlength=0.01,
                units="xy", scale=0.3, width=1.5, minshaft=2.0, color="r", alpha=1.0)
  Q.set_path_effects(
      [
          path_effects.PathPatchEffect(
              edgecolor='white', linewidth=0.1, facecolor='red', capstyle="projecting",
          ),
      ]
  )
  QK = ax.quiverkey(Q, 0.1, 0.2, 7.0,
               "70 km/s", labelcolor="red",
               fontproperties=dict(size=6))
  QK.set_path_effects(
      [
          path_effects.PathPatchEffect(
              edgecolor='red', linewidth=0.1, facecolor='red', capstyle="projecting",
          ),
      ]
  )
  ax.set(
      xlabel="RA",
      ylabel="Dec",
  )
  fig.tight_layout(rect=(0.2, 0.1, 1.0, 1.0))
  fig.savefig(figfile, dpi=1200)
#+end_src

#+RESULTS:
[[file:reproject-images/Trap/Trap_field_oiii_1994_2004_sig10_proper_motions.jpg]]


***** DONE Make an annotated figure for the paper
CLOSED: [2021-10-19 Tue 11:48]
This is mainly done I think 
***** DONE [#C] Ratios between the ramp filters
CLOSED: [2021-09-14 Tue 13:45]


#+begin_src python :dir reproject-images/Trap
  from astropy.io import fits

  hdu1 = fits.open("fr505n-5007-align-rob_drz_sci.fits")[0]
  hdu2 = fits.open("fr505n-4959-align-rob_drz_sci.fits")[0]

  hdu1.data /= hdu2.data
  hdu1.writeto("fr505n-ratio-5007-4959.fits", overwrite=True)
#+end_src

#+RESULTS:
: None


Have to shift one of the images to align better

#+begin_src python :dir reproject-images/Trap
  import numpy as np
  from astropy.io import fits

  hdu1 = fits.open("fr505n-5007-align-rob_drz_sci.fits")[0]
  hdu2 = fits.open("fr459m-5007-align-rob_drz_sci.fits")[0]
  hdu1.data = np.roll(hdu1.data, shift=(-1, 1), axis=(0, 1)) / hdu2.data
  hdu1.writeto("fr505n-ratio-fr459m.fits", overwrite=True)
#+end_src

#+RESULTS:
: None

But the alignment is not perfect and these are no use
**** DONE [5/5] The south group (inner portion)
CLOSED: [2021-10-23 Sat 13:54]
***** DONE S near: Make the blank image of the field
CLOSED: [2021-10-19 Tue 21:21]
#+begin_src sh :dir reproject-images :results verbatim
  python fits-image-from-ds9-box.py s-near-reproject-field.reg
#+end_src
***** DONE S near: Choose which images to use and reproject them
CLOSED: [2021-10-19 Tue 22:22]
+ Robberto: 1l, 2l, 7l
+ Bally: 6, 7, 8, 13, 14, 15
  + 15 and 13 do not have wcs versions currently,
  + but maybe we could get away with not using them
  + I don't recall how easy it was to do the wcs on these

#+name: s-near-reproject-files
| Robb-13  | 1l |
| Robb-13  | 2l |
| Robb-13  | 7l |
| Bally-06 | 06 |
| Bally-06 | 07 |
| Bally-06 | 08 |
| Bally-06 | 14 |

#+call: reproject-acs[:dir reproject-images](INFILES=s-near-reproject-files, NEWFIELD="S-Near-Field")

#+RESULTS:

***** DONE S near: Stitch them together
CLOSED: [2021-10-19 Tue 22:22]
#+begin_src sh :dir reproject-images :eval no
python make-best-image.py S-Near f435w 
python make-best-image.py S-Near f555w 
python make-best-image.py S-Near f658n 
#+end_src
***** DONE S near: High-pass filtering
CLOSED: [2021-10-19 Tue 23:19]
#+begin_src sh :dir reproject-images :eval no
for f in f658n f555w f435w; do time python smooth-sharp.py S-Near-best-$f.fits --width 100 --twopass --threshold 3.0; done
#+end_src
***** S near: Making image file
#+begin_src shell :dir reproject-images :results verbatim
  python fits2image.py S-Near-best-f658n_sharp_100.fits --vmin 0.9 --vmax 1.2 --verbose
  python fits2image.py S-Near-best-f555w_sharp_100.fits --vmin 0.9 --vmax 1.2 --verbose
  python fits2image.py S-Near-best-f435w_sharp_100.fits --vmin 0.9 --vmax 1.2 --verbose
  convert -verbose S-Near-best-f{658n,555w,435w}_sharp_100.png -channel RGB -combine S-Near-best-RGB_sharp_100.png
#+end_sc

#+RESULTS:
: Saved S-Near-best-f658n_sharp_100.png
: Saved S-Near-best-f555w_sharp_100.png
: Saved S-Near-best-f435w_sharp_100.png
: S-Near-best-f658n_sharp_100.png=>S-Near-best-RGB_sharp_100.png PNG 10058x6546 10058x6546+0+0 8-bit sRGB 97.5458MiB 26.390u 0:20.994

***** DONE S near: Annotating
CLOSED: [2021-10-23 Sat 13:53]
+ Resultant figure is [[file:combo-highpass-s.pdf]]

**** TODO [4/6] The west group (outer portion)
This is 300 to 600 arcsec to the west of the Trapezium
***** DONE W far: Make the blank image of the field
CLOSED: [2021-11-22 Mon 12:20]

First, we have selected a generous box around these sources in SAOImage. This is how we save it. Note that we need to explicitly set the coordinates to WCS first.
#+begin_src sh :dir reproject-images : results verbatim
  xpaset -p acs regions system wcs
  xpaset -p acs regions save "$PWD/w-far-reproject-field.reg"
#+end_src

#+RESULTS:

#+begin_src sh :dir reproject-images :results verbatim
  python fits-image-from-ds9-box.py w-far-reproject-field.reg
#+end_src

#+RESULTS:

#+begin_src sh :dir reproject-images : results verbatim
  xpaset -p acs file "$PWD/blank-W-Far-Field.fits"
#+end_src

#+RESULTS:

That looks good

***** DONE W far: Choose which images to use and reproject them 
CLOSED: [2021-11-22 Mon 12:54]
+ Robberto: 0r, 1r, 2r, 1l
+ Bally: 09, 16, 17, 18, 24, 25
  + 25 is missing the wcs version

#+name: w-far-reproject-files
| Robb-13  | 0r |
| Robb-13  | 1l |
| Robb-13  | 1r |
| Robb-13  | 2r |
| Bally-06 | 16 |
| Bally-06 | 17 |
| Bally-06 | 18 |
| Bally-06 | 24 |

#+call: reproject-acs[:dir reproject-images](INFILES=w-far-reproject-files, NEWFIELD="W-Far-Field")

#+RESULTS:

This took a long time (30 minutes) because the images are enormous.

#+name: w-far-reproject-extras
| Bally-06 | 09 |
| Bally-06 | 25 |

#+call: reproject-acs[:dir reproject-images](INFILES=w-far-reproject-extras, NEWFIELD="W-Far-Field")

#+RESULTS:

***** DONE W far: Stitch them together
CLOSED: [2021-11-22 Mon 13:18]
#+begin_src sh :dir reproject-images :eval no
  python make-best-image.py W-Far f435w 
  python make-best-image.py W-Far f555w
  python make-best-image.py W-Far f658n 
#+end_src

We also do one that combines the f435w and f555w filters, which helps in the elimination of the cosmic rays

#+begin_src sh :dir reproject-images :eval no
  time python make-best-image-2filter.py W-Far f435w f555w
#+end_src

***** DONE W far: High-pass filtering
CLOSED: [2021-11-22 Mon 22:04]
#+begin_src sh :dir reproject-images :eval no
  for f in f658n f435w-and-f555w; do time python smooth-sharp.py W-Far-best-$f.fits --width 500 --twopass --threshold 3.0; done
#+end_src
***** TODO W far: Making image file
#+begin_src shell :dir reproject-images :results verbatim
  python fits2image.py W-Far-best-f658n_sharp_500.fits --vmin 0.6 --vmax 2.0 --verbose
  #+end_src
  
  #+begin_src shell :dir reproject-images :results verbatim
  python fits2image.py W-Far-best-f658n.fits --vmin 0.4 --vmax 5.0 --verbose
  #+end_src

  #+RESULTS:
  : Saved W-Far-best-f658n.png
  
  #+begin_src shell :dir reproject-images :results verbatim
  python fits2image.py W-Far-best-f435w-and-f555w.fits --vmin 0.2 --vmax 4.0 --verbose
  #+end_src
  
  #+begin_src shell :dir reproject-images :results verbatim
  convert -verbose\
          W-Far-best-f658n.png\
          W-Far-best-f435w-and-f555w.png\
          W-Far-best-f435w-and-f555w.png\
          -channel RGB -combine W-Far-best-RGB.png
#+end_src

#+RESULTS:
: W-Far-best-f658n.png=>W-Far-best-RGB.png PNG 11862x9679 11862x9679+0+0 8-bit sRGB 67.3449MiB 84.240u 1:16.902

***** TODO W far: Annotating

***** W far:  
***** W far:  
*** Earlier version from 2016 \to 2020
+ Plan is to use the Robberto images:
  + Red :: F658N
  + Green :: F555W
  + Blue :: F435W
+ Remove large-scale brightness structure by dividing by smoothed version


**** The original ~smooth-image.py~ program to do spatial filtering
#+name: smooth-image
#+BEGIN_SRC python :tangle /Users/will/Work/OrionTreasury/acs/smooth-image.py
  import argh
  import numpy as np
  from astropy.io import fits
  from astropy.convolution import convolve_fft, Gaussian2DKernel

  template = "hlsp_orion_hst_acs_strip{}_{}_v1_drz.fits"

  def main(field: "Robberto field of view"="0l",
           band: "ACS filter"="f658n",
           width: "Width of Gaussian smoothing kernel in pixels"=20,
           bbox: "Subimage to use: 'i1 j1 i2 j2', or use 'full' for entire image"='full',
           suffix: "Extra id string to add to output filename"="",
           twopass: "Whether to do a second pass for eliminating negative halos"=False,
           threshold: "Mask out relative brightnesses higher than this in second pass"=1.5,
       ):

      infile = template.format(field, band)
      hdu = fits.open(infile)['SCI']

      if "full" in bbox.lower():
          im = hdu.data
          i1, j1 = 0, 0
      else:
          i1, j1, i2, j2 = [int(s) for s in bbox.split()]
          im = hdu.data[j1:j2, i1:i2]

      gauss_kernel = Gaussian2DKernel(width)
      smoothim = convolve_fft(im, gauss_kernel, allow_huge=True)
      sharpim = im/smoothim

      if twopass:
          mask = (sharpim > threshold) | (im == 0.0)
          im[mask] = np.nan
          print('Starting second pass: N(masked) =', mask.sum())
          smoothim = convolve_fft(im, gauss_kernel, normalize_kernel=True, allow_huge=True)
          sharpim = im/smoothim

      outhdu = fits.PrimaryHDU(data=smoothim, header=hdu.header)
      outhdu.header['CRPIX1'] -= i1
      outhdu.header['CRPIX2'] -= j1

      outfile = infile.replace("_v1_drz.fits", "_smooth_{}{}.fits".format(width, suffix))
      outhdu.writeto(outfile, overwrite=True)

      outhdu.data = sharpim
      outfile = outfile.replace("_smooth_", "_sharp_")
      outhdu.writeto(outfile, overwrite=True)

  if __name__ == "__main__":
      argh.dispatch_command(main)

#+END_SRC

#+BEGIN_SRC sh :results verbatim
python smooth-image.py --help
#+END_SRC

#+RESULTS:
#+begin_example
usage: smooth-image.py [-h] [-f FIELD] [--band BAND] [-w WIDTH] [--bbox BBOX]
                       [-s SUFFIX] [--twopass] [--threshold THRESHOLD]

optional arguments:
  -h, --help            show this help message and exit
  -f FIELD, --field FIELD
                        Robberto field of view (default: '0l')
  --band BAND           ACS filter (default: 'f658n')
  -w WIDTH, --width WIDTH
                        Width of Gaussian smoothing kernel in pixels (default:
                        20)
  --bbox BBOX           Subimage to use: 'i1 j1 i2 j2', or use 'full' for
                        entire image (default: 'full')
  -s SUFFIX, --suffix SUFFIX
                        Extra id string to add to output filename (default:
                        '')
  --twopass             Whether to do a second pass for eliminating negative
                        halos (default: False)
  --threshold THRESHOLD
                        Mask out relative brightnesses higher than this in
                        second pass (default: 1.5)
#+end_example



**** S group
Try out with small section around LL 7

#+BEGIN_SRC sh 
BGTASK='parallel --files --id hipass -j 1'
$BGTASK python smooth-image.py --width 100 --bbox \'1500 600 8500 3600\' --band f658n --field 7l --twopass --suffix full #> /dev/null
#+END_SRC

#+RESULTS:
: /var/folders/sv/41w0vxds13d20rvl07t_1x2w0000gn/T/parsqfMT.par



**** SW group
Lower section of SW group: [[file:highpass-rgb-sw-lower.jpg]]
#+BEGIN_SRC sh 
BGTASK='sem --files --id hipass -j 1'
$BGTASK python smooth-image.py --width 100 --bbox \'10600 3350 14800 6400\' --band f658n --field 1l --twopass --suffix sw-lower >/dev/null
#+END_SRC

#+RESULTS:
: /var/folders/rm/hnrktx9s22g8sbms445k0z000000gn/T/pargfJfF.par

#+BEGIN_SRC sh 
BGTASK='sem --files --id hipass -j 1'
$BGTASK python smooth-image.py --width 100 --bbox \'10600 3350 14800 6400\' --band f555w --field 1l --twopass --suffix sw-lower >/dev/null
#+END_SRC

#+RESULTS:

#+BEGIN_SRC sh 
BGTASK='sem --files --id hipass -j 1'
$BGTASK python smooth-image.py --width 100 --bbox \'10600 3350 14800 6400\' --band f435w --field 1l --twopass --suffix sw-lower >/dev/null
#+END_SRC

#+RESULTS:





Upper section of SW group: [[file:highpass-rgb-sw-upper.jpg]]

#+BEGIN_SRC sh 
BGTASK='sem --files --id hipass -j -1'
$BGTASK python smooth-image.py --width 100 --bbox \'9100 1800 14500 4600\' --band f658n --field 0l --twopass --suffix sw-upper > /dev/null
#+END_SRC

#+RESULTS:

#+BEGIN_SRC sh 
BGTASK='sem --files --id hipass -j -1'
$BGTASK python smooth-image.py --width 100 --bbox \'9100 1800 14500 4600\' --band f555w --field 0l --twopass --suffix sw-upper > /dev/null
#+END_SRC

#+RESULTS:

#+BEGIN_SRC sh 
BGTASK='sem --files --id hipass -j -1'
$BGTASK python smooth-image.py --width 100 --bbox \'9100 1800 14500 4600\' --band f435w --field 0l --twopass --suffix sw-upper > /dev/null
#+END_SRC

#+RESULTS:


Lower-left section of SW group

#+BEGIN_SRC sh 
BGTASK='parallel --semaphore --files --id hipass --bg'
$BGTASK python smooth-image.py --width 100 --bbox \'9042 3308 12373 5846\' --band f658n --field 1l --twopass --threshold 3.0 --suffix sw-lower-left > /dev/null
#+END_SRC

#+RESULTS:

#+BEGIN_SRC sh 
BGTASK='parallel --semaphore --files --id hipass --bg'
$BGTASK python smooth-image.py --width 100 --bbox \'9042 3308 12373 5846\' --band f435w --field 1l --twopass --threshold 3.0 --suffix sw-lower-left > /dev/null
#+END_SRC

#+RESULTS:

#+BEGIN_SRC sh 
BGTASK='parallel --semaphore --files --id hipass --bg  -j0'
$BGTASK python smooth-image.py --width 100 --bbox \'9042 3308 12373 5846\' --band f555w --field 1l --twopass --threshold 3.0 --suffix sw-lower-left > /dev/null
#+END_SRC

#+RESULTS:

RGB file is written with limits of 0.75 1.4 in each channel




**** NW group
+ Luckily, all of these fall in the 5r images
+ Use ~--threshold 3.0~ because there are some bright bits

#+BEGIN_SRC sh 
BGTASK='parallel --semaphore --files --id hipass --bg'
$BGTASK python smooth-image.py --width 100 --bbox \'2532 1100 6744 4740\' --band f658n --field 5r --twopass --threshold 3.0 --suffix nw > /dev/null
#+END_SRC


#+BEGIN_SRC sh
BGTASK='parallel --semaphore --files --id hipass --bg'
$BGTASK python smooth-image.py --width 100 --bbox \'2532 1100 6744 4740\' --band f435w --field 5r --twopass --threshold 3.0 --suffix nw > /dev/null
#+END_SRC

#+RESULTS:

#+BEGIN_SRC sh
BGTASK='parallel --semaphore --files --id hipass --bg'
$BGTASK python smooth-image.py --width 100 --bbox \'2532 1100 6744 4740\' --band f555w --field 5r --twopass --threshold 3.0 --suffix nw > /dev/null
#+END_SRC

#+RESULTS:

+ Displaying them in ds9
+ Note that limits are a bit lower than in SW group because the contrast is generally smaller here
#+begin_src sh
  xpaset -p ACS file $PWD/hlsp_orion_hst_acs_strip5r_f658n_sharp_100nw.fits
  xpaset -p ACS scale limits 0.8 1.25
  xpaset -p ACS rgb green            
  xpaset -p ACS file $PWD/hlsp_orion_hst_acs_strip5r_f555w_sharp_100nw.fits 
  xpaset -p ACS scale limits 0.8 1.25
  xpaset -p ACS rgb blue                                                   
  xpaset -p ACS file $PWD/hlsp_orion_hst_acs_strip5r_f435w_sharp_100nw.fits
  xpaset -p ACS scale limits 0.8 1.25
#+end_src

#+RESULTS:

#+begin_src sh
  # Save an image
  xpaset -p ACS export $PWD/ds9.jpeg 95  
  mv ds9.jpeg NW-group-hipass-rgb-5r.jpg
#+end_src



**** LV plus SE group plus N group
+ We can get all these together from 5l
  + bounding box: 9940 2100 12445 4286
+ First a version with threshold ~1.5~ to avoid the negative halo
#+BEGIN_SRC sh :results verbatim
  parallel --jobs 0 --tag \
           python smooth-image.py --width 100 --bbox \'9940 2100 12445 4286\' \
           --band {} --field 5l --twopass --threshold 1.5 --suffix lv-se-n \
           ::: f658n f555w f435w
#+END_SRC

#+RESULTS:
: f658n	Starting second pass: N(masked) = 580230
: f435w	Starting second pass: N(masked) = 668934
: f555w	Starting second pass: N(masked) = 675575
+ Second a version with threshold ~10~ to get the bright bits
#+BEGIN_SRC sh :results verbatim
  parallel --jobs 0 --tag \
           python smooth-image.py --width 100 --bbox \'9940 2100 12445 4286\' \
           --band {} --field 5l --twopass --threshold 10.0 --suffix lv-se-n-HI \
           ::: f658n f555w f435w
#+END_SRC

#+RESULTS:
: f658n	Starting second pass: N(masked) = 147425
: f555w	Starting second pass: N(masked) = 147798
: f435w	Starting second pass: N(masked) = 148962
+ Combine the two versions
  + Mostly use the ~--threshold 1.5~ version
  + But wherever that is NaN, use the ~--threshold 10.0~ version
#+begin_src python
  import numpy as np
  from astropy.io import fits

  for f in "f658n", "f555w", "f435w":
      fname = f"hlsp_orion_hst_acs_strip5l_{f}_sharp_100lv-se-n.fits"
      hdu = fits.open(fname)["SCI"]
      hdu2 = fits.open(fname.replace(".fits", "-HI.fits"))["SCI"]

      m = ~np.isfinite(hdu.data)
      hdu.data[m] = hdu2.data[m]
      hdu.writeto(fname.replace(".fits", "-COMBO.fits"), overwrite=True)
#+end_src

#+RESULTS:
: None

**** What about the new Bally images for the LV knots?


* Kinematic structures
+ For the Trapezium region, it would be useful to relate the LL arcs to high-velocity features seen in the spectra


** Comments on individual flows
+ ODell:2015a argue that HH 523 can be subsumed into HH 726
  + But this cannot be true because HH 523 is blue-shifted, whereas 726 is highly redshifted.

** The MM shell
+ This was postulated by Massey & Meaburn (Massey:1993w)
  + Earlier indications from 
+ It is a roughly 1 arcmin radius shell around the Trapezium
+ It as a coherent structure in the blueshifted spikes and knots
+ I am not 100% convinced it is real
** Broad isovelocity images from the KPNO cubes
*** Subtract continuum from [O III] cube
+ We make two estimates of continuum:
  1. The minimum of the first 6 and last 6 velocity channels
  2. The median of channels 4, 5, 6
+ We use the first unless it is negative, where we use the 2nd
#+begin_src python :dir kinematics
  import sys
  from pathlib import Path
  import numpy as np
  from astropy.io import fits
  sys.path.append("../../wcsfile")
  import wcsfile

  datadir = Path("/Users/will/Work/BobKPNO")

  ##
  ## [O III]
  ##

  hdu, = fits.open(datadir / "2004/vcube.oiii.fits")

  # subtract off the continuum
  cont = np.concatenate((hdu.data[:6, ...], hdu.data[-6:, ...])).min(axis=0)
  cont2 = np.median(hdu.data[4:7, ...], axis=0)
  cont = np.where(cont > 0.0, cont, cont2)
  hdu.data -= cont


  # Add the WCS
  hdu.header.update(**wcsfile.read(datadir / "DOH-radec-vel-oiii.wcs"))

  # Write the files
  hdu.writeto("vcube.oiii-wcs-csub.fits", overwrite=True)
  fits.PrimaryHDU(
      data=cont,
      header=hdu.header
  ).writeto("vcube.oiii-wcs-cont.fits", overwrite=True)

  ##
  ## H alpha
  ##

  hdu, = fits.open(datadir / "2004/vcube.ha.fits")

  # subtract off the continuum
  cont = np.concatenate((hdu.data[:1, ...], hdu.data[-2:, ...])).min(axis=0)
  hdu.data -= cont


  # Add the WCS
  hdu.header.update(**wcsfile.read(datadir / "DOH-radec-vel-oiii.wcs"))

  # Write the files
  hdu.writeto("vcube.ha-wcs-csub.fits", overwrite=True)
  fits.PrimaryHDU(
      data=cont,
      header=hdu.header
  ).writeto("vcube.ha-wcs-cont.fits", overwrite=True)

  ##
  ## [N II]
  ##

  hdu, = fits.open(datadir / "2004/vcube.nii.fits")

  # subtract off the continuum - fit a linear function of V pixel
  nv, ny, nx = hdu.data.shape
  v = np.arange(nv)
  y0 = hdu.data[0, ...]
  slope = (hdu.data[-1, ...] - y0) / nv
  cont = y0 + v[:, None, None] * slope
  hdu.data -= cont


  # Add the WCS
  hdu.header.update(**wcsfile.read(datadir / "DOH-radec-vel-oiii.wcs"))

  # Adjust for the offset between [N II] and the other lines
  hdu.header["CRVAL3"] += 4.0

  # Write the files
  hdu.writeto("vcube.nii-wcs-csub.fits", overwrite=True)
  fits.PrimaryHDU(
      data=cont,
      header=hdu.header
  ).writeto("vcube.nii-wcs-cont.fits", overwrite=True)

#+end_src

#+RESULTS:
: None
*** Sum some channels to get blue velocity images
#+begin_src python :dir kinematics
  from astropy.io import fits
  import numpy as np

  chandata = [
      [50, 57, "+110-fff-red"],
      [45, 52, "+090-far-red"],
      [40, 47, "+070-mid-red"],
      [35, 42, "+050-near-red"],
      [30, 37, "+030-core-red"],
      [25, 32, "+010-big-arc"],
      [20, 27, "-010-big-arc"],
      [15, 22, "-030-near-blue"],
      [10, 17, "-050-mid-blue"],
      [5, 12,  "-070-far-blue"],
  ]

  for lineid in "oiii", "ha", "nii":
      cube_hdu, = fits.open(f"vcube.{lineid}-wcs-csub.fits")
      for k1, k2, label in chandata:
          if lineid == "nii":
              # Correction for nii peak shift
              k1 -= 1
              k2 -= 1
          fits.PrimaryHDU(
              header=cube_hdu.header,
              data=cube_hdu.data[k1:k2, ...].sum(axis=0),
          ).writeto(f"vmap-{lineid}_{label}.fits", overwrite=True)
#+end_src

#+RESULTS:
: None
** Identifying KPNO features in the vstack cube
+ Equivalence between vstack and vcube
  + vstack has 
** Making velocity maps from the MUSE cubes
*** Average maps
#+begin_src python :dir kinematics
  import numpy as np
  from astropy.io import fits
  from pathlib import Path

  datapath = Path("/Users/will/Dropbox/OrionMuse/Linemaps")

  combos = {
      "low": ["S_II-6731", "S_II-6716", "N_II-6583", "N_II-6548"],
      "mid": ["H_I-6563", "H_I-4861", "S_III-6312", "S_III-9069"],
      "high": ["O_III-5007", "O_III-4959", "He_I-5876", "He_I-6678"],
  }

  for label, linelist in combos.items():
      mom0, mom1 = None, None
      for linelabel in linelist:
          fhdu = fits.open(datapath / f"linesum-{linelabel}.fits")[0]
          vhdu = fits.open(datapath / f"mean-{linelabel}-patfixx.fits")[0]
          if mom0 is None:
              mom0 = np.zeros_like(fhdu.data)
              mom1 = np.zeros_like(fhdu.data)
          m = np.isfinite(fhdu.data * vhdu.data)
          m = m & (vhdu.data > -30) &  (vhdu.data < 50) 
          mom0[m] += fhdu.data[m]
          mom1[m] += fhdu.data[m] * vhdu.data[m]
      fits.PrimaryHDU(
          header=fhdu.header,
          data=mom1 / mom0,
      ).writeto(f"muse-vmean-{label}.fits", overwrite=True)
      fits.PrimaryHDU(
          header=fhdu.header,
          data=mom0,
      ).writeto(f"muse-linesum-{label}.fits", overwrite=True)

#+end_src

#+RESULTS:
: None
**** Make some images

*** Difference maps
#+name: deltaV
#+header: :var A="H_I-6563" B="O_III-5007"
#+begin_src python :dir kinematics
  from astropy.io import fits
  from pathlib import Path

  datapath = Path("/Users/will/Dropbox/OrionMuse/Linemaps")
  fn_a = datapath / f"mean-{A}-patfixx.fits"
  fn_b = datapath / f"mean-{B}-patfixx.fits"
  hdu_a, = fits.open(fn_a)
  hdu_b, = fits.open(fn_b)

  hdu_a.data -= hdu_b.data
  _, _, Awav = A.partition("-")
  _, _, Bwav = B.partition("-")
  fn_out = f"delta-V-{Awav}-{Bwav}.fits"

  hdu_a.writeto(fn_out, overwrite=True)
#+end_src

#+RESULTS:
: None

#+call: deltaV[:results silent]("H_I-6563", "H_I-9229")


* Three dimensional structure

** 3D Modeling Workflow
+ Basic plan is to do the initial layout in 123D Design on the iPad, then export STL from 123D Design on Mac
+ Import STL into Blender where we can do the
  + Material properties
  + Adding text
  + Rendering
*** Autodesk 123D Design
**** On iPad
+ This is the most intuitive way to do the initial modelling
+ Direct manipulation of the objects
+ Export to iCloud
**** on Mac
+ Can read in the projects from iCloud
+ Can save as STL for import into Blender
*** Blender
+ Can import STL files
  + has object shapes but loses the color information
+ Need to scale all the objects before doing anything
  + otherwise they get clipped when you zoom out because of the cameras settings
  + I tried to fix this by changing the camera clipping plane but to no avail
    + I think this is because the camera is only used for rendering

**** Splitting objects
+ Change to edit mode
+ Type "P" and choose "By loose parts"
+ This can take a minute or so for a big mesh
**** 

* Informes semestrales
** 2014-II [2014-07-02 Wed]
Durante este semestre, el estudiante ha cursado el Seminario de
Investigación III y el Seminario de Investigación, obteniendo un grado
de 10 en cada una.  Su trabajo de investigación ha sido muy
satisfactorio, logrando avances importantes en la preparación y
analisis de un catálogo de choques estacionarios en la nebulosa de
Orión.  El trabajo para su tésis de maestría es ahora 95% completo, y
ha empezado con la escritura de la misma; ahora cuenta con borradores
de 3 capítulos.  Se espera que se gradue durante el transcurso del
próximo semestre. 



* Tasks to finish before OSSF 2014 conference
** Text snippets for the posters
*** Jorge poster
**** Observations Box
S(Hα), R₀, H
** Finish brightness calibration
*** Different values of gain for the WFPC2 observations
:LOGBOOK:  
CLOCK: [2014-11-07 Fri 09:45]--[2014-11-07 Fri 11:55] =>  2:10
:END:      
+ Earlier stuff is in [[file:Flux%20calibration.ipynb][file:Flux calibration.ipynb]]
  + We had an apparent discrepancy between the brightnesses of a factor of 2 between O'Dell and Robberto
+ Now I have downloaded the original data for the LL1 field
  + [[file:WFPC2-Calib][Folder: ./WFPC2-Calib]]
  + We directly see the difference in counts/s between the Robberto data (GO 10246) and all the other images (e.g., GO 5085)
  + This seems to be due to the difference in gain, but I don't understand exactly why. 
**** Some facts about gain
+ http://www.photometrics.com/resources/learningzone/gain.php
+ See also [[id:FDE3497E-1891-45E9-AF41-74A92C0F0F64][This section of my Keck notes]]
+ Gain tells you how many ADU you get for each electron, but in a strange upside down way
+ It is typically measured in e^{-}/ADU
+ "High gain" means a /lower/ numerical value of e^{-}/ADU
  + So Robberto's gain of 15 e^{-}/ADU is lower than the standard 7 e^{-}/ADU
  + That is because the numbers are technically "inverse gain"
+ A "standard" gain would be such that the full well of the CCD (in electrons) matches the full range of the digitizer (e.g., 65536 for 16 bits)
  + Then having a "high gain" (low inverse gain) would give you greater sensitivity at the expense of easier saturation
  + Whereas having a "low gain" (high inverse gain) means that the digitizer can cope with a higher total signal
+ So this is why the Robberto observations used the low gain of 15, so as to be able to register all the electrons and do accurate photometry
*** Correct for [N II] contamination
**** Comparison with older WFPC2 mosaics
: The normalization is to the exposure times in the program GO 5085, i.e.
: f656n(200S), f658n(500s), f502n(200s), f547m(50s).

+ To get count/sec, divide values by the exposure times T given above
+ Conversion to surface brightness: use coefficients from O'Dell (2009)
  + Use values of K1 from Table 3
  + Units are 1.e-10 counts cm2 ster / photon
  + => valores / (T * K1) will give us phot/s/cm2/sr
+ So we need to multiply by the photon energy to get to erg/s/cm2/sr
  + E = h c / \lambda = 3.02673387238e-12 erg for H\alpha
  + 3.0175382659e-12 erg for [N II] 6583
***** Values of K1 from Table 3 of O'Dell (2009)
| F469N | F487N | F502N | F656N | F658N | F673N |
|-------+-------+-------+-------+-------+-------|
|  0.51 |  0.70 |  0.82 |  1.62 |  1.60 |  1.42 |
     
**** Correct for continuum contamination

***** Test case: w005-514
|       |  f656 |  f658 |   f547 | acs f658 |
| W     | 28.34 | 39.23 | 638.10 |     74.9 |
| t     |   200 |   500 |     50 |          |
| shell |   103 |    95 |    6.5 |          |
| bg    |    93 |    67 |    6.4 |          |
| S(bg) | 0.465 | 0.134 |  0.128 |    0.134 |
|       | 0.006 | 0.008 |  0.128 |    0.015 |
|       | 0.013 | 0.060 |  1.000 |    0.112 |
#+TBLFM: @6$2..@6$4=@-1/@-3::@6$5=$-2::@7$2..@7$5=@6$4 @2/@2$4; f3::@8$2..@8$5=@-1/@-2;f3

***** Another test case: 212-400
+ This has a very small [N II]/Ha = 0.02 according to acs - wfpc2
+ But much larger one [N II]/Ha = 0.18 according to mosaic wfpc2
|       |  f656 |   f658 |   f547 | acs f658 | rob F656 |
| W     | 28.34 |  39.23 | 638.10 |     74.9 |    28.34 |
| t     |   200 |    500 |     50 |        1 |        1 |
| shell | 607.8 |  286.8 |   32.3 |    23.36 |   0.3329 |
| bg    | 610.6 |  280.1 |   32.6 |    23.36 |   0.3317 |
| S(bg) | 3.053 | 0.5602 |  0.652 |   0.5602 |          |
|       | 0.029 |  0.040 |  0.652 |    0.077 |          |
|       | 0.009 |  0.071 |  1.000 |    0.137 |          |
#+TBLFM: @6$2..@6$4=@-1/@-3::@6$5=$-2::@7$2..@7$5=@6$4 @2/@2$4; f3::@8$2..@8$5=@-1/@-2;f3

** Shell pressure
+ Check that this is done properly
+ Calculate pre-shock density - compare with H II region density
** Prune objects from the list for the statistics
*** inter-proplyd shocks
*** objects lacking an outer arc
*** anything else where the data is low-quality
** A better document with all the images
:PROPERTIES:
:noweb:    yes
:ID:       E783982D-1FC7-4E2A-B2FE-C49BE0A5AAF5
:END:

+ Luis has this, but there is a lot of whitespace

#+name: list-of-sources-sorted-by-ra
#+BEGIN_SRC python
  with open("ll-data.json") as f:
      db = json.load(f)

  keys = sorted(db.keys(), key=lambda k: db[k]["RA"])

#+END_SRC

#+name: extract-usual-name-of-each-source
#+BEGIN_SRC python
  def name(k):
      if "LL" in db[k]["bname"]:
          return db[k]["bname"]
      else:
          return db[k]["oname"].split()[-1]
#+END_SRC

#+name: extract-which-of-bally-fields-contains-source
#+BEGIN_SRC python
  def field(k):
      try:
          result = int(db[k]['Bally'])
      except ValueError:
          if ',' in db[k]['Bally']:
              result = int(db[k]['Bally'].split(',')[-1])
          else:
              result = 0
      return result
#+END_SRC

#+BEGIN_SRC python :return latex_file :results file
  import json
  import os

  <<list-of-sources-sorted-by-ra>>

  pdf_template = "j8oc{1:02d}010_wcs/{0:s}-Bally_{1:02d}-images.pdf"
  fig_template = r'\BowshockFig{{{:s}}}{{{:02d}}}'
  nofig_template = r'\MissingFig{{{:s}}}{{{:02d}}}'

  <<extract-usual-name-of-each-source>>
  <<extract-which-of-bally-fields-contains-source>>

  figs = []
  for k in keys:
      if field(k):
          if os.path.isfile(pdf_template.format(name(k), field(k))):
              figs.append(fig_template.format(name(k), field(k)))
          else: 
              figs.append(nofig_template.format(name(k), field(k)))

  NCOLS = 2
  NROWS = 5

  pages = []
  thisrow = []
  thispage = []
  for fig in figs:
      thisrow.append(fig)
      if len(thisrow) == NCOLS:
          thispage.append(thisrow)
          thisrow = []
      if len(thispage) == NROWS:
          pages.append(thispage)
          thispage = []

  def output_row(row):
      return " & ".join(row) + r" \\"

  def output_page(page):
      result = r"\begin{tabular}{" + "l "*NCOLS + "}" + "\n"
      for row in page:
          result += output_row(row) + "\n"
      result += r"\end{tabular}" + "\n"
      return result

  latex_pages = ""
  for page in pages:
      latex_pages += output_page(page) + "\n\n"

  latex_file = "bowshock-figs-{:02d}x{:02d}.tex".format(NROWS, NCOLS)
  with open(latex_file, 'w') as f:
      f.write(latex_pages)
#+END_SRC

#+RESULTS:
[[file:bowshock-figs-05x02.tex]]

#+BEGIN_SRC latex :tangle bowshock-figs-driver.tex
    \documentclass{article}
    \usepackage[margin=0.3cm]{geometry}
    \usepackage{graphicx}
    \usepackage{etoolbox} % provies \patchcmd

    \setlength{\fboxsep}{0pt}%

    \newlength\figwidth
    \setlength\figwidth{0.48\textwidth}

    \newcommand\BowshockFig[2]{
      \framebox{\includegraphics[width=\figwidth, clip, trim=60 50 100 50]
      {j8oc#2010_wcs/#1-Bally_#2-images}}
    }
    \newcommand\MissingFig[2]{%
      \framebox{\makebox[\figwidth][c]{\raisebox{0.25\figwidth}[0.48\figwidth]{%
            Not found: #1 from Field #2}}}%
    }

    \setlength\tabcolsep{0pt}

    \begin{document}
    \input{bowshock-figs-05x02.tex}

    \end{document}

#+END_SRC

Recompile the latex file and open the PDF file
#+BEGIN_SRC sh :results verbatim silent
pdflatex bowshock-figs-driver
open bowshock-figs-driver.pdf
#+END_SRC
*** Make a nice border of bowshocks for the poster
+ This will be like the previous document, but this time it will have all the bpwshocks around the outside.
+ The idea is to use it as the frame for the Luis poster
+ [ ] Eventually, I could order the bowshocks by PA and then somehow map that onto the table structure, but maybe not ...

#+BEGIN_SRC python :return latex_file :results file
  import json
  import os

  <<list-of-sources-sorted-by-ra>>

  pdf_template = "j8oc{1:02d}010_wcs/{0:s}-Bally_{1:02d}-images.pdf"
  fig_template = r'\BowshockFig{{{:s}}}{{{:02d}}}'
  nofig_template = r'\MissingFig{{{:s}}}{{{:02d}}}'

  <<extract-usual-name-of-each-source>>
  <<extract-which-of-bally-fields-contains-source>>

  with open("top40-list.txt") as f:
      top40 = f.read().split("\n")
  figs = []
  for k in keys:
      if field(k) and k in top40:
          if os.path.isfile(pdf_template.format(name(k), field(k))):
              figs.append(fig_template.format(name(k), field(k)))
          else: 
              figs.append(nofig_template.format(name(k), field(k)))

  W = 5
  NCOLS = W
  NROWS = int(2*1.414*W)
  H = NROWS - 4
  N = 4*W + 2*H  

  thisrow = []
  thispage = []
  for fig in figs[:N]:
      thisrow.append(fig)
      if len(thispage) < 2 or len(thispage) >= NROWS - 2:
          # Top or bottom rows are full length
          rowlength = NCOLS
      else:
          # Middle rows are shorter 
          rowlength = 2

      if len(thisrow) == rowlength:
          thispage.append(thisrow)
          thisrow = []


  def output_row(row):
      if len(row) == 2:
          # fill in the middle with empty cells
          return row[0] + " & "*(W-1) + row[1] + r" \\"
      else:
          return " & ".join(row) + r" \\"

  def output_page(page):
      result = r"\begin{tabular}{" + "l "*NCOLS + "}" + "\n"
      for row in page:
          result += output_row(row) + "\n"
      result += r"\end{tabular}" + "\n"
      return result

  latex_pages = output_page(thispage)

  latex_file = "poster-border-{:02d}x{:02d}.tex".format(NROWS, NCOLS)
  with open(latex_file, 'w') as f:
      f.write(latex_pages)
#+END_SRC

#+RESULTS:
[[file:poster-border-14x05.tex]]

#+BEGIN_SRC latex :tangle poster-border-driver.tex
    \documentclass{article}
    \usepackage[a1paper, margin=0.0cm]{geometry}
    \usepackage{graphicx}
    \setlength{\fboxsep}{0pt}%

    \newlength\figwidth
    \setlength\figwidth{0.2\textwidth}

    \newcommand\BowshockFig[2]{
      \includegraphics[width=\figwidth, clip, trim=60 50 100 50]
      {j8oc#2010_wcs/#1-Bally_#2-images}%
    }

    \begin{document}
    \setlength\tabcolsep{0pt}
    \noindent\input{poster-border-14x05.tex}

    \end{document}

#+END_SRC

Recompile the latex file and open the PDF file
#+BEGIN_SRC sh :results verbatim silent
pdflatex poster-border-driver
open poster-border-driver.pdf
#+END_SRC
*** Fix the gray limits of the image thumbnails
+ Currently [2014-05-10 Sat] they are far too dark on the whole
+ First get a table of the current levels
#+BEGIN_SRC python :return table
  import json
  <<list-of-sources-sorted-by-ra>>
  <<extract-usual-name-of-each-source>>
  <<extract-which-of-bally-fields-contains-source>>

  table = [["Source", "Field", "vmin", "vmax", "minfac", "maxfac",
            "sh", "dsh", "bg", "dbg"], None]
  for key in keys:
      source = name(key)
      bfield = field(key)
      jsonfile = "j8oc{1:02d}010_wcs/{0:s}-arcdata.json".format(source, bfield)
      image_name = "Bally_{:02d}".format(bfield)
      try:
          with open(jsonfile) as f:
              arcdata = json.load(f)
      except FileNotFoundError:
          table.append([source, bfield, -1, -1])
          continue

      if "plot limits" in arcdata[image_name].keys():
          vmax, vmin = [arcdata[image_name]["plot limits"][k]
                        for k in ("max", "min")]
          # Average and dispersion for shell and background
          avsh = max(arcdata[image_name]["shell"]["value"], 
                     arcdata[image_name]["shell center"]["value"])
          dsh = max(arcdata[image_name]["shell"]["delta"], 
                    arcdata[image_name]["shell center"]["delta"])
          avbg = arcdata[image_name]["background"]["value"]
          dbg = arcdata[image_name]["background"]["delta"]
          maxfac = (vmax - avsh)/dsh
          minfac = (avbg - vmin)/dbg
      else:
          vmax, vmin = 0.0, 0.0
          maxfac, minfac = 3.0, 3.0
     
      table.append([source, bfield] + ["{:.3g}".format(v)
                                       for v in (vmin, vmax, minfac, maxfac,
                                                 avsh, dsh, avbg, dbg)])
#+END_SRC

#+RESULTS:
|   Source | Field |  vmin | vmax | minfac | maxfac |    sh |    dsh |    bg |    dbg |
|----------+-------+-------+------+--------+--------+-------+--------+-------+--------|
|      LL3 |    17 |   1.1 |  1.6 |   2.72 |   4.57 |  1.33 | 0.0601 |  1.28 | 0.0648 |
|      LL2 |    18 |     1 |  2.5 |     10 |   9.17 |  1.98 | 0.0565 |  1.65 | 0.0647 |
|      LL4 |    24 |  0.83 |  1.2 |    1.7 |   8.22 | 0.936 | 0.0321 | 0.885 | 0.0325 |
| 4468-605 |    17 |  1.37 |  1.6 |    2.6 |   4.11 |  1.47 | 0.0317 |  1.44 | 0.0283 |
| 4578-251 |     9 |  2.75 |  3.5 |   2.98 |   5.58 |     3 | 0.0893 |  2.93 | 0.0613 |
| 4582-635 |    16 |   2.4 |    3 |   1.95 |    3.9 |  2.69 | 0.0795 |  2.64 |  0.121 |
| w000-400 |     9 |  2.75 |  3.7 |   6.22 |   5.46 |   3.3 | 0.0726 |  3.17 | 0.0668 |
| w005-514 |    16 |   3.3 |  6.5 |   5.46 |   4.43 |  4.33 |   0.49 |  3.63 |   0.06 |
| w012-407 |     1 |   3.2 |  4.7 |   5.69 |   9.94 |  3.81 | 0.0895 |  3.63 | 0.0764 |
| w014-414 |     1 |   3.3 |    4 |   1.87 |   4.99 |  3.61 | 0.0788 |  3.42 | 0.0669 |
|  022-635 |    16 |   2.6 |  3.3 |   2.47 |   8.31 |  2.82 | 0.0577 |  2.72 | 0.0482 |
| w030-524 |     1 |     5 |  6.2 |   9.42 |   5.94 |  5.77 |  0.072 |  5.61 | 0.0646 |
|  041-637 |    16 |   2.7 |  3.2 |   2.08 |    2.3 |  2.98 | 0.0972 |  2.93 |  0.109 |
|  042-628 |    16 |   2.7 |  4.2 |      4 |   9.41 |  3.25 |  0.101 |  3.03 | 0.0832 |
| w044-527 |     1 |     6 |  8.5 |   2.23 |   3.29 |  7.02 |  0.449 |  6.78 |   0.35 |
|  049-143 |     9 |   6.8 |  9.5 |   4.64 |   12.5 |  7.98 |  0.122 |  7.82 |  0.219 |
|  051-024 |     9 |   5.3 |  7.5 |   6.74 |   8.64 |   6.4 |  0.128 |  6.34 |  0.155 |
|      LL1 |     1 |   6.5 |   16 |   2.12 |   2.17 |  11.2 |    2.2 |  7.84 |  0.632 |
|  065-502 |     1 |   8.5 |   11 |   1.07 |   2.34 |  9.61 |  0.595 |  9.24 |  0.692 |
| 066-3251 |    14 |  0.84 | 1.05 |    1.8 |   3.33 | 0.946 | 0.0312 | 0.912 |   0.04 |
| w069-601 |     1 |   6.1 |    9 |   8.07 |    9.5 |  7.83 |  0.123 |  7.33 |  0.152 |
|  072-134 |     9 |     8 |   18 |   14.9 |   7.09 |  12.9 |  0.714 |  12.6 |  0.311 |
| w073-227 |     1 |     9 |   16 |   5.45 |   11.5 |  12.9 |  0.274 |  11.6 |  0.473 |
|  074-229 |     1 |    10 |   14 |   4.83 |   3.38 |  12.2 |  0.543 |  11.5 |   0.32 |
|  083-435 |     1 |  10.5 | 13.9 |   10.2 |   9.07 |  12.4 |  0.163 |  12.3 |  0.179 |
|  101-233 |     1 |    17 |   35 |   3.96 |   2.54 |  28.4 |   2.61 |  28.4 |   2.88 |
|  102-157 |     1 |    14 |   22 |   4.85 |   10.9 |  17.3 |  0.436 |  16.8 |  0.577 |
|  106-245 |     1 |    25 |   40 |   16.7 |   3.25 |  34.3 |   1.75 |  31.7 |  0.401 |
|  109-246 |     1 |    27 |   50 |   5.16 |   5.64 |  39.3 |    1.9 |  35.4 |   1.63 |
|  117-421 |     1 |    16 |   30 |   3.48 |   2.33 |  24.4 |   2.41 |  24.7 |   2.51 |
| 116-3101 |    14 |  0.75 | 0.95 |   4.08 |   3.01 | 0.876 | 0.0246 | 0.833 | 0.0204 |
| 119-3155 |    14 |  0.73 |  0.9 |   2.27 |   4.28 | 0.799 | 0.0237 | 0.775 | 0.0197 |
|  121-434 |     1 |    15 |   22 |   5.63 |   4.61 |  19.6 |  0.531 |  18.8 |   0.68 |
|  131-046 |     2 |    10 |   22 |   1.82 |   4.61 |  15.1 |   1.49 |  15.3 |   2.92 |
|  132-053 |     2 |  16.5 |   20 |   4.46 |   8.88 |  18.4 |   0.18 |  18.2 |  0.386 |
| 136-3057 |    14 |   0.7 |    1 |   3.39 |   4.59 |  0.86 | 0.0304 | 0.811 | 0.0327 |
| 138-3024 |    14 |  0.82 | 0.95 |   1.54 |   2.31 | 0.882 | 0.0295 | 0.866 | 0.0302 |
|  142-301 |     1 |    30 |  150 |   9.29 |   15.7 |  73.7 |   4.86 |  64.9 |   3.75 |
|  154-225 |     1 |    30 |   60 |   3.32 |   6.89 |    44 |   2.32 |  40.8 |   3.25 |
|  154-240 |     1 |    30 |   80 |   1.94 |   2.29 |  55.2 |   10.8 |  54.1 |   12.4 |
|  158-323 |     1 |    55 |  100 |   1.47 |   3.65 |  72.6 |   7.49 |  66.4 |   7.77 |
|  159-221 |     1 |    35 |   65 |    3.9 |   6.03 |  45.2 |   3.28 |  45.3 |   2.64 |
|  161-324 |     1 |    50 |  100 |   4.88 |   14.9 |  64.2 |   2.41 |    60 |   2.06 |
|  163-317 |     1 |    45 |  100 |   5.57 |   5.95 |  69.1 |   5.19 |  68.5 |   4.22 |
|  163-222 |     1 |    35 |   50 |   7.77 |   5.19 |  44.2 |   1.13 |    46 |   1.42 |
|  165-235 |     1 |    40 |   70 |   2.19 |   3.37 |  53.5 |    4.9 |  50.3 |    4.7 |
|  166-316 |     1 |    64 |   85 |    2.3 |   8.19 |  72.5 |   1.53 |  71.5 |   3.25 |
|  167-317 |     1 |    50 |  100 |  0.857 |  -1.28 |   183 |     65 |  66.3 |   19.1 |
|  168-328 |     1 |    42 |   80 |   2.28 |   6.51 |  53.5 |   4.07 |  50.5 |   3.71 |
| 168-326N |     1 | -64.1 |  211 |     70 |      2 |   188 |   11.8 |   186 |   3.58 |
|  168-326 |     1 |    47 |   90 |   5.67 |   3.37 |    74 |   4.76 |  64.2 |   3.03 |
|  169-338 |     1 |    42 |   60 |   2.85 |   15.9 |  46.1 |  0.874 |  45.6 |   1.27 |
|  170-249 |     1 |    35 |   65 |   1.89 |   4.71 |    53 |   2.55 |  50.2 |   8.01 |
|  173-342 |     1 |    28 |   70 |   4.52 |   11.8 |  39.9 |   2.56 |  35.8 |   1.73 |
|  173-236 |     1 |    43 |   80 |  0.454 |  0.842 |  73.3 |   7.96 |  58.4 |     34 |
|  175-321 |     1 |    35 |   90 |   9.55 |   9.88 |  51.5 |   3.89 |  54.3 |   2.02 |
|  177-341 |     1 |    23 |   70 |   2.63 |   6.79 |  34.9 |   5.17 |  32.3 |   3.53 |
|  178-258 |     1 |    30 |   60 |   3.95 |   6.06 |  47.6 |   2.05 |  45.7 |   3.97 |
|  180-331 |     1 |    25 |   50 |   4.43 |   2.84 |  34.9 |    5.3 |  29.4 |  0.987 |
|  189-329 |     1 |    28 |   65 |   3.75 |   6.71 |  47.7 |   2.58 |  38.4 |   2.76 |
| 203-3039 |    14 |   0.9 | 1.15 |   2.12 |   4.43 |  1.01 | 0.0318 | 0.973 | 0.0344 |
|  205-230 |     6 |    16 |   40 |  0.975 |   3.41 |  25.6 |   4.22 |  23.7 |   7.94 |
|  206-043 |     2 |     6 |    9 |   4.05 |   14.5 |     7 |  0.138 |  6.86 |  0.213 |
|  212-400 |     6 |    20 |   33 |   3.73 |   12.9 |  23.4 |  0.748 |  23.4 |  0.901 |
| 261-3018 |     7 |     1 |  1.5 |   4.81 |   3.86 |   1.3 | 0.0506 |  1.23 | 0.0479 |
| w266-558 |     6 |   9.5 |   12 |   3.17 |   2.91 |  10.7 |  0.448 |  9.99 |  0.155 |
|  305-811 |     7 |   3.5 |  4.2 |   4.16 |   4.05 |  3.88 | 0.0787 |  3.82 | 0.0777 |
| 308-3036 |     8 |  1.15 |  1.5 |   2.74 |   5.38 |  1.28 | 0.0416 |  1.23 |   0.03 |
|      LL5 |     7 |   3.2 |  4.5 |   6.03 |   5.54 |  3.85 |  0.118 |  3.63 | 0.0711 |
|      LL6 |     8 |  1.35 |    2 |   7.13 |   9.52 |  1.61 | 0.0407 |  1.55 | 0.0276 |
| 344-3020 |     8 |  1.38 |  1.7 |   3.01 |   6.36 |   1.5 | 0.0309 |  1.47 | 0.0295 |
|      LL7 |     0 |    -1 |   -1 |        |        |       |        |       |        |
| 362-3137 |     8 |  0.78 | 0.95 |   1.73 |   3.09 | 0.856 | 0.0303 | 0.819 | 0.0224 |
|     name |     0 |    -1 |   -1 |        |        |       |        |       |        |

**** DONE Better estimate of shell thickness
CLOSED: [2014-05-14 Wed 10:30]
+ We are currently using R_{out} - R_{in} but that won't do since in general the the circles are not concentric
+ Actually that doesn't matter, since the R0 are not radii of the circles
+ Anyway, I did a better version that compares the radius from the star of the two circles along the symmetry axis of the outer shock
  + But it hardly makes any difference


**** Utility functions for fitting arcs and generating images
#+name: display-in-ds9
#+header: :var source="LL3", field="17", vmin="1.1", vmax="1.6"
#+BEGIN_SRC sh
  xpaset -p ds9 fits j8oc${field}010_wcs/${source}-Bally_${field}-extract.fits
  xpaset -p ds9 regions delete all
  xpaset -p ds9 align wcs
  xpaset -p ds9 zoom to fit
  xpaset -p ds9 scale limits ${vmin} ${vmax}
  xpaset -p ds9 cmap invert
  xpaset -p ds9 regions load j8oc${field}010_wcs/${source}-forma.reg
#+END_SRC

#+RESULTS: display-in-ds9

#+name: find-fit-extract
#+header: :var source="LL3", field="17"
#+BEGIN_SRC sh :results verbatim replace
  cd j8oc${field}010_wcs
  python ../programas/find-xy-shell.py ${source}
  python ../programas/fit-circle-shell.py ${source}
  python ../programas/extract-image.py --fitsfile j8oc${field}010_wcs.fits ${source}
#+END_SRC

#+name: arc-brightness
#+header: :var source="LL3", field="17"
#+BEGIN_SRC sh :results verbatim replace
  source activate py27
  cd j8oc${field}010_wcs
  python ../programas/arc_brightness.py ${source}
#+END_SRC

#+name: plot-image
#+header: :var source="LL3", field="17", vmin="1.1", vmax="1.6", zoom="1.0"
#+BEGIN_SRC sh :results verbatim replace
  cd j8oc${field}010_wcs
  python ../programas/plot-image.py --image Bally_${field} --vmin ${vmin} --vmax ${vmax} --zoom ${zoom} ${source}  
#+END_SRC



#+name: view-pdf
#+header: :var source="LL3", field="17"
#+BEGIN_SRC sh
  open j8oc${field}010_wcs/${source}-Bally_${field}-images.pdf
#+END_SRC


**** [22/22] Objects that need attention
:PROPERTIES:
:results:  silent
:END:

+ [X] LL3 - need to trace outer shock - double shell
  #+BEGIN_SRC sh
  xpaset -p ds9 fits j8oc17010_wcs/LL3-Bally_17-extract.fits
  xpaset -p ds9 zoom to fit
  xpaset -p ds9 scale limits 1.1 1.6
  xpaset -p ds9 cmap invert
  #+END_SRC

#+BEGIN_SRC sh 
  xpaset -p ds9 regions load j8oc17010_wcs/LL3-forma.reg
#+END_SRC

#+BEGIN_SRC sh 
  xpaset -p ds9 regions save j8oc17010_wcs/LL3-forma.reg
#+END_SRC
That doesn't work.  I needed to do it with the GUI


#+BEGIN_SRC sh :dir j8oc17010_wcs :results verbatim replace
  python ../programas/find-xy-shell.py LL3
  python ../programas/fit-circle-shell.py LL3
  python ../programas/extract-image.py --fitsfile j8oc17010_wcs.fits LL3
#+END_SRC

#+RESULTS:
#+begin_example
WARNING: AstropyBackwardsIncompatibleChangeWarning: Using the `ICRSCoordinates` name for this class is deprecated in v0.3, and will be removed in the next version. Use `ICRS` instead. [astropy.coordinates.old_builtin_systems_names]
[[Variables]]
     xc:    -1.757824 +/- 0.242035 (13.77%) initial = -1.265962
     yc:     0.021365 +/- 0.054636 (255.73%) initial =  0.213949
[[Correlations]] (unreported correlations are <  0.100)
    C(xc, yc)                    =  0.532 
[[Variables]]
     xc:    -3.356228 +/- 0.238226 (7.10%) initial = -3.118187
     yc:    -0.850554 +/- 0.057592 (6.77%) initial = -0.046187
[[Correlations]] (unreported correlations are <  0.100)
    C(xc, yc)                    =  0.217 
WARNING: FITSFixedWarning: The WCS transformation has more axes (2) than the image it is associated with (0) [astropy.wcs.wcs]
WARNING: AstropyBackwardsIncompatibleChangeWarning: Using the `ICRSCoordinates` name for this class is deprecated in v0.3, and will be removed in the next version. Use `ICRS` instead. [astropy.coordinates.old_builtin_systems_names]
RA range: 5:34:39.9094 5:34:41.6817
Dec range: -5:26:54.11 -5:26:22.47
Extracted image window: [1945:2766, 300:1124]
WARNING: Overwriting existing file 'LL3-Bally_17-extract.fits'. [astropy.io.fits.file]
#+end_example

#+BEGIN_SRC sh :dir j8oc17010_wcs :results verbatim replace
  source activate py27
  python ../programas/arc_brightness.py LL3
#+END_SRC

#+RESULTS:
: **************************************************
: Calculating shell brightness for Bally_17
: **************************************************
: No bad pixel mask found
: BG trimean = 1.28, iqr = 0.06
: Shell trimean = 1.33, iqr = 0.06
: Adopting plot range of 1.15 to 1.45

#+BEGIN_SRC sh :dir j8oc17010_wcs :results verbatim replace
  source activate py27
  python ../programas/plot-image.py --image Bally_17 LL3
#+END_SRC

#+RESULTS:
: 83.6700291667 -5.44403888889
: 0.00181770907741
: INFO: Deleting work directory /var/folders/rm/hnrktx9s22g8sbms445k0z000000gn/T/tmp6TkdQa [montage_wrapper.wrappers]
: INFO: Deleting work directory /var/folders/rm/hnrktx9s22g8sbms445k0z000000gn/T/tmpyxK8bq [montage_wrapper.wrappers]
: No mask regions found

#+BEGIN_SRC sh :dir j8oc17010_wcs
  open LL3-Bally_17-images.pdf
#+END_SRC

+ [X] LL2 - should not use lower shell - jet
  #+call: display-in-ds9("LL2", "18", "1.0", "2.5")
  #+call: find-fit-extract("LL2", "18")
  #+call: arc-brightness("LL2", "18")
  #+call: plot-image(source="LL2", field="18", vmin="1.0", vmax="2.5", zoom="0.7")
  #+call: view-pdf(source="LL2", field="18")

+ [X] 4582-635 - is this a jet bowshock? - looks triangular
  #+call: display-in-ds9("4582-635", "16", "2.4", "3.0")
  #+call: find-fit-extract("4582-635", "16")
  #+call: arc-brightness("4582-635", "16")
  #+call: plot-image("4582-635", "16", "2.4", "3.0")
  #+call: view-pdf("4582-635", "16")

So it is OK, but the stuff outside could well be evidence that it is just a superimposed jet bowshock

+ [X] 005-514 - trim outer shock points to south
  #+call: display-in-ds9(source="w005-514", field="16", vmin="3.3", vmax="6.5")
  #+call: find-fit-extract(source="w005-514", field="16")
  #+call: arc-brightness(source="w005-514", field="16")
  #+call: plot-image(source="w005-514", field="16", vmin="3.3", vmax="6.5")
  #+call: view-pdf(source="w005-514", field="16")

+ [X] 022-635 - trim outer shock points away from axis
  #+call: display-in-ds9("022-635", "16", "2.6", "3.3")
  #+call: find-fit-extract("022-635", "16")
  #+call: arc-brightness("022-635", "16")
  #+call: plot-image("022-635", "16", "2.6", "3.3")
  #+call: view-pdf("022-635", "16")


+ [X] 041-637 - trim outer shock points away from axis
  #+call: display-in-ds9("041-637", "16", "2.7", "3.2")
  #+call: find-fit-extract("041-637", "16")
  #+call: arc-brightness("041-637", "16")
  #+call: plot-image("041-637", "16", "2.7", "3.2")
  #+call: view-pdf("041-637", "16")

+ [X] 044-527 - fix inner shock
  #+call: display-in-ds9("w044-527", "01", "6.0", "8.5")
  #+call: find-fit-extract("w044-527", "01")
  #+call: arc-brightness("w044-527", "01")
  #+call: plot-image("w044-527", "01", "6.0", "8.5")
  #+call: view-pdf("w044-527", "01")


+ [X] 049-143 - fix inner shock
  #+call: display-in-ds9(source="049-143", field="09", vmin="6.8", vmax="9.5")
  #+call: find-fit-extract(source="049-143", field="09")
  #+call: arc-brightness(source="049-143", field="09")
  #+call: plot-image(source="049-143", field="09", vmin="6.8", vmax="9.5")
  #+call: view-pdf(source="049-143", field="09")


+ [X] 051-024 - fix inner shock
  #+call: display-in-ds9(source="051-024", field="09", vmin="5.3", vmax="7.5")
  #+call: find-fit-extract(source="051-024", field="09")
  #+call: arc-brightness(source="051-024", field="09")
  #+call: plot-image(source="051-024", field="09", vmin="5.3", vmax="7.5")
  #+call: view-pdf(source="051-024", field="09")

+ [X] 074-229 - Field 01 - not found
  #+call: display-in-ds9(source="074-229", field="01", vmin="10", vmax="14")
  #+call: find-fit-extract(source="074-229", field="01")
  #+call: arc-brightness(source="074-229", field="01")
  #+call: plot-image(source="074-229", field="01", vmin="10", vmax="14")
  #+call: view-pdf(source="074-229", field="01")

+ [X] 101-233 - fix up both shocks - the outer shock is probably spurious - may not be double shell
  #+call: display-in-ds9(source="101-233", field="01", vmin="17", vmax="35")
  #+call: find-fit-extract(source="101-233", field="01")
  #+call: arc-brightness(source="101-233", field="01")
  #+call: plot-image(source="101-233", field="01", vmin="17", vmax="35")
  #+call: view-pdf(source="101-233", field="01")

+ [X] 106-245 - fix up both shocks - extra point to N in outer shock
  #+call: display-in-ds9(source="106-245", field="01", vmin="24", vmax="45")
  #+call: find-fit-extract(source="106-245", field="01")
  #+call: display-in-ds9("106-245", "01", "25.0", "40")
  #+call: plot-image("106-245", "01", "25.0", "40", zoom="0.7")
  #+call: view-pdf("106-245", "01")

+ [X] 119-3155 - fix up shocks - don't use detached one
  #+call: display-in-ds9(source="119-3155", field="14", vmin="0.73", vmax="0.9")
  #+call: find-fit-extract(source="119-3155", field="14")
  #+call: arc-brightness(source="119-3155", field="14")
  #+call: plot-image(source="119-3155", field="14", vmin="0.73", vmax="0.9")
  #+call: view-pdf(source="119-3155", field="14")

+ [X] 138-3024 - Field 15 - not found
  + Should be in Field 14
#+call: display-in-ds9(source="138-3024", field="14", vmin="0.82", vmax="0.95")
#+call: find-fit-extract(source="138-3024", field="14")
#+call: arc-brightness(source="138-3024", field="14")
#+call: plot-image(source="138-3024", field="14", vmin="0.82", vmax="0.95")
#+call: view-pdf(source="138-3024", field="14")

+ [X] 142-301 - fix up inner shock - asymmetrical
#+call: display-in-ds9(source="142-301", field="01", vmin="30", vmax="150")

#+call: find-fit-extract(source="142-301", field="01")

#+call: arc-brightness(source="142-301", field="01")

#+call: plot-image(source="142-301", field="01", vmin="30", vmax="150")

#+call: view-pdf(source="142-301", field="01")

+ [X] 154-225 - very weak, maybe remove from catalog
#+call: display-in-ds9(source="154-225", field="01", vmin="30", vmax="60")

#+call: find-fit-extract(source="154-225", field="01")

#+call: arc-brightness(source="154-225", field="01")  :results verbatim replace

#+RESULTS:
: "**************************************************
: Calculating shell brightness for Bally_01
: **************************************************
: No bad pixel mask found
: BG trimean = 40.78, iqr = 3.25
: Shell trimean = 43.59, iqr = 2.17
: Adopting plot range of 34.28 to 47.92
: "

#+call: plot-image(source="154-225", field="01", vmin="30", vmax="60")

#+call: view-pdf(source="154-225", field="01")

+ [X] 163-317 - fix up shock - use IR image
#+call: display-in-ds9(source="163-317", field="01", vmin="45", vmax="100")

#+call: find-fit-extract(source="163-317", field="01")

#+call: arc-brightness(source="163-317", field="01")  :results verbatim replace

#+RESULTS:
: "**************************************************
: Calculating shell brightness for Bally_01
: **************************************************
: No bad pixel mask found
: BG trimean = 68.49, iqr = 4.22
: Shell trimean = 69.14, iqr = 5.19
: Adopting plot range of 60.05 to 79.52
: "

#+call: plot-image(source="163-317", field="01", vmin="45", vmax="100")

#+call: view-pdf(source="163-317", field="01")

+ [X] 163-222 - missing inner shock - no reason why
#+call: display-in-ds9(source="163-222", field="01", vmin="35", vmax="50")

#+call: find-fit-extract(source="163-222", field="01")

#+call: arc-brightness(source="163-222", field="01")  :results verbatim replace

#+RESULTS:
: "**************************************************
: Calculating shell brightness for Bally_01
: **************************************************
: No bad pixel mask found
: BG trimean = 46.02, iqr = 1.42
: Shell trimean = 44.15, iqr = 1.13
: Adopting plot range of 43.19 to 46.40
: "

#+call: plot-image(source="163-222", field="01", vmin="35", vmax="50")

#+call: view-pdf(source="163-222", field="01")

This is a good example of a high-incliation object, giving rise to low value of A'

+ [X] 165-235 - missing inner shock - fix up outer shock (not so far to E)
#+call: display-in-ds9(source="165-235", field="01", vmin="40", vmax="70")

#+call: find-fit-extract(source="165-235", field="01")

#+call: arc-brightness(source="165-235", field="01")  :results verbatim replace

#+RESULTS:
: "**************************************************
: Calculating shell brightness for Bally_01
: **************************************************
: No bad pixel mask found
: BG trimean = 50.27, iqr = 4.70
: Shell trimean = 53.13, iqr = 4.13
: Adopting plot range of 40.87 to 61.40
: "

#+call: plot-image(source="165-235", field="01", vmin="40", vmax="70")

#+call: view-pdf(source="165-235", field="01")

+ [X] 166-316 - fix up inner shock
#+call: display-in-ds9(source="166-316", field="01", vmin="64", vmax="85")

#+call: find-fit-extract(source="166-316", field="01")

#+call: arc-brightness(source="166-316", field="01")  :results verbatim replace

#+RESULTS:
: "**************************************************
: Calculating shell brightness for Bally_01
: **************************************************
: No bad pixel mask found
: BG trimean = 71.48, iqr = 3.25
: Shell trimean = 72.16, iqr = 1.53
: Adopting plot range of 64.97 to 75.21
: "

#+call: plot-image(source="166-316", field="01", vmin="64", vmax="85")

#+call: view-pdf(source="166-316", field="01")

+ [X] 180-331 - fix up inner and outer shocks - include part to south
#+call: display-in-ds9(source="180-331", field="01", vmin="25", vmax="50")

#+call: find-fit-extract(source="180-331", field="01")

#+call: arc-brightness(source="180-331", field="01")  :results verbatim replace

#+RESULTS:
: "**************************************************
: Calculating shell brightness for Bally_01
: **************************************************
: No bad pixel mask found
: BG trimean = 29.37, iqr = 0.99
: Shell trimean = 33.67, iqr = 5.30
: Adopting plot range of 27.40 to 44.27
: "

#+call: plot-image(source="180-331", field="01", vmin="25", vmax="50")

#+call: view-pdf(source="180-331", field="01")

+ [X] 212-400 - Field 06 - not found
#+call: display-in-ds9(source="212-400", field="06", vmin="20", vmax="33")

#+call: find-fit-extract(source="212-400", field="06")

#+call: arc-brightness(source="212-400", field="06")  :results verbatim replace

#+RESULTS:
: "**************************************************
: Calculating shell brightness for Bally_06
: **************************************************
: No bad pixel mask found
: BG trimean = 23.36, iqr = 0.90
: Shell trimean = 23.36, iqr = 0.75
: Adopting plot range of 21.56 to 24.85
: "

#+call: plot-image(source="212-400", field="06", vmin="20", vmax="33", zoom="1.5")

#+call: view-pdf(source="212-400", field="06")


**** [50/51] Sources that still need their levels adjusting
:PROPERTIES:
:results:  silent
:END:
+ [X] LL4
  #+call: display-in-ds9(source="LL4", field="24", vmin="0.83", vmax="1.2")
  #+call: find-fit-extract(source="LL4", field="24")
  #+call: arc-brightness(source="LL4", field="24")
  #+call: plot-image(source="LL4", field="24", vmin="0.83", vmax="1.2", zoom="0.9")
  #+call: view-pdf(source="LL4", field="24")


+ [X] 4468-605
  #+call: display-in-ds9(source="4468-605", field="17", vmin="1.37", vmax="1.6")
  #+call: plot-image(source="4468-605", field="17", vmin="1.37", vmax="1.6")
  #+call: view-pdf(source="4468-605", field="17")

+ [X] 4578-251
  #+call: display-in-ds9(source="4578-251", field="09", vmin="2.75", vmax="3.5")
  #+call: plot-image(source="4578-251", field="09", vmin="2.75", vmax="3.5")
  #+call: view-pdf(source="4578-251", field="09")

+ [X] w000-400
  #+call: display-in-ds9(source="w000-400", field="09", vmin="2.75", vmax="3.7")
  #+call: plot-image(source="w000-400", field="09", vmin="2.75", vmax="3.7", zoom="0.3")
  #+call: view-pdf(source="w000-400", field="09")
  + Big parabolic arc that we need to zoom out to see

+ [X] w012-407
  #+call: display-in-ds9(source="w012-407", field="01", vmin="3.2", vmax="4.7")
  #+call: plot-image(source="w012-407", field="01", vmin="3.2", vmax="4.7")
  #+call: view-pdf(source="w012-407", field="01")

+ [X] w014-414
  #+call: display-in-ds9(source="w014-414", field="01", vmin="3.3", vmax="4.0")
  #+call: plot-image(source="w014-414", field="01", vmin="3.3", vmax="4.0")
  #+call: view-pdf(source="w014-414", field="01")

+ [X] w030-524
  #+call: display-in-ds9(source="w030-524", field="01", vmin="5.0", vmax="6.2")
  #+call: plot-image(source="w030-524", field="01", vmin="5.0", vmax="6.2", zoom="0.7")
  #+call: view-pdf(source="w030-524", field="01")

+ [X] 042-628
  #+call: display-in-ds9(source="042-628", field="16", vmin="2.7", vmax="4.2")
  #+call: plot-image(source="042-628", field="16", vmin="2.7", vmax="4.2")
  #+call: view-pdf(source="042-628", field="16")

+ [X] LL1
  #+call: display-in-ds9(source="LL1", field="01", vmin="6.5", vmax="16.0")
  #+call: plot-image(source="LL1", field="01", vmin="6.5", vmax="16.0")
  #+call: view-pdf(source="LL1", field="01")

+ [X] 065-502
  #+call: display-in-ds9(source="065-502", field="01", vmin="8.5", vmax="11")
  #+call: plot-image(source="065-502", field="01", vmin="8.5", vmax="11", zoom="0.8")
  #+call: view-pdf(source="065-502", field="01")

+ [X] 066-3251
  #+call: display-in-ds9(source="066-3251", field="14", vmin="0.84", vmax="1.05")
  #+call: plot-image(source="066-3251", field="14", vmin="0.84", vmax="1.05")
  #+call: view-pdf(source="066-3251", field="14")

+ [X] w069-601
  #+call: display-in-ds9(source="w069-601", field="01", vmin="6.1", vmax="9.0")
  #+call: plot-image(source="w069-601", field="01", vmin="6.1", vmax="9.0")
  #+call: view-pdf(source="w069-601", field="01")

+ [X] 072-134
  #+call: display-in-ds9(source="072-134", field="09", vmin="8", vmax="18.0")
  #+call: plot-image(source="072-134", field="09", vmin="8", vmax="18.0")
  #+call: view-pdf(source="072-134", field="09")
  + A bit like a twin of 142-301 - prominent disk and extinction in tail - flat shock

+ [X] w073-227
  #+call: display-in-ds9(source="w073-227", field="01", vmin="9", vmax="16.0")
  #+call: plot-image(source="w073-227", field="01", vmin="9", vmax="16.0")
  #+call: view-pdf(source="w073-227", field="01")

+ [X] 083-435
  #+call: display-in-ds9(source="083-435", field="01", vmin="10.5", vmax="13.9")
  #+call: plot-image(source="083-435", field="01", vmin="10.5", vmax="13.9")
  #+call: view-pdf(source="083-435", field="01")

+ [X] 102-157
  #+call: display-in-ds9(source="102-157", field="01", vmin="14.0", vmax="22")
  #+call: plot-image(source="102-157", field="01", vmin="14.0", vmax="22", zoom="0.8")
  #+call: view-pdf(source="102-157", field="01")

+ [X] 109-246
  #+call: display-in-ds9("109-246", "01", "27.0", "50")
  #+call: plot-image("109-246", "01", "27.0", "50", zoom="0.7")
  #+call: view-pdf("109-246", "01")
  + This is an inward-facing shock super-imposed on an outward-facing jet shock

+ [X] 117-421
  #+call: display-in-ds9("117-421", "01", "16.0", "30")
  #+call: plot-image("117-421", "01", "16.0", "30")
  #+call: view-pdf("117-421", "01")

+ [X] 116-3101
  #+call: display-in-ds9("116-3101", "14", "0.75", "0.95")
  #+call: plot-image("116-3101", "14", "0.75", "0.95")
  #+call: view-pdf("116-3101", "14")
  + Double shell
  + But we only trace the inner shell

+ [X] 121-434
  #+call: display-in-ds9("121-434", "01", "15.0", "22")
  #+call: plot-image("121-434", "01", "15.0", "22")
  #+call: view-pdf("121-434", "01")

+ [X] 131-046
  #+call: display-in-ds9("131-046", "02", "10.0", "22")
  #+call: plot-image("131-046", "02", "10.0", "22")
  #+call: view-pdf("131-046", "02")

+ [X] 132-053
  #+call: display-in-ds9("132-053", "02", "16.5", "20")
  #+call: find-fit-extract("132-053", "02")
  #+call: arc-brightness("132-053", "02")
  #+call: plot-image("132-053", "02", "16.5", "20")
  #+call: view-pdf("132-053", "02")

+ [X] 136-3057
  #+call: display-in-ds9("136-3057", "14", "0.7", "1.0")
  #+call: plot-image("136-3057", "14", "0.7", "1.0")
  #+call: view-pdf("136-3057", "14")

+ [X] 154-240
  #+call: display-in-ds9("154-240", "01", "30", "80")
  #+call: plot-image("154-240", "01", "30", "80")
  #+call: view-pdf("154-240", "01")

+ [X] 158-323
  #+call: display-in-ds9("158-323", "01", "55", "100")
  #+call: find-fit-extract("158-323", "01")
  #+call: arc-brightness("158-323", "01")
  #+call: plot-image("158-323", "01", "55", "100")
  #+call: view-pdf("158-323", "01")

+ [X] 159-221
  #+call: display-in-ds9("159-221", "01", "35", "65")
  #+call: plot-image("159-221", "01", "35", "65")
  #+call: view-pdf("159-221", "01")

+ [X] 161-324
  #+call: display-in-ds9("161-324", "01", "50", "100")
  #+call: plot-image("161-324", "01", "50", "100")
  #+call: view-pdf("161-324", "01")

+ [X] 167-317
  #+call: display-in-ds9("167-317", "01", "50", "100")
  #+call: plot-image("167-317", "01", "50", "100")
  #+call: view-pdf("167-317", "01")

+ [X] 168-328
  #+call: display-in-ds9("168-328", "01", "42", "80")
  #+call: plot-image("168-328", "01", "42", "80")
  #+call: view-pdf("168-328", "01")

+ [X] 168-326N 1
  #+call: display-in-ds9("168-326N", "01", "50", "180")
  #+call: plot-image("168-326N", "01", "42", "80")
  #+call: view-pdf("168-326N", "01")
  + Interproplyd shock
  + Do not use this one - badly affected by saturation

+ [X] 168-326 1
  #+call: display-in-ds9("168-326", "01", "47", "90")
  #+call: plot-image("168-326", "01", "47", "90")
  #+call: view-pdf("168-326", "01")

+ [X] 169-338 1
  #+call: display-in-ds9("169-338", "01", "42", "60")
  #+call: find-fit-extract("169-338", "01")
  #+call: arc-brightness("169-338", "01") 
  #+call: plot-image("169-338", "01", "42", "60", zoom="1.5")
  #+call: view-pdf("169-338", "01")

+ [X]  170-249 1
  #+call: display-in-ds9("170-249", "01", "35", "65")
  #+call: plot-image("170-249", "01", "35", "65", zoom="1.5")
  #+call: view-pdf("170-249", "01")

  + A somewhat dubious one - shell is incomplete


+ [X] 173-342 1
  #+call: display-in-ds9("173-342", "01", "28", "70")
  #+call: plot-image("173-342", "01", "28", "70")
  #+call: view-pdf("173-342", "01")

  + Interproplyd with 177-341

+ [X] 173-236 1
  #+call: display-in-ds9("173-236", "01", "43", "80")
  #+call: find-fit-extract("173-236", "01")
  #+call: arc-brightness("173-236", "01")
  #+call: plot-image("173-236", "01", "43", "80", zoom="1.5")
  #+call: view-pdf("173-236", "01")
  + I had to redo this since Luis had included unlikely filaments to the west
  + The radius of curvature is very small (A < 1) and it may be a jet bowshock
  + On the other hand, it looks similar to 212-400

+ [X] 175-321 1
  #+call: display-in-ds9("175-321", "01", "35", "90")
  #+call: find-fit-extract("175-321", "01")
  #+call: arc-brightness("175-321", "01")
  #+call: plot-image("175-321", "01", "35", "90", zoom="1.3")
  #+call: view-pdf("175-321", "01")

  #+RESULTS:

  + This is a shell that faces th1D, but probably not related with Ney-Allen
  + Luis has traced a sharp looking shock to the SW, but I don't think it is related
  + Should probably be eliminated from samples


+ [X] 177-341 1
  #+call: display-in-ds9("177-341", "01", "23", "70")
  #+call: plot-image("177-341", "01", "23", "70")
  #+call: view-pdf("177-341", "01")

+ [X] 178-258 1
  #+call: display-in-ds9("178-258", "01", "30", "60")
  #+call: find-fit-extract("178-258", "01")
  #+call: arc-brightness("178-258", "01")
  #+call: plot-image("178-258", "01", "30", "60")
  #+call: view-pdf("178-258", "01")
  + Very knotty and irregular shell


+ [X] 189-329 1
  #+call: display-in-ds9("189-329", "01", "28", "65")
  #+call: find-fit-extract("189-329", "01")
  #+call: arc-brightness("189-329", "01")
  #+call: plot-image("189-329", "01", "28", "65", zoom="0.8")
  #+call: view-pdf("189-329", "01")
  + Very diffuse and thick shell
  + Had to change it a bit since did not agree with Luis's points

+ [X] 203-3039 14
  #+call: display-in-ds9("203-3039", "14", "0.9", "1.15")
  #+call: find-fit-extract("203-3039", "14")
  #+call: arc-brightness("203-3039", "14")
  #+call: plot-image("203-3039", "14", "0.9", "1.15")
  #+call: view-pdf("203-3039", "14")
  + very faint but well delineated
  + perpendicular jet

+ [X] 205-230 6
  #+call: display-in-ds9("205-230", "06", "16", "40")
  #+call: plot-image("205-230", "06", "16", "40", zoom="0.5")
  #+call: view-pdf("205-230", "06")
  + interproplyd shock

+ [X] 206-043 2
  #+call: display-in-ds9("206-043", "02", "6", "9")
  #+call: plot-image("206-043", "02", "6", "9", zoom="1.4")
  #+call: view-pdf("206-043", "02")
 
+ [X] 261-3018 7
  #+call: display-in-ds9("261-3018", "07", "1.0", "1.5")
  #+call: plot-image("261-3018", "07", "1.0", "1.5", zoom="0.7")
  #+call: view-pdf("261-3018", "07")
  + very large Rc
  + superimposed on large HH jet flow

+ [X] w266-558 6
  #+call: display-in-ds9("w266-558", "06", "9.5", "12")
  #+call: plot-image("w266-558", "06", "9.5", "12")
  #+call: view-pdf("w266-558", "06")
  + perfect double shell

+ [X] 305-811 7
  #+call: display-in-ds9("305-811", "07", "3.5", "4.2")
  #+call: plot-image("305-811", "07", "3.5", "4.2")
  #+call: view-pdf("305-811", "07")

+ [X] 308-3036 8
  #+call: display-in-ds9("308-3036", "08", "1.15", "1.5")
  #+call: plot-image("308-3036", "08", "1.15", "1.5")
  #+call: view-pdf("308-3036", "08")

+ [X] LL5 7
  #+call: display-in-ds9("LL5", "07", "3.2", "4.5")
  #+call: plot-image("LL5", "07", "3.2", "4.5")
  #+call: view-pdf("LL5", "07")

+ [X] LL6 8
  #+call: display-in-ds9("LL6", "08", "1.35", "2.0")
  #+call: plot-image("LL6", "08", "1.35", "2.0", zoom="0.6")
  #+call: view-pdf("LL6", "08")

+ [X] 344-3020 8
  #+call: display-in-ds9("344-3020", "08", "1.4", "1.7")
  #+call: plot-image("344-3020", "08", "1.38", "1.7")
  #+call: view-pdf("344-3020", "08")
  + May be 2 arcs superimposed here
  + exeedingly faint

+ [ ] LL7 0
  + would need to use the Robberto images for this

+ [X] 362-3137 8
  #+call: display-in-ds9("362-3137", "08", "0.78", "0.95")
  #+call: plot-image("362-3137", "08", "0.78", "0.95")
  #+call: view-pdf("362-3137", "08")
 
**** Original levels of Luis
#+name: luis-original-gray-levels
|   Source | Field |  vmin |  vmax | minfac | maxfac | gray |
|----------+-------+-------+-------+--------+--------+------|
|      LL3 |    17 | 0.465 |  1.66 |     20 |      6 | x    |
|      LL2 |    18 | 0.733 |  2.14 |     13 |      3 | x    |
|      LL4 |    24 | 0.791 |   1.1 |      3 |      5 | x    |
| 4468-605 |    17 |  1.16 |  1.63 |     10 |      5 | x    |
| 4578-251 |     9 |     0 |     0 |      3 |      3 | x    |
| 4582-635 |    16 | 0.938 |  3.49 |     14 |     10 | x    |
| w000-400 |     9 |     0 |     0 |      3 |      3 | x    |
| w005-514 |    16 |  2.42 |   5.8 |     15 |      3 | x    |
| w012-407 |     1 |  2.34 |  4.08 |     17 |      3 | x    |
| w014-414 |     1 |  3.16 |  3.92 |      4 |      4 | x    |
|  022-635 |    16 |  2.02 |   3.8 |     14 |     17 | x    |
| w030-524 |     1 |     0 |     0 |      3 |      3 | x    |
|  041-637 |    16 |  1.06 |  3.95 |     14 |     10 | x    |
|  042-628 |    16 |  1.87 |  4.26 |     14 |     10 | x    |
| w044-527 |     1 |   3.4 |  9.09 |      7 |      3 | x    |
|  049-143 |     9 |     0 |     0 |      3 |      3 | x    |
|  051-024 |     9 |   3.3 |   7.7 |     10 |      5 | x    |
|      LL1 |     1 |     0 |     0 |      3 |      3 | x    |
|  065-502 |     1 |     0 |     0 |      3 |      3 | x    |
| 066-3251 |    14 |     0 |     0 |      3 |      3 | X?   |
| w069-601 |     1 |     0 |     0 |      3 |      3 | x    |
|  072-134 |     9 |     0 |     0 |      3 |      3 | x    |
| w073-227 |     1 |  6.85 |  15.9 |     10 |     11 | x    |
|  074-229 |     1 |    -1 |    -1 |        |        | x    |
|  083-435 |     1 |  10.4 |  13.1 |     11 |      4 | x    |
|  101-233 |     1 |  5.56 |  35.6 |      7 |      5 | x    |
|  102-157 |     1 |  8.14 |  24.7 |     15 |     17 | x    |
|  106-245 |     1 |     0 |     0 |      3 |      3 | x    |
|  109-246 |     1 |  2.86 |  52.6 |     20 |      7 | x    |
|  117-421 |     1 |  12.2 |  31.6 |      5 |      3 | x    |
| 116-3101 |    14 | 0.629 |  0.95 |     10 |      3 | x    |
| 119-3155 |    14 | 0.613 | 0.946 |     10 |      7 | x    |
|  121-434 |     1 |     0 |     0 |      3 |      3 | x    |
|  131-046 |     2 |  6.55 |  21.1 |      3 |      4 | x    |
|  132-053 |     2 |  15.8 |  19.8 |      6 |      8 | x    |
| 136-3057 |    14 | 0.484 | 0.952 |     10 |      3 | x    |
| 138-3024 |    15 |    -1 |    -1 |        |        | x    |
|  142-301 |     1 |  22.1 |   107 |     10 |      5 | x    |
|  154-225 |     1 |  19.9 |    55 |     10 |      6 | x    |
|  154-240 |     1 | -7.85 |  82.3 |      5 |    2.5 | x    |
|  158-323 |     1 |     0 |     0 |      3 |      3 | x    |
|  159-221 |     1 |     0 |     0 |      3 |      3 | x    |
|  161-324 |     1 |     0 |     0 |      3 |      3 | x    |
|  163-317 |     1 |  29.1 |   113 |     10 |      5 | x    |
|  163-222 |     1 |  25.2 |  52.4 |      3 |      6 | x    |
|  165-235 |     1 |    18 |  75.9 |     10 |     12 | x    |
|  166-316 |     1 |     0 |     0 |      3 |      3 | x    |
|  167-317 |     1 |  -124 |   248 |     10 |      1 | x    |
|  168-328 |     1 |  13.3 |  94.2 |     10 |     10 | x    |
| 168-326N |     1 | -64.1 |   211 |     70 |      2 | x    |
|  168-326 |     1 |     0 |     0 |      3 |      3 | x    |
|  169-338 |     1 |     0 |     0 |      3 |      3 | x    |
|  170-249 |     1 |  10.1 |  78.5 |      5 |     10 | x    |
|  173-342 |     1 |  9.86 |  65.5 |     15 |     10 | x    |
|  173-236 |     1 |  19.8 |  78.3 |     15 |     10 | x    |
|  175-321 |     1 |  2.62 |  98.1 |     10 |      6 | x    |
|  177-341 |     1 |  7.58 |  60.7 |      7 |      5 | x    |
|  178-258 |     1 |  14.5 |  58.8 |      7 |      5 | x    |
|  180-331 |     1 |    17 |  49.5 |     12 |      3 | x    |
|  189-329 |     1 |  9.09 |  58.9 |     12 |      4 | x    |
| 203-3039 |    14 | 0.729 |  1.23 |      7 |      7 | x    |
|  205-230 |     6 |  7.86 |  38.3 |      2 |      3 | x    |
|  206-043 |     2 |  3.88 |  8.66 |     14 |     12 | x    |
|  212-400 |     6 |     0 |     0 |      3 |      3 | x    |
| 261-3018 |     7 | 0.751 |  1.46 |     10 |      3 | x    |
| w266-558 |     6 |  7.67 |    12 |     15 |      3 | x    |
|  305-811 |     7 |  2.81 |  4.28 |     13 |      5 | x    |
| 308-3036 |     8 | 0.932 |  1.53 |     10 |      6 | x    |
|      LL5 |     7 |     0 |     0 |      3 |      3 | x    |
|      LL6 |     8 |     0 |     0 |      3 |      3 | x    |
| 344-3020 |     8 |   1.2 |   1.6 |      9 |      3 | x    |
|      LL7 |     0 |    -1 |    -1 |        |        |      |
| 362-3137 |     8 | 0.639 | 0.947 |      8 |      3 | x    |



** Make a table of Jorge's measurements
:PROPERTIES:
:ID:       013B7A01-2624-435F-8B47-B591397F507C
:END:
+ JSON files read by [[file:luis-programas/arcs-summary-proplyds.py]]
  #+BEGIN_SRC sh :dir luis-programas :results silent
python arcs-summary-proplyds.py
  #+END_SRC
  + Writes table to [[file:luis-programas/arcs-summary-proplyds.tab]]
+ Note that the other table is made with [[file:luis-programas/arcs-summary.py]], which is now the canonical version.   There was an earlier version in =programas= that came from [[file:~/Work/Bowshocks/Jorge/bowshock-shape/read-shapes-LL]] but that has now been deleted. 
  #+BEGIN_SRC sh :dir luis-programas :results silent
python arcs-summary.py
  #+END_SRC
  + Writes table to [[file:luis-programas/arcs-summary.tab]]
+ Next, merge the two tables, giving priority to the Jorge measurements
  #+BEGIN_SRC python :dir luis-programas :results output
    import numpy as np
    from  astropy.table import Table, join
    import json

    tab = Table.read("arcs-summary.tab",
                     format="ascii.commented_header",
                     delimiter="\t",
                     fill_values=('-', np.nan) )
    ptab = Table.read("arcs-summary-proplyds.tab",
                      format="ascii.commented_header",
                      delimiter="\t",
                      fill_values=('-', np.nan) )

    with open("../ll-data.json") as f:
        db = json.load(f)

    ## First change the names in ptab to be canonical
    for source, data in db.items():
        irow, = np.where(ptab["Object"] == data["bname"])
        if len(irow) > 0:
            print("Row", irow, "updating", data["bname"], "to", data["oname"])
            # Crazily, this does not work if we put the row before the column
            ptab["Object"][irow] = data["oname"]

    ## Second merge the two tables, priority to ptab
    # outer join
    mtab = join(ptab, tab, keys='Object', join_type='outer')
    # followed by manual merging of columns - ugh
    for cname in ptab.colnames[1:]:
        cn1 = cname + '_1'
        cn2 = cname + '_2'
        m = ~mtab[cn1].mask
        mtab[cname] = mtab[cn2]
        mtab[cname][m] = mtab[cn1][m]
        mtab.remove_columns([cn1, cn2])

    ## Third, write out the merged table
    mtab.write("arcs-summary-merge.tab",
               format="ascii.commented_header",
               delimiter="\t")
    mtab.write("arcs-summary-merge.ecsv",
               format="ascii.ecsv")

  #+END_SRC

  #+RESULTS:
  : Row [18] updating LV5 to 158-323
  : Row [17] updating LV4 to 161-324
  : Row [16] updating LV3 to 163-317
  : Row [15] updating LV2b to 166-316
  : Row [14] updating LV2 to 167-317
  : Row [13] updating HST1 to 177-341


** Look at correlations
:PROPERTIES:
:dir:      luis-programas
:ID:       95244DE6-CB85-41CB-A6AC-286BEFE625B3
:END:

#+name: annotations
#+BEGIN_SRC python
  famous = ['177-341', '167-317', '168-326', '161-324', '142-301']
  other_interesting = ['w073-227', 'w069-601', 'w266-558', 'w000-400', 'w005-514']

  def label_sources(labels, x, y, extramask=None, allmask=None):
      """Add labels at points (x, y) for selected sources"""
      mask = np.array(['LL' in source
                       or source in famous + other_interesting
                       for source in labels])
      if extramask is not None:
          mask = mask | extramask
      if allmask is not None:
          mask = mask & allmask
      radius = 5.0
      theta_max = np.pi/3.0
      for i, txt in enumerate(labels[mask]):
          theta = (2*np.random.random_sample() - 1.0)*theta_max
          dx, dy = radius*np.cos(theta), radius*np.sin(theta)
          ax.annotate(txt, (x[mask][i], y[mask][i]), (dx, dy),
                      textcoords='offset points', verticalalignment='center',
                      fontsize=5, alpha=0.6)
#+END_SRC

#+name: read-merge-table
#+BEGIN_SRC python
  tab = Table.read("arcs-summary-merge.ecsv", format="ascii.ecsv")
#+END_SRC

#+name: read-luis-table
#+BEGIN_SRC python
  tab = Table.read("arcs-summary.ecsv", format="ascii.ecsv")
#+END_SRC

#+name: mask-out-unwanted
#+BEGIN_SRC python
  with open("problem-sources.txt") as f:
      problem_sources = f.read().split('\n')
  with open("interproplyd.txt") as f:
      problem_sources += f.read().split('\n')

  m = np.isfinite(tab['R_out']) & np.isfinite(tab['R_in']) & (tab['R_out'] > tab['R_in'])
  m = m & np.array([not source in problem_sources for source in tab['Object']])
#+END_SRC

#+name: set-common-vars
#+BEGIN_SRC python
  A = tab['Rc_out']/tab['R_out']
  Ain = tab['Rc_in']/tab['R_in']
  H = (tab['R_out'] - tab['R_in'])/tab['R_out']
  D60 = tab['D']/60
  contrast = np.log10(tab['Dif_Bally']/tab['Value_bg_Bally'])
  q = tab['R_out'].data/tab['D'].data
  PA_star = (tab['PA_star'] - 180.0) % 360.0
  dPA = ((tab ['PA_out'] - tab ['PA_star'] + 180.0) % 360.0) - 180.0
#+END_SRC

#+BEGIN_SRC python :noweb yes :return figlist :results list :tangle luis-programas/will-correlations.py
  import numpy as np
  import matplotlib.pyplot as plt
  from  astropy.table import Table

  <<annotations>>
  <<read-merge-table>>
  <<mask-out-unwanted>>
  <<set-common-vars>>
   
  figlist = []

  pltfile = 'will-A-vs-q.pdf'
  fig = plt.figure(figsize=(7,6))
  ax = fig.add_subplot(111, axisbg="#eeeeee")
  plt.scatter(q[m], A[m], s=20*tab['R_out'][m], c=D60[m], vmin=0.0, cmap=plt.cm.hot, alpha=0.6)
  label_sources(tab['Object'], q, A, allmask=m)
  cb = plt.colorbar()
  cb.set_label('Projected distance from Trapezium, D / arcmin')
  plt.xlabel('Bowshock fractional size, q = r0/D')
  plt.ylabel('Bowshock bluntness, A = Rc/r0')
  ax.set_xscale('log')
  ax.set_xlim(0.001, 1.0)
  fig.savefig(pltfile)
  figlist.append('[[file:luis-programas/{0}][{0}]]'.format(pltfile))

  pltfile = 'will-H-vs-A.pdf'
  fig = plt.figure(figsize=(7,6))
  ax = fig.add_subplot(111, axisbg="#eeeeee")
  plt.scatter(A[m], H[m], s=20*tab['R_out'][m], c=D60[m], vmin=0.0, cmap=plt.cm.hot, alpha=0.6)
  label_sources(tab['Object'], A, H, (A > 5.0) | (A < 1.0) | (H <= 0.2) | (H >= 0.6), allmask=m)
  cb = plt.colorbar()
  cb.set_label('Projected distance from Trapezium, D / arcmin')
  plt.xlabel('Bowshock bluntness, A = Rc/r0')
  plt.ylabel('Shell relative thickness, H = h/r0')
  fig.savefig(pltfile)
  figlist.append('[[file:luis-programas/{0}][{0}]]'.format(pltfile))

  pltfile = 'will-H-vs-q.pdf'
  fig = plt.figure(figsize=(7,6))
  ax = fig.add_subplot(111, axisbg="#eeeeee")
  plt.scatter(q[m], H[m], s=20*tab['R_out'][m], c=np.log10(D60[m]), cmap=plt.cm.hot, alpha=0.6)
  label_sources(tab['Object'], q, H, allmask=m)
  cb = plt.colorbar()
  cb.set_label('Projected distance from Trapezium, D / arcmin')
  plt.xlabel('Bowshock fractional size, q = r0/D')
  plt.ylabel('Shell relative thickness, H = h/r0')
  ax.set_xscale('log')
  ax.set_xlim(0.001, 1.0)
  fig.savefig(pltfile)
  figlist.append('[[file:luis-programas/{0}][{0}]]'.format(pltfile))

  pltfile = 'will-q-vs-D.pdf'
  fig = plt.figure(figsize=(7,6))
  ax = fig.add_subplot(111, axisbg="#eeeeee")
  plt.scatter(D60[m], q[m], s=20*tab['R_out'][m], c=contrast[m], cmap=plt.cm.hot, alpha=0.6)
  label_sources(tab['Object'], D60, q, allmask=m)
  cb = plt.colorbar()
  cb.set_label('Shell/background brightness contrast')
  plt.xlabel('Projected distance from Trapezium, D / arcmin')
  plt.ylabel('Bowshock fractional size, q = r0/D')
  ax.set_xlim(0.05, 20.0)
  ax.set_ylim(0.001, 1.0)
  ax.set_xscale('log')
  ax.set_yscale('log')
  fig.savefig(pltfile)
  figlist.append('[[file:luis-programas/{0}][{0}]]'.format(pltfile))

  pltfile = 'will-r0-vs-D.pdf'
  fig = plt.figure(figsize=(7,6))
  ax = fig.add_subplot(111, axisbg="#eeeeee")
  plt.scatter(D60[m], tab['R_out'][m], s=100*H[m], c=contrast[m], cmap=plt.cm.hot, alpha=0.6)
  label_sources(tab['Object'], D60, tab['R_out'],
                (tab['R_out'] >= 5.0) | (tab['R_out'] <= 0.8), allmask=m)
  Darray = np.linspace(D60.min(), D60.max())
  r0norm = 0.8
  cb = plt.colorbar()
  cb.set_label('Brightness contrast, log10(Shell / BG)')
  plt.xlabel('Projected distance from Trapezium, D / arcmin')
  plt.ylabel('Bowshock radius, r0 / arcsec')
  plt.text(0.05, 0.05, 'Symbol size indicates shell relative thickness, H',
           transform=ax.transAxes, fontsize='x-small')
  ax.set_xlim(0.05, 20.0)
  ax.set_ylim(0.3, 11.0)
  ax.set_xscale('log')
  ax.set_yscale('log')
  fig.savefig(pltfile)
  figlist.append('[[file:luis-programas/{0}][{0}]]'.format(pltfile))

  pltfile = 'will-PA-vs-PA.pdf'
  fig = plt.figure(figsize=(7,6))
  ax = fig.add_subplot(111, axisbg="#eeeeee")
  plt.fill_betweenx([-90.0, 90.0], [0.0, 0.0], [90.0, 90.0], zorder=-10, alpha=0.05)
  plt.fill_betweenx([-90.0, 90.0], [180.0, 180.0], [270.0, 270.0], zorder=-10, alpha=0.05)
  plt.fill_betweenx([-90.0, 90.0], [360.0, 360.0], [450.0, 450.0], zorder=-10, alpha=0.05)
  plt.text(45.0, -80.0, 'NE\nquadrant',  ha='center', fontsize='x-small')
  plt.text(135.0, -80.0, 'SE\nquadrant', ha='center', fontsize='x-small')
  plt.text(225.0, -80.0, 'SW\nquadrant', ha='center', fontsize='x-small')
  plt.text(315.0, -80.0, 'NW\nquadrant', ha='center', fontsize='x-small')
  plt.axhline(zorder=-5)
  plt.scatter(PA_star[m], dPA[m], s=20*tab['R_out'][m], c=D60[m], cmap=plt.cm.hot, alpha=0.6)
  label_sources(tab['Object'], PA_star, dPA, np.abs(dPA) > 45.0, allmask=m)
  cb = plt.colorbar()
  cb.set_label('Projected distance from Trapezium, D / arcmin')
  plt.xlabel('PA of source from Trapezium, deg')
  plt.ylabel('Angle between bowshock axis and radial direction, deg')
  ax.set_xlim(-30.0, 375.0)
  ax.set_ylim(-90.0, 90.0)
  fig.savefig(pltfile)
  figlist.append('[[file:luis-programas/{0}][{0}]]'.format(pltfile))

#+END_SRC

#+RESULTS:
- [[file:luis-programas/will-A-vs-q.pdf][will-A-vs-q.pdf]]
- [[file:luis-programas/will-H-vs-A.pdf][will-H-vs-A.pdf]]
- [[file:luis-programas/will-H-vs-q.pdf][will-H-vs-q.pdf]]
- [[file:luis-programas/will-q-vs-D.pdf][will-q-vs-D.pdf]]
- [[file:luis-programas/will-r0-vs-D.pdf][will-r0-vs-D.pdf]]
- [[file:luis-programas/will-PA-vs-PA.pdf][will-PA-vs-PA.pdf]]


** Convert S(Ha) to shell density and pressure
:PROPERTIES:
:dir:      luis-programas
:END:
Based on Luis's program [[file:luis-programas/pressure.py]]
#+name: luis-constants
#+BEGIN_SRC python 
# Conversion counts/pixel -> erg/s/cm2/sr
Sfactor_ACS = 0.0025030687604156482

# Value of recombination coefficient in cm^3/s
alpha_B = 2.6e-13 
alpha_Ha = 1.27e-13

# Energy to 3 to 2... erg
Eha = 3.0267338723714944e-12 

# Relative extinction at Ha from Blagrave
fha = 0.78

# Distances 
D_orion_pc = 436.0
AU = 1.49597870691e13
cm_per_arcsec = D_orion_pc*AU

# Boltzmann in erg/K
k = 1.3806503e-16

# Temperatura
T = 1e4

# Stellar wind
yr = 3.15576e7
Msun = 1.989e33
km = 1.0e5
Mdot_wind = 3.5e-7*Msun/yr # g/s 
Vwind = 1200*km     # cm/s
#+END_SRC

#+name: arrow-utils
#+BEGIN_SRC python
  def draw_inclination_arrow(x0, y0, inc=45):
      """Show effects of inclination changes on x-axis"""
      x1 = x0/np.cos(np.radians(inc))
      plt.plot([x0, x1], [y0, y0], '-k')
      plt.plot(x0, y0, 'ok', ms=3.5)
      plt.plot(x1, y0, '>k', ms=3.5)
      plt.text(x1, y0, '   i = {}'.format(inc), va='center', fontsize='x-small')
#+END_SRC

#+RESULTS: arrow-utils
: None

Three categories: 
- -1 :: probably not a proplyd
- 0 :: looks like a proplyd
- 1 :: catalogued as a proplyd
#+name: identify-proplyds
#+BEGIN_SRC python
  with open("../ll-data.json") as f:
      db = json.load(f)
  
  is_proplyd = {}
  for data in db.values():
      if "LL" in data["bname"]:
          key = data["bname"]
      elif data["oname"]:
          key = data["oname"].split()[-1]
      else:
          continue
      if "proplyd?" in data["Notes"]:
          is_proplyd[key] = 0
      elif "proplyd" in data["Notes"]:
          is_proplyd[key] = 1
      else:
          is_proplyd[key] = -1
#+END_SRC

#+header: :tangle luis-programas/will-shell-physical.py
#+BEGIN_SRC python :noweb yes :return figlist :results list
  import numpy as np
  import matplotlib.pyplot as plt
  from  astropy.table import Table
  import json

  <<luis-constants>>
  <<annotations>>
  <<arrow-utils>>
  <<read-merge-table>>
  <<mask-out-unwanted>>
  <<set-common-vars>>
  <<identify-proplyds>>

  with open("extinction.json") as f:
      extinction_data = json.load(f)

  # Ha surface brightness, corrected for extinction
  Sha = Sfactor_ACS*tab['Dif_Bally']
  Chb = np.array([extinction_data.get(source, 0.0) for source in tab['Object']])
  Sha *= 10**(fha*Chb)
  # Correct for [N II] contamination of Ha filter
  # This comes from the fit done in luis-programas/ratio-brightness.py
  # Combined fit: Ratio = 0.28 D**0.43
  Rnii_ha = 0.28*D60**0.43
  Sha /= 1.0 + Rnii_ha

  # Thickness and radius of the shell for measurements of delta l
  h0 = tab['h']*cm_per_arcsec
  rc = tab['Rc_out']*cm_per_arcsec
  deltal = 2*np.sqrt(h0*rc)

  nshell = np.sqrt(4.*np.pi*Sha/(alpha_Ha*deltal*Eha))
  pshell = 2.0*nshell*k*T
  MdotV_in = pshell*4.*np.pi*(tab['R_in']*cm_per_arcsec)**2 *yr/Msun/km
  MdotV_out = pshell*4.*np.pi*(60*D60*cm_per_arcsec)**2 *yr/Msun/km

  windmom = Mdot_wind*Vwind*yr/Msun/km
  windmom30 = windmom*np.cos(np.radians(30))**2
  windmom60 = windmom*np.cos(np.radians(60))**2

  D60min, D60max = 0.05, 20.0
  D60_grid = np.logspace(np.log10(D60min), np.log10(D60max), 200)
  Dcm_grid = 60*D60_grid*cm_per_arcsec
  Pram = Mdot_wind*Vwind/(4.*np.pi*Dcm_grid**2)

  # Radiation pressure quantities
  # First dust
  sigma_D = 1.0e-21
  Lsun = 3.82e33
  Lstar = 2e5*Lsun
  light_speed = 2.99792458e10
  tau_D = nshell*h0*sigma_D
  Prad_D = (Lstar/light_speed) * (1.0 - np.exp(-tau_D)) / (4.0*np.pi*(60*D60*cm_per_arcsec)**2)
  # Second hydrogen
  eV = 1.602176462e-12
  Eion = 1.3*13.6*eV              # assume mean energy of 1.3 Ryd
  Prad_H = (Eion/light_speed)*alpha_B * nshell**2 * h0

  proplyd_mask = np.array([is_proplyd.get(source) == 1 for source in tab['Object']])
  not_proplyd_mask = np.array([is_proplyd.get(source) == -1 for source in tab['Object']])
  maybe_proplyd_mask = np.array([is_proplyd.get(source) == 0 for source in tab['Object']])

  figlist = []

  def OH_upper(D):
      result = 6000.0*D**-1.4
      result[result > 2e4] = 2e4
      result[D < 0.4] = 2e4*(D[D < 0.4]/0.4)**0.5
      result[result < 400.0] = 400.0
      result[(result < 3000.0) & (D < 3.5)] = 3000.0
      return result

  def OH_lower(D):
      result = 3000.0*D**-1.4
      result[D < 1.0] = 3000.0
      return result


  pltfile = 'will-nshell-vs-D.pdf'
  fig = plt.figure(figsize=(7,6))
  ax = fig.add_subplot(111, facecolor="#eeeeee")
  plt.scatter(D60[m], nshell[m], s=10*deltal[m]/cm_per_arcsec, c=np.log10(Sha[m]), cmap=plt.cm.hot, alpha=0.6)
  label_sources(tab['Object'], D60, nshell, (nshell > 3500.0/D60) | (nshell < 1000.0/D60), allmask=m)
  cb = plt.colorbar()
  # O'Dell & Harris trend line
  plt.fill_between(D60_grid, OH_upper(D60_grid), OH_lower(D60_grid), color='k', alpha=0.1)
  #plt.plot(D60_grid, 4500.0*D60_grid**-1.3, '-')
  draw_inclination_arrow(0.1, 100*1.3**3, 30)
  draw_inclination_arrow(0.1, 100*1.3**2, 45)
  draw_inclination_arrow(0.1, 100*1.3, 60)
  draw_inclination_arrow(0.1, 100, 75)
  plt.text(0.1, 100/1.4, 'True distance correction', fontsize='x-small')
  cb.set_label('H alpha surface brightness, erg/s/cm2/sr')
  plt.xlabel('Projected distance from Trapezium, D / arcmin')
  plt.ylabel('Shell electron density, ne / pcc ')
  ax.set_xscale('log')
  ax.set_yscale('log')
  ax.set_xlim(D60min, D60max)
  ax.set_ylim(50.0, 5.e4)
  fig.savefig(pltfile)
  figlist.append('[[file:luis-programas/{0}][{0}]]'.format(pltfile))

  pltfile = 'will-Pshell-vs-D.pdf'
  fig = plt.figure(figsize=(7,6))
  ax = fig.add_subplot(111, facecolor="#eeeeee")
  plt.scatter(D60[m], pshell[m], s=10*deltal[m]/cm_per_arcsec, c=np.log10(Sha[m]), cmap=plt.cm.hot, alpha=0.6)
  label_sources(tab['Object'], D60, pshell, allmask=m)
  cb = plt.colorbar()
  cb.set_label('H alpha surface brightness, erg/s/cm2/sr')
  plt.xlabel('Projected distance from Trapezium, D / arcmin')
  plt.ylabel('Shell pressure, P / dynes/cm^2 ')
  plt.plot(D60_grid, Pram, '-k')
  plt.plot(D60_grid*np.cos(np.radians(30)), Pram, '--k')
  plt.plot(D60_grid*np.cos(np.radians(60)), Pram, ':k')
  ax.set_xscale('log')
  ax.set_yscale('log')
  ax.set_xlim(0.05, 20.0)
  ax.set_ylim(2e-10, 1.5e-7)
  fig.savefig(pltfile)
  figlist.append('[[file:luis-programas/{0}][{0}]]'.format(pltfile))

  pltfile = 'will-Prad-frac-vs-D.pdf'
  fig = plt.figure(figsize=(7,6))
  ax = fig.add_subplot(111, facecolor="#eeeeee")
  plt.scatter(D60[m], tau_D[m], s=10*deltal[m]/cm_per_arcsec, c='brown', label='Shell optical depth', alpha=0.6)
  plt.scatter(D60[m], Prad_H[m]/pshell[m], s=10*deltal[m]/cm_per_arcsec, c='yellow', label='Prad hydrogen', alpha=0.6)
  plt.scatter(D60[m], Prad_D[m]/pshell[m], s=10*deltal[m]/cm_per_arcsec, label='Prad dust', c='red', alpha=0.6)
  label_sources(tab['Object'], D60, Prad_D/pshell, allmask=m)
  plt.xlabel('Projected distance from Trapezium, D / arcmin')
  plt.ylabel('Optical depth or Pressure ratio: radiation/gas')
  ax.set_xscale('log')
  ax.set_yscale('log')
  ax.set_xlim(0.05, 20.0)
  ax.set_ylim(3e-5, 2.0)
  ax.legend(loc='upper right', fontsize='small')
  fig.savefig(pltfile)
  figlist.append('[[file:luis-programas/{0}][{0}]]'.format(pltfile))

  pltfile = 'will-MdotVout-vs-D.pdf'
  fig = plt.figure(figsize=(7,6))
  ax = fig.add_subplot(111, facecolor="#eeeeee")
  plt.scatter(D60[m], MdotV_out[m], s=10*deltal[m]/cm_per_arcsec, c=np.log10(Sha[m]), cmap=plt.cm.hot, alpha=0.6)
  label_sources(tab['Object'], D60, MdotV_out, allmask=m)
  cb = plt.colorbar()
  cb.set_label('H alpha surface brightness, erg/s/cm2/sr')
  plt.xlabel('Projected distance from Trapezium, D / arcmin')
  plt.ylabel('Outer flow Mdot V, Msun/yr km/s')
  plt.axhline(windmom, ls='-', c='k', alpha=0.7)
  plt.axhline(windmom30, ls='--', c='k', alpha=0.7)
  plt.axhline(windmom60, ls=':', c='k', alpha=0.7)
  textbb = {"facecolor": "white", "alpha": 0.7, "edgecolor": "none"}
  textpars = {'ha': 'center', 'va': 'center', 'bbox': textbb, 'fontsize': 'x-small'}
  plt.text(1.0, windmom, 'Stellar wind: 3.5e-7 Msun/yr, 1200 km/s', **textpars)
  plt.text(10.0, windmom, 'i = 0', **textpars)
  plt.text(10.0, windmom30, 'i = 30', **textpars)
  plt.text(10.0, windmom60, 'i = 60', **textpars)
  ax.set_xscale('log')
  ax.set_yscale('log')
  ax.set_xlim(0.05, 20.0)
  ax.set_ylim(6e-6, 4e-2)
  fig.savefig(pltfile)
  figlist.append('[[file:luis-programas/{0}][{0}]]'.format(pltfile))


  pltfile = 'will-MdotV-vs-D.pdf'
  fig = plt.figure(figsize=(7,6))
  ax = fig.add_subplot(111, facecolor="#eeeeee")
  mm = m & proplyd_mask
  plt.scatter(D60[mm], MdotV_in[mm], s=10*deltal[mm]/cm_per_arcsec, c='red', alpha=0.6)
  mm = m & maybe_proplyd_mask
  plt.scatter(D60[mm], MdotV_in[mm], s=10*deltal[mm]/cm_per_arcsec, c='orange', alpha=0.6)
  mm = m & not_proplyd_mask
  plt.scatter(D60[mm], MdotV_in[mm], s=10*deltal[mm]/cm_per_arcsec, c='black', alpha=0.6)
  label_sources(tab['Object'], D60, MdotV_in, not_proplyd_mask | (MdotV_in > 1.e-6/D60), allmask=m)
  plt.xlabel('Projected distance from Trapezium, D / arcmin')
  plt.ylabel('Inner flow Mdot V, Msun/yr km/s')
  ax.set_xscale('log')
  ax.set_yscale('log')
  ax.set_xlim(0.05, 20.0)
  ax.set_ylim(6e-9, 3e-5)
  fig.savefig(pltfile)
  figlist.append('[[file:luis-programas/{0}][{0}]]'.format(pltfile))


#+END_SRC

#+RESULTS:
- [[file:luis-programas/will-nshell-vs-D.pdf][will-nshell-vs-D.pdf]]
- [[file:luis-programas/will-Pshell-vs-D.pdf][will-Pshell-vs-D.pdf]]
- [[file:luis-programas/will-Prad-frac-vs-D.pdf][will-Prad-frac-vs-D.pdf]]
- [[file:luis-programas/will-MdotVout-vs-D.pdf][will-MdotVout-vs-D.pdf]] 
- [[file:luis-programas/will-MdotV-vs-D.pdf][will-MdotV-vs-D.pdf]]


*** Radiation pressure acting on the shells

**** Compare momentum flux in the wind and radiation field
+ Wind: Mdot Vw = 2.647e27 g cm / s^2
+ Radiation: L / c = 2.548e28 erg / cm
+ erg = g cm^2 / s^2, so units are the same
+ => we need an optical depth of 0.1 or more in the shell in order to be competitive
+ If \sigma = 1.e-21, the we need N > 1e20
+ This seems unlikely, so why does LV2 show up with Prad/Pgas = 1
  + It has n = 3.5e4, h = 0.706 arcsec = 4.54e15 cm
  + => N = 1.589e20 /cm^2
+ So it is competitive after all
  + /if/ we believe in such a high dust cross section
  + and in such a large thickness for the shell
+ All the other LV shells have \tau that is typically 10 times smaller than for LV2, so radiation pressure is less important for them

* Final tasks to finish the thesis

** Histograms of stars, proplyds, and LL objects

*** First make some better tables
#+BEGIN_SRC sh
mkdir Radial-Distribution
#+END_SRC

#+BEGIN_SRC python :results output verbatim
import astropy.coordinates as coord
c0 = coord.get_icrs_coordinates('tet01 ori c')
print(c0.ra.hms)
print(c0.dec.dms)
#+END_SRC

#+RESULTS:
: hms_tuple(h=5.0, m=35.0, s=16.463754480003558)
: dms_tuple(d=-5.0, m=-23.0, s=-22.848554399998804)

**** The stars
:PROPERTIES:
:ID:       191679EF-70AD-45D1-9019-5DC86335AF5A
:END:
#+BEGIN_SRC python :return tabfile :results file
  import numpy as np
  from astropy.table import Table
  import astropy.coordinates as coord

  def ra_ow(ra):
      """Convert astropy.coordinates RA to OW96 scheme"""
      h, m, s = ra.hms
      assert(int(h) == 5 and int(m/10) == 3)
      ra_code = "{:04d}".format(int((m - 30)*1000 + 10*(s + 0.05)))
      if ra_code.startswith('5'):
          ra_code = ra_code[1:]
      return ra_code

  def dec_ow(dec):
      """Convert astropy.coordinates Dec to OW96 scheme"""
      d, m, s = dec.dms
      assert(int(d) == -5)
      dec_code = "{:04d}".format(int(abs(m)*100 + abs(s) + 0.5))
      if dec_code.startswith('2'):
          dec_code = dec_code[1:]
      return dec_code


  def ow_from_coord(c):
      return "{}-{}".format(ra_ow(c.ra), dec_ow(c.dec))

  # Position of th1c
  c0 = coord.get_icrs_coordinates('tet01 ori c')

  ###
  ### Database of stars from Robberto 2013
  ###
  sdata = Table.read("Robberto2013/table5.dat", format='ascii')
  # Mask of the first entry for each unique source
  m_uniq = sdata['Seq'] == sdata['oncacs']
  # Winnow down the table
  sdata = sdata[m_uniq]

  # Get rid of masked arrays
  sdata = sdata.filled(0)

  # Now eliminate galaxies and HH objects
  source_types = ['not measured', 'single', 'close double', 'wide double', 
                  '???', 'disk', 'ionized', 'galaxy', 'herbig haro']
  sdata = sdata[(sdata['type'] > 0) & (sdata['type'] < 7)]

  # Combine the 6 columns used for coordinates into a single RA-Dec string:
  sdata["coordstring"] = ["{} {} {} -{} {} {}".format(*args)
                    for args in zip(*[sdata[col] for col in 
                                      ["RAh", "RAm", "RAs", "DEd", "DEm", "DEs"]])]
  # And convert to a SkyCoord object
  sdata["coord"] = coord.SkyCoord(sdata["coordstring"], unit=("hourangle", "deg"))

  # Find distance from th1C
  sdata['Dprime'] = [c0.separation(c).arcsec for c in sdata["coord"]]

  sdata["Object"] = [ow_from_coord(c) for c in sdata["coord"]]

  sdata.sort('Dprime')
  scols = ['Seq', 'Object', 'Dprime']
  tabfile = 'Radial-Distribution/stars.tab'
  sdata[scols].write(tabfile, format='ascii.tab')
#+END_SRC

#+RESULTS:
[[file:Radial-Distribution/stars.tab]]

**** The proplyds
#+BEGIN_SRC python :return tabfile :results file
  import numpy as np
  from astropy.table import Table
  import astropy.coordinates as coord

  # Position of th1c
  c0 = coord.get_icrs_coordinates('tet01 ori c')

  ###
  ### Database of proplyds from Ricci 2008
  ###
  rdata = Table.read("ricci-2008.dat", format='ascii')
  rdata.remove_row(0) # First row is rubbish
  # Get rid of masked arrays
  rdata = rdata.filled(np.nan)

  # Both bright and dark proplyds
  rdata = rdata[(rdata['Type'] == 'i') | (rdata['Type'] == 'd')]

  # Add column with SkyCoord object for coordinates
  rdata["coord"] = coord.SkyCoord(ra=rdata["RAJ2000"], dec=rdata["DEJ2000"],
                                  unit=("hourangle", "deg"))
  # Add column with separation from th1c
  rdata['Dprime'] = [c0.separation(c).arcsec for c in rdata["coord"]]
  rdata.rename_column('Name', 'Object')
  rdata.sort('Dprime')

  rcols = ['Object', 'Dprime', 'Type']
  tabfile = 'Radial-Distribution/proplyds.tab'
  rdata[rcols].write(tabfile, format='ascii.tab')

#+END_SRC

#+RESULTS:
[[file:Radial-Distribution/proplyds.tab]]

**** The bowshocks
#+BEGIN_SRC python :return tabfile :results file
  import numpy as np
  import json
  from astropy.table import Table
  import astropy.coordinates as coord

  # Position of th1c
  c0 = coord.get_icrs_coordinates('tet01 ori c')

  ###
  ### Database of LL objects
  ###
  lldata = Table.read("luis-programas/arcs-summary-merge.tab",
                     format="ascii.commented_header", delimiter="\t",
                     fill_values=('--', np.nan) )
  lldata.rename_column('D', 'Dprime')

  # Remove problematic sources and interproplyd shocks
  with open("luis-programas/problem-sources.txt") as f:
      problem_sources = f.read().split('\n')
  with open("luis-programas/interproplyd.txt") as f:
      problem_sources += f.read().split('\n')
  m =  np.array([not source in problem_sources for source in lldata['Object']])
  lldata = lldata[m]

  with open("ll-data.json") as f:
      db = json.load(f)
  is_proplyd = {}
  for data in db.values():
      if "LL" in data["bname"]:
          key = data["bname"]
      elif data["oname"]:
          key = data["oname"].split()[-1]
      else:
          continue
      if "proplyd?" in data["Notes"]:
          is_proplyd[key] = 0
      elif "proplyd" in data["Notes"]:
          is_proplyd[key] = 1
      else:
          is_proplyd[key] = -1

  lldata["IsProplyd?"] = [is_proplyd[source] for source in lldata['Object']]
  lldata.sort('Dprime')
  llcols = ['Object', 'Dprime', 'IsProplyd?']
  tabfile = 'Radial-Distribution/bowshocks.tab'
  lldata[llcols].write(tabfile, format='ascii.tab')
#+END_SRC

#+RESULTS:
[[file:Radial-Distribution/bowshocks.tab]]

*** Then make the histograms
#+BEGIN_SRC python
  import numpy as np
  from astropy.table import Table

  star_data = Table.read('Radial-Distribution/stars.tab',
                         format='ascii')
  prop_data = Table.read('Radial-Distribution/proplyds.tab',
                         format='ascii')
  bow_data = Table.read('Radial-Distribution/bowshocks.tab',
                         format='ascii')

  # Mask for only bright ionized proplyds
  m = prop_data['Type'] == 'i'

  # Mask for only those bows that look like they might be proplyds
  mm = bow_data['IsProplyd?'] >= 0
  # And the subset that look like proplyds but are not in Ricci
  mmm = bow_data['IsProplyd?'] == 0

  # Add in the ones that seem to be missing from Ricci
  prop_Dprime = np.r_[prop_data[m]['Dprime'], bow_data[mmm]['Dprime']]

  ###
  ### Histograms
  ###
  Drange = 0.0, 600.0
  for nbins in 5, 10, 20, 40:
      tabname = 'Dprime-histogram-N{:02d}.tab'.format(nbins)
      star_hist, edges = np.histogram(star_data['Dprime'],
                                      bins=nbins, range=Drange)
      prop_hist, edges = np.histogram(prop_Dprime,
                                      bins=nbins, range=Drange)
      dark_hist, edges = np.histogram(prop_data[~m]['Dprime'],
                                      bins=nbins, range=Drange)
      bow_hist, edges = np.histogram(bow_data['Dprime'],
                                     bins=nbins, range=Drange)
      bowp_hist, edges = np.histogram(bow_data[mm]['Dprime'],
                                     bins=nbins, range=Drange)

      left, right = edges[:-1], edges[1:]
      htab = Table(
          data=[left, right,
                star_hist, prop_hist, dark_hist, bow_hist, bowp_hist],
          names=["Dp_1", "Dp_2",
                 "N_star", "N_proplyd", "N_dark", "N_bowshock", "N_bowprop"]
      )
      htab.write(tabname, format='ascii.tab')

  ###
  ### Smart histograms
  ###

  # Split bowshock distances into 10 equal sections
  nsplit = 10
  Dp_splits = np.array_split(bow_data['Dprime'], nsplit)

  # And use those for defining the histogram edges
  edges = np.array([Drange[0]]
                   + [0.5*(Dp_splits[i][-1] + Dp_splits[i+1][0])
                      for i in range(nsplit - 1)]
                   + [Drange[-1]])

  tabname = 'Dprime-histogram-smart.tab'
  star_hist, _ = np.histogram(star_data['Dprime'], bins=edges, range=Drange)
  prop_hist, _ = np.histogram(prop_Dprime, bins=edges, range=Drange)
  dark_hist, _ = np.histogram(prop_data[~m]['Dprime'], bins=edges, range=Drange)
  bow_hist, _ = np.histogram(bow_data['Dprime'], bins=edges, range=Drange)
  bowp_hist, _ = np.histogram(bow_data[mm]['Dprime'], bins=edges, range=Drange)
  left, right = edges[:-1], edges[1:]
  htab = Table(
      data=[left, right,
            star_hist, prop_hist, dark_hist, bow_hist, bowp_hist],
      names=["Dp_1", "Dp_2",
             "N_star", "N_proplyd", "N_dark", "N_bowshock", "N_bowprop"]
  )
  htab.write(tabname, format='ascii.tab')

#+END_SRC

#+RESULTS:
: None

*** Plot the histograms
#+BEGIN_SRC python :results file :return pltfile
  import numpy as np
  from astropy.table import Table
  from matplotlib import pyplot as plt
  import seaborn as sns

  sns.set_palette('Purples_d', 2, 0.8)
  sns.set_context("paper", font_scale=1.4)
  pltfile = 'bowshock-proplyd-ratio.pdf'

  tab = Table.read('Dprime-histogram-smart.tab', format='ascii.tab')
  Dprime = 0.5*(tab['Dp_1'] + tab['Dp_2']) / 60.0
  dDp = 0.5*(tab['Dp_2'] - tab['Dp_1']) / 60.0
  ratio = tab['N_bowshock']/tab['N_proplyd']
  drat = ratio/np.sqrt(tab['N_bowshock'])
  ratio2 = tab['N_bowprop']/tab['N_proplyd']
  drat2 = ratio2/np.sqrt(tab['N_bowprop'])
  ebkws = dict(xerr=dDp, capsize=3, capthick=1, alpha=0.8)
  plt.errorbar(Dprime, ratio, yerr=drat, fmt='o', zorder=50,
               label='All bow shocks', **ebkws)
  plt.errorbar(Dprime, ratio2, yerr=drat2, fmt='s',
               label='Bow shocks identified with proplyds', **ebkws)
  plt.ylim(0.0, 3.7)
  plt.xlim(0.0, 10.0)
  plt.legend(loc='upper left')
  plt.xlabel('Projected distance from Trapezium, arcmin')
  plt.ylabel('N(bowshocks) / N(proplyds)')
  plt.subplots_adjust(0.125, 0.125, 0.975, 0.95)
  plt.savefig(pltfile)
#+END_SRC

#+RESULTS:
[[file:bowshock-proplyd-ratio.pdf]]

#+BEGIN_SRC python :results file :return pltfile
  import numpy as np
  from astropy.table import Table
  from matplotlib import pyplot as plt
  import seaborn as sns

  sns.set_palette('Reds_d', 2, 0.7)
  sns.set_context("paper", font_scale=1.4)
  pltfile = 'proplyd-star-ratio.pdf'

  tab = Table.read('Dprime-histogram-smart.tab', format='ascii.tab')
  Dprime = 0.5*(tab['Dp_1'] + tab['Dp_2']) / 60.0
  dDp = 0.5*(tab['Dp_2'] - tab['Dp_1']) / 60.0
  ratio = tab['N_proplyd']/tab['N_star']
  drat = ratio/np.sqrt(tab['N_proplyd'])
  ratio2 = tab['N_bowshock']/tab['N_star']
  drat2 = ratio2/np.sqrt(tab['N_bowshock'])
  ebkws = dict(xerr=dDp, capsize=3, capthick=1, alpha=0.8)
  plt.errorbar(Dprime, ratio, yerr=drat, fmt='o', zorder=50,
               label='Proplyds', **ebkws)
  plt.errorbar(Dprime, ratio2, yerr=drat2, fmt='s',
               label='Bow shocks', **ebkws)
  # plt.ylim(0.0, 0.8)
  plt.ylim(1e-3, 1.0)
  plt.yscale('log')
  plt.xlim(0.0, 10.0)
  #plt.xlim(0.1, 10.0)
  #plt.xscale('log')
  plt.legend(loc='upper right')
  plt.xlabel('Projected distance from Trapezium, arcmin')
  plt.ylabel('N(sample) / N(stars)')
  plt.subplots_adjust(0.125, 0.125, 0.975, 0.95)
  plt.savefig(pltfile)
#+END_SRC

#+RESULTS:
[[file:proplyd-star-ratio.pdf]]


** Correction to WFPC2 alignments
:LOGBOOK:
CLOCK: [2014-07-04 Fri 12:45]--[2014-07-04 Fri 14:35] =>  1:50
CLOCK: [2014-07-03 Thu 22:53]--[2014-07-03 Thu 23:35] =>  0:42
CLOCK: [2014-07-03 Thu 11:54]--[2014-07-03 Thu 22:27] => 10:33
:END:

# USAR 27 w005-514 5:35:00.454 -5:25:14.10 
# USAR 36, CHECAR 049-143  5:35:04.950 -5:21:42.38 
# REVISAR RA_W, DEC_W | w000-400 | 5:34:57.771 | -5:22:51.08 |  05:34:59.57 |   -5:24:00.4 |
# USAR 18 | 136-3057 | 5:35:13.160 | -5:30:56.42 |  05:35:13.60 |   -5:30:57.4 |
# NO NECESARIO |  169-338 | 5:35:16.882 | -5:23:38.12 |  05:35:16.88 | -05:23:38.10 |
# NO NECESARIO |  173-342 | 5:35:17.321 | -5:23:41.41 | 05:35:17.321 |  -5:23:41.33 |

+ The following table gives measurements of the star positions on the WFPC2 images.
+ The program then compares these positions with the ones from arcs-summary.tab, which are based on the ACS images
+ The output table gives the difference between the two
  + dRA
  + dDEC
+ The shifts are the "true" coordinates minus the WFPC2 coordinates
+ We also write out the the shifts to JSON file with names such as =w069-601-Robberto_WFPC2_f656n_25-shifts.json=
  + Note that this is done for all the WFPC2 fields that contain the source, even though the shift may not be appropriate for all of them
  + The JSON files will be read in by =extract-image.py= and used when writing out the FITS file

#+name: wfpc2-offsets
|       id |        RA_W |       DEC_W |
|      LL4 | 5:34:42.728 | -5:28:37.41 |
| 4468-605 | 5:34:46.783 | -5:26:04.92 |
| 4578-251 | 5:34:57.771 | -5:22:51.08 |
|  022-635 | 5:35:02.179 | -5:26:35.31 |
| w069-601 | 5:35:06.896 | -5:26:00.53 |
|  102-157 | 5:35:10.259 | -5:21:57.22 |
|  106-245 | 5:35:10.564 | -5:22:44.75 |
|  109-246 | 5:35:10.889 | -5:22:46.43 |
| 119-3155 | 5:35:11.476 | -5:31:52.03 |
|  132-053 | 5:35:13.208 | -5:20:52.83 |
| 138-3024 | 5:35:13.356 | -5:30:23.08 |
|  158-323 | 5:35:15.838 | -5:23:22.61 |
|  159-221 | 5:35:15.934 | -5:22:21.15 |
|  161-324 | 5:35:16.059 | -5:23:24.47 |
|  166-316 | 5:35:16.611 | -5:23:16.27 |
|  168-328 | 5:35:16.762 | -5:23:28.09 |
|  205-230 | 5:35:20.417 | -5:23:29.79 |
|  206-043 | 5:35:20.585 | -5:20:43.34 |
|  212-400 | 5:35:21.194 | -5:24:00.24 |
| w266-558 | 5:35:26.628 | -5:25:57.93 |
|  305-811 | 5:35:30.453 | -5:28:11.38 |
|      LL5 | 5:35:31.410 | -5:28:16.54 |
| 362-3137 | 5:35:36.051 | -5:31:37.47 |

#+name: find-wfpc2-offsets
#+BEGIN_SRC python :var tab=wfpc2-offsets :return out_tab
  import astropy.coordinates as coord
  import astropy.units as u
  from astropy.table import Table
  import numpy as np
  import json

  arcs_tab = Table.read("luis-programas/arcs-summary.tab", format="ascii")
  out_tab = [["source", "Bally", "WFPC2", "RA_w", "DEC_w", "RA", "DEC", "sep", "dRA", "dDEC"], None]
  image_data = json.load(open("all-images.json"))
  w_start = "$LARGE_FITS_DIR/wfpc2/hlsp_orion_hst_wfpc2_"
  w_end = "_f656n_v1_sci.fits"
  b_start = "$LARGE_FITS_DIR/Bally-ACS/j8oc"
  b_end = "010_wcs.fits"
  for id_, ra_w, dec_w in tab[1:]:
      print(id_, ra_w, dec_w)
      wfpc2_fields = []
      for image_file in image_data[id_]:
          if image_file.startswith(w_start) and image_file.endswith(w_end): 
              wfpc2_fields.append(image_file.replace(w_start, '').replace(w_end, ''))
          if image_file.startswith(b_start) and image_file.endswith(b_end): 
              bally_field = image_file.replace(b_start, '').replace(b_end, '')

      m = arcs_tab['Object'] == id_
      ra, = arcs_tab['RA'][m]
      dec, = arcs_tab['Dec'][m]
      cw = coord.ICRS(ra=ra_w, dec=dec_w, unit=(u.hour, u.deg))
      c = coord.ICRS(ra=ra, dec=dec, unit=(u.hour, u.deg))
      sep = cw.separation(c)
      dRA = (c.ra - cw.ra) * np.cos(c.dec.radian)
      dDEC = (c.dec - cw.dec)
      out_tab.append([id_, bally_field, wfpc2_fields, ra_w, dec_w, ra, dec] + ["{:.2f}".format(x.arcsec) for x in (sep, dRA, dDEC)])

      for field in wfpc2_fields:
          shiftfile = "j8oc{}010_wcs/{}-Robberto_WFPC2_{}_f656n-shifts.json".format(bally_field, id_, field)
          with open(shiftfile, "w") as f:
              json.dump({"dRA": float(dRA.arcsec), "dDEC": float(dDEC.arcsec)}, f)



#+END_SRC

#+RESULTS:
|   source | Bally | WFPC2   |        RA_w |       DEC_w |            RA |            DEC |  sep |   dRA |  dDEC |
|----------+-------+---------+-------------+-------------+---------------+----------------+------+-------+-------|
|      LL4 |    24 | (03)    | 5:34:42.728 | -5:28:37.41 |   5:34:42.719 |    -5:28:37.20 | 0.25 | -0.13 |  0.21 |
| 4468-605 |    17 | (03 28) | 5:34:46.783 | -5:26:04.92 | 5:34:46.75775 | -5:26:04.81750 | 0.39 | -0.38 |  0.10 |
| 4578-251 |    09 | (36)    | 5:34:57.771 | -5:22:51.08 | 5:34:57.79275 | -5:22:51.09500 | 0.33 |  0.32 | -0.02 |
|  022-635 |    16 | (26)    | 5:35:02.179 | -5:26:35.31 |   5:35:02.200 |    -5:26:35.33 | 0.31 |  0.31 | -0.02 |
| w069-601 |    01 | (25)    | 5:35:06.896 | -5:26:00.53 | 5:35:06.90775 | -5:26:00.57750 | 0.18 |  0.18 | -0.05 |
|  102-157 |    01 | (37)    | 5:35:10.259 | -5:21:57.22 | 5:35:10.25075 | -5:21:57.11750 | 0.16 | -0.12 |  0.10 |
|  106-245 |    01 | (38)    | 5:35:10.564 | -5:22:44.75 |   5:35:10.576 |    -5:22:44.69 | 0.19 |  0.18 |  0.06 |
|  109-246 |    01 | (38)    | 5:35:10.889 | -5:22:46.43 | 5:35:10.89575 | -5:22:46.31750 | 0.15 |  0.10 |  0.11 |
| 119-3155 |    14 | (17)    | 5:35:11.476 | -5:31:52.03 |   5:35:11.926 |    -5:31:53.30 | 6.84 |  6.72 | -1.27 |
|  132-053 |    02 | (46)    | 5:35:13.208 | -5:20:52.83 |   5:35:13.202 |    -5:20:52.59 | 0.26 | -0.09 |  0.24 |
| 138-3024 |    14 | (17)    | 5:35:13.356 | -5:30:23.08 | 5:35:13.79919 | -5:30:24.40000 | 6.75 |  6.62 | -1.32 |
|  158-323 |    01 | (39 38) | 5:35:15.838 | -5:23:22.61 |   5:35:15.833 |    -5:23:22.37 | 0.25 | -0.07 |  0.24 |
|  159-221 |    02 | (38)    | 5:35:15.934 | -5:22:21.15 |   5:35:15.934 |    -5:22:21.04 | 0.11 |  0.00 |  0.11 |
|  161-324 |    01 | (39 38) | 5:35:16.059 | -5:23:24.47 | 5:35:16.05175 | -5:23:24.34750 | 0.16 | -0.11 |  0.12 |
|  166-316 |    01 | (39 38) | 5:35:16.611 | -5:23:16.27 |   5:35:16.612 |    -5:23:16.02 | 0.25 |  0.01 |  0.25 |
|  168-328 |    01 | (39)    | 5:35:16.762 | -5:23:28.09 | 5:35:16.76475 | -5:23:28.03750 | 0.07 |  0.04 |  0.05 |
|  205-230 |    06 | (39)    | 5:35:20.417 | -5:23:29.79 | 5:35:20.40175 | -5:23:30.00750 | 0.31 | -0.23 | -0.22 |
|  206-043 |    02 | (48 47) | 5:35:20.585 | -5:20:43.34 |   5:35:20.561 |    -5:20:43.11 | 0.43 | -0.36 |  0.23 |
|  212-400 |    06 | (39)    | 5:35:21.194 | -5:24:00.24 |   5:35:21.181 |    -5:24:00.46 | 0.29 | -0.19 | -0.22 |
| w266-558 |    06 | (23)    | 5:35:26.628 | -5:25:57.93 |   5:35:26.618 |    -5:25:58.29 | 0.39 | -0.15 | -0.36 |
|  305-811 |    07 | (0a)    | 5:35:30.453 | -5:28:11.38 | 5:35:30.43675 | -5:28:11.23750 | 0.28 | -0.24 |  0.14 |
|      LL5 |    07 | (0a)    | 5:35:31.410 | -5:28:16.54 | 5:35:31.39775 | -5:28:16.35750 | 0.26 | -0.18 |  0.18 |
| 362-3137 |    08 | (1b)    | 5:35:36.051 | -5:31:37.47 | 5:35:36.34775 | -5:31:37.75250 | 4.44 |  4.43 | -0.28 |

  

*** Repeat for the older wfpc2 mosaic

#+name: mosaic-corrections
|       id |        RA_W |       DEC_W |
| w000-400 | 5:34:59.508 | -5:24:00.47 |
| w005-514 | 5:35:00.425 | -5:25:14.54 |
| w012-407 | 5:35:01.132 | -5:24:06.94 |
| w014-414 | 5:35:01.333 | -5:24:13.67 |
| w044-527 | 5:35:04.391 | -5:25:27.65 |
|  049-143 | 5:35:04.900 | -5:21:42.90 |
|      LL1 | 5:35:05.599 | -5:25:19.73 |
|  065-502 | 5:35:06.507 | -5:25:01.78 |
| w069-601 | 5:35:06.869 | -5:26:00.96 |
|  072-134 | 5:35:07.175 | -5:21:34.24 |
| w073-227 | 5:35:07.233 | -5:22:26.45 |
|  074-229 | 5:35:07.351 | -5:22:28.92 |
|  083-435 | 5:35:08.265 | -5:24:35.03 |
|  101-233 | 5:35:10.096 | -5:22:32.64 |
|  102-157 | 5:35:10.213 | -5:21:57.04 |
|  106-245 | 5:35:10.549 | -5:22:44.58 |
|  109-246 | 5:35:10.878 | -5:22:46.29 |
|  117-421 | 5:35:11.631 | -5:24:21.60 |
|  121-434 | 5:35:12.101 | -5:24:33.94 |
|  131-046 | 5:35:13.031 | -5:20:45.74 |
|  142-301 | 5:35:14.143 | -5:23:01.09 |
|  154-225 | 5:35:15.351 | -5:22:25.26 |
|  154-240 | 5:35:15.371 | -5:22:39.91 |
|  158-323 | 5:35:15.822 | -5:23:22.54 |
|  159-221 | 5:35:15.920 | -5:22:20.97 |
|  163-222 | 5:35:16.290 | -5:22:21.50 |
|  166-316 | 5:35:16.607 | -5:23:16.12 |
|  168-326 | 5:35:16.823 | -5:23:26.01 |
|  169-338 | 5:35:16.878 | -5:23:38.15 |
|  205-230 | 5:35:20.414 | -5:23:29.64 |
|  206-043 | 5:35:20.534 | -5:20:42.76 |
|  212-400 | 5:35:21.193 | -5:24:00.21 |
| w266-558 | 5:35:26.638 | -5:25:58.52 |
 

#+name: find-mosaic-offsets
#+BEGIN_SRC python :var tab=mosaic-corrections :return out_tab
  import astropy.coordinates as coord
  import astropy.units as u
  from astropy.table import Table
  import numpy as np
  import json

  arcs_tab = Table.read("luis-programas/arcs-summary.tab", format="ascii")
  out_tab = [["source", "Bally", "WFPC2", "RA_w", "DEC_w", "RA", "DEC", "sep", "dRA", "dDEC"], None]
  image_data = json.load(open("all-images.json"))
  b_start = "$LARGE_FITS_DIR/Bally-ACS/j8oc"
  b_end = "010_wcs.fits"
  for id_, ra_w, dec_w in tab[1:]:
      # if not id_ in image_data:
      #     print('Source not found in all-images.json', id_)
      #     continue
      print(id_, ra_w, dec_w)
      if id_ in image_data:
          for image_file in image_data[id_]:
              if "mosaicf656" in image_file: 
                  wfpc2_field = 'yes'
              if image_file.startswith(b_start) and image_file.endswith(b_end): 
                  bally_field = image_file.replace(b_start, '').replace(b_end, '')
      else:
          wfpc2_field = 'maybe'
          bally_field = '01' # assume it is where the majority of sources are

      m = arcs_tab['Object'] == id_
      ra = arcs_tab['RA'][m][0]
      dec = arcs_tab['Dec'][m][0]

      cw = coord.ICRS(ra=ra_w, dec=dec_w, unit=(u.hour, u.deg))
      c = coord.ICRS(ra=ra, dec=dec, unit=(u.hour, u.deg))
      sep = cw.separation(c)
      dRA = (c.ra - cw.ra) * np.cos(c.dec.radian)
      dDEC = (c.dec - cw.dec)
      out_tab.append([id_, bally_field, wfpc2_field, ra_w, dec_w, ra, dec] + ["{:.2f}".format(x.arcsec) for x in (sep, dRA, dDEC)])

      for filt in ("f656", "f658"):
          shiftfile = "j8oc{}010_wcs/{}-WFC_mosaic_{}-shifts.json".format(bally_field, id_, filt)
          with open(shiftfile, "w") as f:
              json.dump({"dRA": float(dRA.arcsec), "dDEC": float(dDEC.arcsec)}, f)



#+END_SRC

#+RESULTS: find-mosaic-offsets
|   source | Bally | WFPC2 |        RA_w |       DEC_w |            RA |            DEC |  sep |   dRA |  dDEC |
|----------+-------+-------+-------------+-------------+---------------+----------------+------+-------+-------|
| w000-400 |    09 | yes   | 5:34:59.508 | -5:24:00.47 | 5:34:59.56575 | -5:24:00.14500 | 0.92 |  0.86 |  0.33 |
| w005-514 |    01 | yes   | 5:35:00.425 | -5:25:14.54 | 5:35:00.46775 | -5:25:14.29750 | 0.68 |  0.64 |  0.24 |
| w012-407 |    01 | yes   | 5:35:01.132 | -5:24:06.94 | 5:35:01.17375 | -5:24:06.67750 | 0.68 |  0.62 |  0.26 |
| w014-414 |    01 | yes   | 5:35:01.333 | -5:24:13.67 | 5:35:01.37175 | -5:24:13.36750 | 0.65 |  0.58 |  0.30 |
| w044-527 |    01 | yes   | 5:35:04.391 | -5:25:27.65 |   5:35:04.427 |    -5:25:27.39 | 0.60 |  0.54 |  0.26 |
|  049-143 |    09 | yes   | 5:35:04.900 | -5:21:42.90 |   5:35:04.945 |    -5:21:42.92 | 0.67 |  0.67 | -0.02 |
|      LL1 |    01 | yes   | 5:35:05.599 | -5:25:19.73 | 5:35:05.63675 | -5:25:19.44750 | 0.63 |  0.56 |  0.28 |
|  065-502 |    01 | yes   | 5:35:06.507 | -5:25:01.78 | 5:35:06.53975 | -5:25:01.50750 | 0.56 |  0.49 |  0.27 |
| w069-601 |    01 | yes   | 5:35:06.869 | -5:26:00.96 | 5:35:06.90775 | -5:26:00.57750 | 0.69 |  0.58 |  0.38 |
|  072-134 |    09 | yes   | 5:35:07.175 | -5:21:34.24 | 5:35:07.20375 | -5:21:34.29500 | 0.43 |  0.43 | -0.06 |
| w073-227 |    01 | yes   | 5:35:07.233 | -5:22:26.45 | 5:35:07.26975 | -5:22:26.49750 | 0.55 |  0.55 | -0.05 |
|  074-229 |    01 | maybe | 5:35:07.351 | -5:22:28.92 |   5:35:07.384 |    -5:22:28.92 | 0.49 |  0.49 |  0.00 |
|  083-435 |    01 | yes   | 5:35:08.265 | -5:24:35.03 | 5:35:08.29275 | -5:24:34.85750 | 0.45 |  0.41 |  0.17 |
|  101-233 |    01 | yes   | 5:35:10.096 | -5:22:32.64 |   5:35:10.133 |    -5:22:32.60 | 0.55 |  0.55 |  0.04 |
|  102-157 |    01 | yes   | 5:35:10.213 | -5:21:57.04 | 5:35:10.25075 | -5:21:57.11750 | 0.57 |  0.56 | -0.08 |
|  106-245 |    01 | yes   | 5:35:10.549 | -5:22:44.58 |   5:35:10.576 |    -5:22:44.69 | 0.42 |  0.40 | -0.11 |
|  109-246 |    01 | yes   | 5:35:10.878 | -5:22:46.29 | 5:35:10.89575 | -5:22:46.31750 | 0.27 |  0.27 | -0.03 |
|  117-421 |    01 | yes   | 5:35:11.631 | -5:24:21.60 |   5:35:11.650 |    -5:24:21.41 | 0.34 |  0.28 |  0.19 |
|  121-434 |    01 | yes   | 5:35:12.101 | -5:24:33.94 | 5:35:12.12175 | -5:24:33.75750 | 0.36 |  0.31 |  0.18 |
|  131-046 |    02 | yes   | 5:35:13.031 | -5:20:45.74 | 5:35:13.05537 | -5:20:45.78625 | 0.37 |  0.36 | -0.05 |
|  142-301 |    01 | yes   | 5:35:14.143 | -5:23:01.09 |   5:35:14.158 |    -5:23:01.00 | 0.24 |  0.22 |  0.09 |
|  154-225 |    01 | yes   | 5:35:15.351 | -5:22:25.26 |   5:35:15.367 |    -5:22:25.31 | 0.24 |  0.24 | -0.05 |
|  154-240 |    01 | yes   | 5:35:15.371 | -5:22:39.91 |   5:35:15.383 |    -5:22:39.79 | 0.22 |  0.18 |  0.12 |
|  158-323 |    01 | yes   | 5:35:15.822 | -5:23:22.54 |   5:35:15.833 |    -5:23:22.37 | 0.24 |  0.16 |  0.17 |
|  159-221 |    02 | yes   | 5:35:15.920 | -5:22:20.97 |   5:35:15.934 |    -5:22:21.04 | 0.22 |  0.21 | -0.07 |
|  163-222 |    02 | yes   | 5:35:16.290 | -5:22:21.50 |   5:35:16.303 |    -5:22:21.47 | 0.20 |  0.19 |  0.03 |
|  166-316 |    01 | yes   | 5:35:16.607 | -5:23:16.12 |   5:35:16.612 |    -5:23:16.02 | 0.12 |  0.07 |  0.10 |
|  168-326 |    01 | yes   | 5:35:16.823 | -5:23:26.01 |   5:35:16.839 |    -5:23:26.32 | 0.39 |  0.24 | -0.31 |
|  169-338 |    01 | yes   | 5:35:16.878 | -5:23:38.15 |   5:35:16.882 |    -5:23:38.02 | 0.14 |  0.06 |  0.13 |
|  205-230 |    06 | yes   | 5:35:20.414 | -5:23:29.64 | 5:35:20.40175 | -5:23:30.00750 | 0.41 | -0.18 | -0.37 |
|  206-043 |    02 | yes   | 5:35:20.534 | -5:20:42.76 |   5:35:20.561 |    -5:20:43.11 | 0.53 |  0.40 | -0.35 |
|  212-400 |    06 | yes   | 5:35:21.193 | -5:24:00.21 |   5:35:21.181 |    -5:24:00.46 | 0.31 | -0.18 | -0.25 |
| w266-558 |    06 | yes   | 5:35:26.638 | -5:25:58.52 |   5:35:26.618 |    -5:25:58.29 | 0.38 | -0.30 |  0.23 |



* Objetos LL
:LOGBOOK:
- Note taken on [2013-08-17 Sat 18:48] \\
  Moved material to here from [[file:jorge-project.org][file:~/Dropbox/jorgebowshocks/jorge-project.org]]
:END:

** Encontrar lista completa de todos los objetos
+ Hay varios artículos de Bally que listan estos objetos.  Sin embargo, no hay ninguna lista completa de todos publicado.  

+ Algunos están en BOM2000 - ver figura 2. Son los objetos con designación que empieza con "w". Por ejemplo, w069-600
+ Algunos otros están en BR2001 - ver figura 1.  Se llaman LL3, LL4, etc
+ Algunos otros están en BLSW2006 - ver Tabla 2.  Los que se llaman LL4, LL5, etc son iguales a en BR2001, pero hay otros que se llaman algo como "LL 344-3020" y creo que son nuevos.
*** DONE Get the GO-9825 data 
CLOSED: [2013-08-27 Tue 09:33]
+ GO 9825 (Cycle 12)  is a Bally program that covers much of Orion with ACS in just f658n
  + It is not quite as wide a field as the Robberto program, but almost
+ There is also GO 9460 (Cycle 11) which uses both f658n and f660n, and also f502n and f550m
  + The latter is useful since it passes only [N II]
  + However, this is only 4 pointings:
    1. HH 502 - this may cover some LL objects
    2. HH 505 - LL 2
    3. M43-West
    4. OMC-2
*** Other new detections
:LOGBOOK:
CLOCK: [2013-09-03 Tue 10:04]--[2013-09-03 Tue 13:45] =>  3:41
:END:
+ [X] 362-3137
  + in Bally field, just below the LL6 group
  + weak but totally believable
    + background 0.8
    + excess 0.05
  + not listed as a proplyd in Ricci
  + But in Da Rio 2009 as star
  + And #921 in Hillenbrand 1997
+ [X] 119-3155
  + In Bally field 14 and Robberto field 7L
  + To the south of 136-3057 in a region with many bowshocks and jets
  + 5:35:11.876 -5:31:55.40
  + Has a faint arc to the N and another one to the E, but the E one may be unrelated
+ [X] 203-3039 or MY Ori
  + 5:35:20.297 -5:30:39.37
  + In Bally field 14 and Robberto field 2L
  + Faint arc to N and jet pointing to E
  + The jet and bowshocks are described in Bally (2006) Fig 14 but they didn't seem to notice the stellar bowshock
+ [X] 109-246
  + Near to HH 202
  + Disk detected in [O III] absorption by BOM2000 (they give 109-247)
  + Has wonderful open outer bow shock
  + Complicated inner shock
  + Probable jet going to SSW
  + Star seems off-center wrt proplyd
+ [X] 106-245
  + Much smaller arc just behind 109-246
  + Both are immeresd in a shock that goes the other way
+ [X] 138-3024
  + 5:35:13.801 -5:30:24.34
  + This is a star in the wispy gray filaments to the S of LP Ori reflection nebula
  + The arc is  seen in blue continuum where it is just a hole really
  + But it is also seen in Ha, and looks more like a shell
+ [ ] There are many other stars like 138-3024 in the same zone that seem to have slightly dark regions around them
  + Each one is probably not significant, but maybe between them they could add up to something
+ [ ] LP Ori
+ [X] 065-502
  + 5:35:06.534 -5:25:01.53
  + Not listed as proplyd but clearly is one
  + Very weak but quite clear bowshock
  + In front of LL1
+ [X] 083-435
  + 5:35:08.289 -5:24:34.84
  + Another not listed as proplyd but maybe one
  + Similar to  065-502 but far far weaker - may not be real
  + Between  LL1 and giant shadow disk

    
*** TODO Looking for new proplyd bowshocks in the Ricci 2008 data
:LOGBOOK:
CLOCK: [2013-08-27 Tue 09:34]--[2013-08-27 Tue 10:04] =>  0:30
:END:
**** [3/16] Fields checked
1. [X] [2013-10-25 Fri]
2. [X] [2013-10-26 Sat]
3. [ ] 
4. [ ] 
5. [ ] 
6. [X] [2013-10-25 Fri]
7. [ ] 
8. [ ] 
9. [ ] 
10. [ ] 
11. [ ] 
12. [ ] 
13. [ ] 
14. [ ] 
15. [ ] 
16. [ ] 

**** Not yet in our list - only candidates so far
+ [X] 038-627 - goes outside the Ricci box
  + 5:35:04.19 -5:26:27.89
  + Turns out that we already had it as 042-628!
  + [X] need to check it is real - yes it is!
    + another one of the LL1 family
    + bright in continuum
+ [X] 074-229 - small faint arc
  + [2013-11-12 Tue] Spotted while looking at the image of 073-227
  + Not listed as a proplyd, but in Da Rio catalog
  + 5:35:07.381 -5:22:28.92 
+ [X] 066-3251 - shell weak in Ha but strong in continuum
  + [X] why is that? might be a globule rather than a shell
  + 5:35:06.57 -5:32:51.49
+ 109-246 - this has a spectacular-looking bow, but it is superimposed on the complicated shocks to the NW of HH 202
  + I am pretty sure it is real, but it will be hard to measure anything
+ [X] 117-421 - small proplyd near the giant silhouette disk
  + 5:35:11.65 -5:24:21.50
  + it looks like it has a small cavity around the star - best seen in color images - also hint of an outer shock
+ [X] 121-434 - also near the giant silhouette disk
  + 5:35:12.12 -5:24:33.80
  + [X] seems to have a shell - but quite faint
+ [X] 131-046 - Northern proplyd
  + 05:35:13.05 -05:20:45.79
  + Bally field 02
  + very fat shell,
+ [X] 132-053
  + 5:35:13.204 -5:20:52.61
  + Bally field 02
  + not classified as proplyd, but might be one
  + very small and faint shell
+ [X] 142-301 - dusty, flat-headed proplyd - weak shell
  + 05:35:14.15  -05:23:00.91
+ [X] 154-240 - bright Northern proplyd - well-defined inner edge, but hard to see if there is an outer edge to the shell
  + 05:35:15.38 -05:22:39.85
  + May be interacting with the large-scale wind-blown shell of the nebula
+ [X] 163-222 - Northern proplyd with nice internal disk
  + 05:35:16.30 -05:22:21.50
  + very weak shell, but well defined inner and outer edges
+ [X] 154-225 - Northern proplyd
  + 05:35:15.37 -05:22:25.35
  + very weak and lumpy shell
+ [X] 159- 221 - Northern proplyd
  + 05:35:15.93 -05:22:21.05
  + very weak shell without clear outer boundary
+ [X] 161-324 - LV4
  + 05:35:16.05 -05:23:24.35
+ [X] 158-323 - LV5
  + 05:35:15.83 -05:23:22.59
+ [X] 159-326
  + 05:35:15.81 -05:23:25.51
  + There is a faint arc a long way in front of it, almost touching the tail of LV4
  + Only seen on the SE flank, not at all on the N flank
  + It it related?  We should check for proper motions
+ [X] 163-317 - LV3
  + 05:35:16.27 -05:23:16.51
+ [X] 166-316
  + 05:35:16.61 -05:23:16.19
  + small proplyd next to LV2
+ [X] 167-317 - LV2
  + 05:35:16.74 -05:23:16.51
+ [X] 168-326 - LV1
  + 05:35:16.83 -05:23:25.91
  + shock with stellar wind
  + note that eastern end has high proper motion and may be unrelated
+ [X] 168-326a and 168-326b - LV1ab
  + 05:35:16.83 -05:23:25.91
  + interproplyd shock
+ [X] 168-328
  + 05:35:16.77 -05:23:28.06
  + small proplyd next to LV1
+ [X] 169-338 - very small faint proplyd next to 170-331, with faint but well-defined shell
  + 05:35:16.88 -05:23:38.10
+ [X] 165-235 - Northern proplyd
  + 05:35:16.48 -05:22:35.16
  + well-defined arc, but may be affected by confusion with other shells nearby
  + check proper motions
+ [X] 170-249 - another bright Northern proplyd - well-defined inner and outer borders but rather faint
  + 05:35:16.96 -05:22:48.51
+ [X] 173-236 - Northern proplyd with clearish shell, somewhat pinched
  + 05:35:17.34 -05:22:35.81
+ [X] 175-321 (5:35:17.458 -5:23:20.96) - not necessarily a proplyd, but seems to show a shock oriented towards th1D, which it is very close to
+ [X] 177-341W - HST1
  + 05:35:17.66 -05:23:41.00
+ [X] 173-342 - interproplyd shock with HST1?
  + 5:35:17.277 -5:23:41.97
+ Does not point at th1C
+ [X] 178-258 - big floppy proplyd with a nice shock in front of it
  + 05:35:17.84 -05:22:58.15
+ [X] 180-331 - proplyd
  + 05:35:18.03 -05:23:30.80
+ [X] 189-329 - very faint proplyd with diffuse faint shell, just to East of fast-moving shock behind 180-331
+ [X] 205-230 - another interproplyd shock from a visual binary
  + 05:35:20.45 -05:23:29.96
  + very similar to LV1
+ [X] 206-043 - not obviously a proplyd
  + 5:35:20.562 -5:20:43.06
  + Bally field 02
  + Very faint, but quite narrow arc
+ [X] 212-400 - SE proplyd
  + 05:35:21.19 -05:24:00.20
  + very weak shell
  + may not be real
**** More new bowshocks: October 2014
+ [X] 124-131 - NW circumbinary proplyd
  + 5:35:12.382 -5:21:31.40
  + Very weak stationary bowshock
    + The whole thing is visible in [O III]
      - wfpc2 f502n
      - acs f555w
    + It has a double structure perhaps
    + Only the E side is visible in Ha, and very faint
  + This is subject of [[http://adsabs.harvard.edu/abs/2008ApJ...687L..83R][Robberto et al (2008)]]
    + They claim it is a circumbinary disk
      + Which it may or may not be
    + But it certainly has the i-front outside the binary
  + First catalogued by [[http://adsabs.harvard.edu/abs/1996AJ....111..846O][O'Dell & Wong (1996)]] but they called it 124-132 and classified it as "irregular"
  + Was also reported by [[http://adsabs.harvard.edu/abs/2005AJ....129..382S][Smith (2005b)]]
    + Noted the possibility of a jet knot to the W, just outside the i-front, and jet base or reflect neb
  + [X] We see it definitely has a bipolar jet - I can see proper motions in knots to the W and E
    + 

**** Already in our list
+ 4468-605 - very weak
+ 4596-400 - aka 000-400 - two shell structure
+ 4582-635
+ 005-514
+ 044-527
+ 049-143
+ 069-601
+ 072-135 - aka 072-134
+ 073-227
+ 102-233 - aka 101-233

  
**** Rejected objects
Ones that might be salvageable are marked with checkboxes
+ 017-636 - HH 878 jet
  + 5:35:01.664 -5:26:36.16
  + See Bally 2006 Fig 15
  + This is an important object because it is a bare bent jet, like the southern jet in LL2, but /without/ a stellar bowshock
+ [X] 061-401 - possibly a bowshock - *but almost certainly not*
  + 5:35:06.09 -5:24:00.60
  + Colour image in Evernote
  + Bally field 01 and WFC3 field
  + Certainly has a jet - not spotted by Ricci 2008, nor Bally 2006
+ 099-339 - slight evidence for a large bow but it is very diffuse and is superimposed on HH269
  + so probably not real
+ 057-419 - very thin and close-in filament
  + 5:35:05.73 -5:24:18.5
  + [X] what is it? 
    + Not sure, but the filament is only clearly visible in the broad-band filters - may be a jet
    + I am pretty certain it is not a bowshock
+ 106-417 - this has a bow nearby, but it is pointing the wrong way and looks to be high Mach number
  + seems to be caused by an unrelated jet coming from the east
  + this must be catalogued somewhere
+ 109-327 - the Narwhal proplyd
  + this has a jet coming out of its nose
  + and it is just to the west of the Trilobyte thingy
+ 131-046 - up near the Orion fingers zone
  + has a broad shell in front of it, but it looks too big to be associated
+ 132-053 - previously classified as a faint arc in H alpha.  However, there are many extinction filaments that cross this object and it looks like the arc is just an illusion caused by two intersecting dark filaments in front of the star

+ 132-042 - this is an amazing object, looking like a proplyd that is pointing the wrong way
  + [X] It has a jet that goes straight back into the heart of the nebula
    + I think I can see some knots to the south
    + [2020-07-05 Sun] Seems to be related to BN/KL bullets
+ 159-729 or thereabouts
  + [ ] might be a very flat LL-type arc, but without an inner edge
  + more likely just a chance superposition of something else
+ 205-421
  + [ ] has a complex, clumpy shell structure all around it, but it looks too thin to be a stand-off bowshock - perhaps it has a bipolar jet
+ 

  
*** Tabla de objetos LL
:PROPERTIES:
:ID:       B35A749C-92D8-4A89-8821-A6A03CE75A4D
:END:
Este viene de [[id:AA16BA5A-46A2-4D21-A453-972F273FB962][llobjects.org]] 

#+name: orion-ll-objects
| Bally name |      OW name | Star     |           RA |          Dec | Ref          | Bally field | Notes                  | Arc | Top40 |
|------------+--------------+----------+--------------+--------------+--------------+-------------+------------------------+-----+-------|
|            |     4285-458 |          | 05:34:28.519 |  -5:24:57.84 | WJH          |           - |                        | .   |       |
| LL2        |     4409-242 | IX Ori   |  05:34:40.86 |   -5:22:42.2 | BR01         |          18 |                        | x   |     1 |
| LL3        |     4408-639 |          | 05:34:40.807 |   -5:26:38.6 | BR01         |          17 |                        | x   |     1 |
| LL4        |  LL 4427-838 |          | 05:34:42.724 |  -5:28:37.38 | BR01         |          24 |                        | x   |     1 |
|            | LLP 4468-605 |          | 05:34:46.765 |  -5:26:04.74 | BLSW06       |          17 | proplyd - axial jet    | x   |     1 |
|            |  LL 4578-251 |          |  05:34:57.79 |   -5:22:51.1 | WJH          |          09 |                        | x   |     1 |
|            | LLP 4582-635 |          |  05:34:58.17 |   -5:26:35.1 | WJH          |          16 | proplyd - very faint   | x   |     0 |
|            |     w000-400 |          |  05:34:59.57 |   -5:24:00.4 | BOM00        |          09 | proplyd 4596-400       | x   |     1 |
|            |     w005-514 |          | 05:35:00.463 |  -5:25:14.22 | BOM00        |      01, 16 | proplyd                | xx  |     1 |
|            |     w012-407 |          | 05:35:01.175 |  -5:24:06.68 | BOM00        |          01 |                        | x   |     1 |
|            |     w014-414 |          | 05:35:01.373 |  -5:24:13.42 | BOM00        |          01 | proplyd?               | x   |     1 |
|            |   LL 022-635 |          |  05:35:02.20 |   -5:26:35.3 | WJH          |          16 |                        | x   |     1 |
|            |     w030-524 |          | 05:35:03.001 |  -5:25:24.35 | BOM00        |          01 | proplyd?               | x   |     1 |
|            |   LL 041-637 |          |  05:35:04.05 |   -5:26:37.3 | WJH          |          16 |                        | x?  |     0 |
|            |  LLP 042-628 |          |  05:35:04.19 |   -5:26:27.7 | WJH          |          16 | proplyd 038-627        | x   |     1 |
|            |     w044-527 |          | 05:35:04.422 |  -5:25:27.39 | BOM00        |          01 | proplyd                | x   |     1 |
|            |  LLP 049-143 |          |  05:35:04.95 |   -5:21:42.9 | WJH          |          09 | proplyd                | x   |     1 |
|            |  LLP 051-024 |          |  05:35:05.13 |   -5:20:24.3 | WJH          |          09 | proplyd                | x   |     1 |
| LL1        |     w056-519 | LL Ori   |  05:35:05.64 |   -5:25:19.4 | BR01, BOM00  |          01 |                        | x   |     1 |
|            |      065-502 |          | 05:35:06.534 |  -5:25:01.53 | WJH          |          01 | proplyd?               | x   |     0 |
|            |      066-652 |          |  5:35:06.590 |  -5:26:51.98 | WJH (R07)    |          06 | interproplyd 066-652N  | B   |       |
|            |     066-3251 |          |  05:35:06.57 |  -5:32:51.49 | WJH (R08)    |          14 | proplyd?, globule?     | x   |     0 |
|            |     w069-601 |          |  05:35:06.91 |   -5:26:00.6 | BOM00        |          01 | proplyd?               | x   |     1 |
|            |  LLP 072-134 |          |  05:35:07.20 |   -5:21:34.3 | WJH          |          09 | proplyd - thin shell   | x   |     1 |
|            |     w073-227 |          |  05:35:07.27 |   -5:22:26.6 | BOM00        |          01 | proplyd                | x   |     1 |
|            |      074-229 |          | 05:35:07.381 |  -5:22:28.92 | WJH          |          01 | very faint             |     |     0 |
|            |      083-435 |          | 05:35:08.289 |  -5:24:34.84 | WJH          |          01 | proplyd?, very faint   | x   |     0 |
|            |  LLP 101-233 |          |  05:35:10.14 |   -5:22:32.6 | WJH          |          01 | proplyd                | x   |     1 |
|            |   LL 102-157 |          | 05:35:10.252 |  -5:21:57.06 | WJH          |          01 | very faint, proplyd?   | x   |     1 |
|            |      106-245 |          | 05:35:10.577 |  -5:22:44.69 | WJH          |          01 | proplyd?               | x   |     0 |
|            |      109-246 |          |  05:35:10.90 |  -5:22:46.36 | BOM00        |          01 | proplyd 109-247, jet?  | x   |     1 |
|            | LLP 116-3101 | V488 Ori | 05:35:11.653 |  -5:31:01.04 | BLSW06       |          14 | proplyd                | x   |     1 |
|            |      117-421 |          |  05:35:11.65 |  -5:24:21.50 | WJH (OW96)   |          01 | proplyd, large bow     | x   |     0 |
|            |     119-3155 |          | 05:35:11.876 |  -5:31:55.40 | WJH          |          14 |                        | x   |     1 |
|            |      121-434 |          |  05:35:12.12 |  -5:24:33.80 | WJH (R08)    |          01 | proplyd                | x   |     0 |
|            |      124-131 |          | 05:35:12.383 |  -5:21:31.41 | WJH (R08)    |          01 | circumbinary proplyd   |     |       |
|            |      131-046 |          |  05:35:13.05 |  -5:20:45.79 |              |          02 | proplyd                |     |     0 |
|            |      132-053 |          | 05:35:13.204 |  -5:20:52.61 |              |          02 | proplyd?               |     |     0 |
|            |  LL 136-3057 |          |  05:35:13.60 |   -5:30:57.4 | WJH          |          14 | faint XX               | x   |     1 |
|            |   B 138-3024 |          | 05:35:13.801 |  -5:30:24.34 | WJH          |          14 | B-band hole            | x   |     0 |
|            |      142-301 |          |  05:35:14.15 | -05:23:00.91 |              |          01 | proplyd                |     |     0 |
|            |      154-225 |          |  05:35:15.37 | -05:22:25.35 |              |          01 | proplyd                | x   |     0 |
|            |      154-240 |          |  05:35:15.38 | -05:22:39.85 |              |          01 | proplyd, inner only    | x   |     1 |
| LV5        |      158-323 |          |  05:35:15.83 | -05:23:22.59 |              |          01 | proplyd, Jorge         |     |     1 |
|            |      159-221 |          |  05:35:15.93 | -05:22:21.05 |              |          01 | proplyd, inner only    | x   |     0 |
| HST3b      |      160-350 |          | 05:35:15.958 | -05:23:49.68 |              |          01 | interproplyd 159-350   | B   |       |
| LV4        |      161-324 |          |  05:35:16.06 | -05:23:24.29 |              |          01 | proplyd, Jorge         | x   |     0 |
|            |      162-456 |          | 05:35:16.182 | -05:24:56.39 | R07          |          06 | interproplyd 162-456NE | B   |       |
|            |      163-222 |          |  05:35:16.30 | -05:22:21.50 |              |          01 | proplyd                | x   |     1 |
| LV3        |      163-317 |          |  05:35:16.28 | -05:23:16.59 |              |          01 | proplyd, Jorge         |     |     0 |
|            |      165-235 |          |  05:35:16.48 | -05:22:35.16 |              |          01 | proplyd                |     |     0 |
| LV2b       |      166-316 |          |  05:35:16.61 | -05:23:16.19 |              |          01 | proplyd, Jorge         |     |     1 |
| LV2        |      167-317 |          |  05:35:16.74 | -05:23:16.51 |              |          01 | proplyd, Jorge         |     |     0 |
| LV1        |      168-326 |          | 05:35:16.839 | -05:23:26.16 |              |          01 | proplyd, Jorge         |     |     0 |
|            |     168-326N |          |  05:35:16.83 | -05:23:25.92 |              |          01 | interproplyd 168-326   |     |     0 |
|            |      168-328 |          |  05:35:16.77 | -05:23:28.06 |              |          01 | proplyd, Jorge         |     |     1 |
|            |      169-338 |          |  05:35:16.88 | -05:23:38.10 |              |          01 | proplyd, Jorge         |     |     0 |
|            |      170-249 |          |  05:35:16.96 | -05:22:48.51 |              |          01 | proplyd                |     |     0 |
|            |      173-236 |          | 05:35:17.344 | -05:22:35.65 |              |          01 | proplyd                |     |     0 |
|            |      175-321 |          | 05:35:17.458 |  -5:23:20.96 | WJH          |          01 | near th1D              | x   |     0 |
| HST1       |      177-341 |          |  05:35:17.66 | -05:23:41.00 |              |          01 | proplyd, Jorge         |     |     1 |
|            |      173-342 |          | 05:35:17.321 |  -5:23:41.33 |              |          01 | interproplyd 177-341   | B   |     0 |
|            |      178-258 |          | 05:35:17.834 |  -5:22:58.10 | WJH (R08)    |          01 | proplyd                | x   |     1 |
|            |      180-331 |          | 05:35:18.037 | -05:23:30.63 |              |          01 | proplyd                |     |     1 |
|            |      189-329 |          |  05:35:18.87 |  -5:23:28.85 | WJH (OW96)   |          01 | proplyd                | x   |     1 |
|            |     203-3039 | MY Ori   | 05:35:20.297 |  -5:30:39.37 | WJH (BLSW06) |          14 | jet                    | x   |     1 |
|            |      204-330 |          |  5:35:20.411 |  -5:23:29.65 | WJH          |          06 | interproplyd 205-330   | B   |     0 |
|            |      206-043 |          | 05:35:20.562 |  -5:20:43.06 |              |          02 |                        |     |     0 |
|            |      212-400 |          |  05:35:21.19 | -05:24:00.20 |              |          06 | proplyd                |     |     0 |
|            |  LL 261-3018 |          | 05:35:26.171 |  -5:30:18.02 | WJH (BLSW06) |          07 |                        | x   |     0 |
|            |     w266-558 |          |  05:35:26.62 |   -5:25:58.4 | BOM00        |          06 | proplyd                | x   |     1 |
|            |   LL 305-811 |          | 05:35:30.447 |  -5:28:11.27 | BLSW06       |          07 | proplyd?               | x   |     0 |
|            |  LL 308-3036 |          |   05:35:30.8 |     -5:30:36 | BLSW06       |          08 |                        | x   |     1 |
| LL5        |  LLP 315-816 |          | 05:35:31.403 |  -5:28:16.38 | BR01         |          07 | proplyd 314-816        | x   |     1 |
| LL6        |  LL 329-3021 |          |  05:35:32.85 |   -5:30:21.6 | BR01         |          08 |                        | x   |     1 |
|            |  LL 344-3020 |          | 05:35:34.362 |  -5:30:20.43 | BLSW06       |          08 |                        | x?  |     0 |
| LL7        |  LL 351-3349 |          | 05:35:35.129 |  -5:33:49.12 | BR01         |           - | proplyd                |     |     0 |
|            |  LL 362-3137 |          |  05:35:36.35 |   -5:31:37.9 | WJH          |          08 | faint, proplyd?        |     |     1 |
|            |     4417-653 |          | 05:34:41.699 | -05:26:52.92 |              |          17 |                        | x   |       |
|            |     4491-627 |          | 05:34:49.066 |  -5:26:26.51 |              |          17 |                        | x   |       |
|            |     4550-659 |          | 05:34:55.013 |  -5:26:58.79 |              |          16 |                        | x   |       |
|            |     4531-628 |          | 05:34:53.072 |  -5:26:27.56 |              |          16 |                        | x   |       |
|            |     4520-419 |          | 05:34:52.008 |  -5:24:18.73 |              |          17 |                        | x   |       |
|            |     4505-336 |          | 05:34:50.492 |  -5:23:35.28 |              |          17 |                        | x   |       |
|            |      364-411 |          | 05:35:36.441 |  -5:34:11.08 |              |           - |                        | x   |       |
|            |      102-021 |          |  05:35:10.19 | -05:20:20.99 |              |          03 |                        | x   |       |
|            |      098-753 | LP Ori   | 5:35:09.8297 | -5:27:52.905 |              |          15 |                        | x?  |       |
|------------+--------------+----------+--------------+--------------+--------------+-------------+------------------------+-----+-------|
|            |              |          |              |              |              |             |                        |     |    40 |
#+TBLFM: @87$10=vsum(@I..@II)

 
+ "Arc" column is for noting which objects have had the arcs measured by Luis Angel
  + 005-514 has been measured twice! 
  + A "?" is for objects that still have issues
  + A "B" for interproplyd shells means that we have redone the arc fitting using the binary axis
**** New rejections
These are sources that, on reflection, we have decided should not be in the catalog
+ 159-326
  + the arc is only visible in low-ionization lines such as [N II]
  + it is completely invisible in [O III], despite this being an inner proplyd
**** Map of the LL objects
:LOGBOOK:
- Note taken on [2015-01-28 Wed 10:59] \\
  This is now obsolete.  It is replaced by [[file:programas/plot-ll-mapimage.py][file:~/Dropbox/LuisBowshocks/programas/plot-ll-mapimage.py]]
- Note taken on [2013-08-17 Sat 18:51] \\
  Copied from [[id:A0F1F456-E918-4AB5-A97D-951E4BC82952][llobjects.org]]
:END:

#+BEGIN_SRC python :results output
  import sys
  print sys.path
  
#+END_SRC

#+RESULTS:
: ['', '/Users/will/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg', '/Users/will/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/scikit_image-0.9dev-py2.7-macosx-10.6-x86_64.egg', '/Users/will/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/pyregion-1.1.1-py2.7-macosx-10.6-x86_64.egg', '/Users/will/Source/src/odelab', '/Users/will/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/adsbibdesk-3.1.1-py2.7.egg', '/Users/will/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Astropysics-0.1.dev_r1180-py2.7.egg', '/Users/will/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/astroquery-0.2.dev1248-py2.7.egg', '/Users/will/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/astropy-0.3.dev5708-py2.7-macosx-10.6-x86_64.egg', '/Users/will/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/APLpy-0.9.10.dev574-py2.7.egg', '/Users/will/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/pywcsgrid2-1.0.dev151-py2.7.egg', '/Applications/Canopy.app/appdata/canopy-1.0.0.1160.macosx-x86_64/Canopy.app/Contents/lib/python27.zip', '/Applications/Canopy.app/appdata/canopy-1.0.0.1160.macosx-x86_64/Canopy.app/Contents/lib/python2.7', '/Applications/Canopy.app/appdata/canopy-1.0.0.1160.macosx-x86_64/Canopy.app/Contents/lib/python2.7/plat-darwin', '/Applications/Canopy.app/appdata/canopy-1.0.0.1160.macosx-x86_64/Canopy.app/Contents/lib/python2.7/plat-mac', '/Applications/Canopy.app/appdata/canopy-1.0.0.1160.macosx-x86_64/Canopy.app/Contents/lib/python2.7/plat-mac/lib-scriptpackages', '/Applications/Canopy.app/appdata/canopy-1.0.0.1160.macosx-x86_64/Canopy.app/Contents/lib/python2.7/lib-tk', '/Applications/Canopy.app/appdata/canopy-1.0.0.1160.macosx-x86_64/Canopy.app/Contents/lib/python2.7/lib-old', '/Applications/Canopy.app/appdata/canopy-1.0.0.1160.macosx-x86_64/Canopy.app/Contents/lib/python2.7/lib-dynload', '/Users/will/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages', '/Users/will/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/PIL', '/Users/will/Library/Enthought/Canopy_64bit/System/lib/python2.7/site-packages', '/Users/will/Library/Enthought/Canopy_64bit/System/lib/python2.7/site-packages/PIL', '/Applications/Canopy.app/appdata/canopy-1.0.0.1160.macosx-x86_64/Canopy.app/Contents/lib/python2.7/site-packages']
: 
#+BEGIN_SRC sh
which python
#+END_SRC

#+RESULTS:
: /Users/will/Library/Enthought/Canopy_64bit/User/bin/python

#+header: :var table=orion-ll-objects :var ptable=ricci-proplyd-table
#+BEGIN_SRC python :results output
  import astropysics
  from astropysics import coords
  import numpy as np
  import matplotlib.pyplot as plt
  import json
  import os
  
  def find(name, path):
      """
      Original from http://stackoverflow.com/questions/1724693/find-a-file-in-python
      """
      for root, dirs, files in os.walk(path):
          if name in files:
              return os.path.join(root, name)
      return None
              
  
  names, RAs, Decs, Fields = list(), list(), list(), list()
  for bname, oname, sname, RA, Dec, Ref, Bally, Notes, Arc in table:
      names.append(bname or oname or sname)
      RAs.append(RA)
      Decs.append(Dec)
      Fields.append(Bally)
  
  [x0], [y0] = coords.radec_str_to_decimal(["05:35:16.463"], ["-05:23:23.18"])
  x, y = coords.radec_str_to_decimal(RAs, Decs) 
  x = -(x - x0)*3600.0
  y = (y - y0)*3600.0
  plt.plot(x, y, "o", alpha=0.2)
  for label, xx, yy, field_list in zip(names, x, y, Fields):
      plt.annotate(label, (xx, yy), alpha=0.8, size=5,
                   xytext=(-2,2), textcoords='offset points', ha='right', va='bottom',)
      #
      # Try and draw the inner and outer arcs
      #
  
      # First, work out where the JSON file is...
      try:
          field = "{:02d}".format(field_list)
      except:
          try:
              field = field_list[:2]
          except:
              print "failed"
              continue
  
      # folder = "j8oc{}010_drz".format(field)
      jsonfile = "{}-xy.json".format(label.split()[-1])
      jsoncfile = "{}-xyc.json".format(label.split()[-1])
      found = find(jsoncfile, "..")
      if found is not None:
          f = open(found)
      else:
          found = find(jsonfile, "..")
          if found is not None:
              f = open(found)
          else:
              print "Could not open ", jsonfile
              continue
      # try:
      #     f = open(jsoncfile)
      # except IOError:
      #     try: 
      #         f = open(jsonfile)
      #     except IOError:
      #         print "Could not open ", jsonfile
      #         continue
  
      # Second, load in the data and draw the arcs
      arc_data = json.load(f)
      for arc, color in ["inner", "m"], ["outer", "g"]:
          if arc in arc_data:
              dx = np.array(arc_data[arc]["x"])
              dy = np.array(arc_data[arc]["y"])
              plt.plot(xx - dx, yy + dy, "-" + color, lw=1.0, alpha=0.6)
              print "Plotted {} arc for {}".format(arc, found)
              # Now try and draw arrows for the arc axes too
              R0 = arc_data[arc]["R0"]
              PA = np.radians(arc_data[arc]["PA0"])
              ax = -R0*np.sin(PA)
              ay = R0*np.cos(PA)
              plt.arrow(xx, yy, 4*ax, 4*ay, fc='none', ec=color, 
                        width=0.0003, alpha=0.6, lw=0.5,
                        head_width=2.0, head_length=4.0,
              )
              if "Rc" in arc_data[arc]:
                  xc = arc_data[arc]["xc"]
                  yc = arc_data[arc]["yc"]
                  Rc = arc_data[arc]["Rc"]
                  PAc = np.radians(arc_data[arc]["PAc"])
                  # Plot the fitted circle if present
                  plt.plot(xx - xc, yy + yc, "+k", ms=2.0)
                  c = plt.Circle((xx - xc, yy + yc), radius=Rc, fc='none', ec="k", alpha=0.2, lw=0.2)
                  plt.gca().add_patch(c)
                  ax = -0.5*Rc*np.sin(PAc)
                  ay = 0.5*Rc*np.cos(PAc)
                  plt.arrow(xx-xc, yy+yc, 4*ax, 4*ay, fc='none', ec=color, 
                            width=0.0003, alpha=0.3, lw=0.3,
                            head_width=2.0, head_length=4.0,
                        )
  
  pColor_from_Type = {
      "i": "r", "d": "k", "rn": "c", "j": "g",
  }
  pSize_from_Type = {
      "i": 1.0, "d": 2.0, "rn": 0.7, "j": 0.7,
  }
  pRAs, pDecs, pColors, pSizes = list(), list(), list(), list()
  for name, RA, Dec, OW, Type, Note in ptable[2:]:
      pRAs.append(RA.replace(" ", ":"))
      pDecs.append(Dec.replace(" ", ":"))
      pColors.append(pColor_from_Type[Type])
      pSizes.append(pSize_from_Type[Type])
  x, y = coords.radec_str_to_decimal(pRAs, pDecs)
  pSizes = np.array(pSizes)*15.0
  x = -(x - x0)*3600.0
  y = (y - y0)*3600.0
  plt.scatter(x, y, c=pColors, s=pSizes, faceted=False, alpha=0.5, zorder=100)
  
  plt.axis("equal")
  plt.xlim(-400, 600)
  plt.ylim(-700, 200)
  plt.xlabel("RA offset, arcsec")
  plt.ylabel("Dec offset, arcsec")
  plt.title("Positions of LL objects in the Orion Nebula")
  plt.grid()
  plt.gcf().set_size_inches( (20, 20) )
  figname = "ll-positions.pdf"
  plt.savefig(figname)
  #return figname
  # return x.min(), x.max(), y.min(), y.max()
#+END_SRC

#+RESULTS:
#+begin_example
Plotted inner arc for ../LuisLL/j8oc18010_drz/LL2-xyc.json
Plotted outer arc for ../LuisLL/j8oc18010_drz/LL2-xyc.json
Plotted inner arc for ../LuisLL/j8oc17010_drz/LL3-xyc.json
Plotted outer arc for ../LuisLL/j8oc17010_drz/LL3-xyc.json
Plotted inner arc for ../LuisLL/j8oc24010_drz/LL4-xyc.json
Plotted outer arc for ../LuisLL/j8oc24010_drz/LL4-xyc.json
Plotted inner arc for ../LuisLL/j8oc17010_drz/4468-605-xyc.json
Plotted outer arc for ../LuisLL/j8oc17010_drz/4468-605-xyc.json
Plotted inner arc for ../LuisLL/j8oc09010_drz/4578-251-xyc.json
Plotted outer arc for ../LuisLL/j8oc09010_drz/4578-251-xyc.json
Plotted inner arc for ../LuisLL/j8oc16010_drz/4582-635-xyc.json
Plotted outer arc for ../LuisLL/j8oc16010_drz/4582-635-xyc.json
Plotted inner arc for ../LuisLL/j8oc09010_drz/w000-400-xyc.json
Plotted outer arc for ../LuisLL/j8oc09010_drz/w000-400-xyc.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/w005-514-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/w005-514-xyc.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/w012-407-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/w012-407-xyc.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/w014-414-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/w014-414-xyc.json
Plotted inner arc for ../LuisLL/j8oc16010_drz/022-635-xyc.json
Plotted outer arc for ../LuisLL/j8oc16010_drz/022-635-xyc.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/w030-524-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/w030-524-xyc.json
Plotted inner arc for ../LuisLL/j8oc16010_drz/041-637-xyc.json
Plotted outer arc for ../LuisLL/j8oc16010_drz/041-637-xyc.json
Plotted inner arc for ../LuisLL/j8oc16010_drz/042-628-xyc.json
Plotted outer arc for ../LuisLL/j8oc16010_drz/042-628-xyc.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/w044-527-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/w044-527-xyc.json
Plotted inner arc for ../LuisLL/j8oc09010_drz/049-143-xyc.json
Plotted outer arc for ../LuisLL/j8oc09010_drz/049-143-xyc.json
Plotted inner arc for ../LuisLL/j8oc09010_drz/051-024-xyc.json
Plotted outer arc for ../LuisLL/j8oc09010_drz/051-024-xyc.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/LL1-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/LL1-xyc.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/065-502-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/065-502-xyc.json
Plotted outer arc for ../LuisLL/j8oc14010_drz/066-3251-xy.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/w069-601-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/w069-601-xyc.json
Plotted inner arc for ../LuisLL/j8oc09010_drz/072-134-xyc.json
Plotted outer arc for ../LuisLL/j8oc09010_drz/072-134-xyc.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/w073-227-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/w073-227-xyc.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/083-435-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/083-435-xyc.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/101-233-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/101-233-xyc.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/102-157-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/102-157-xyc.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/106-245-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/106-245-xyc.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/109-246-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/109-246-xyc.json
Plotted inner arc for ../LuisLL/j8oc14010_drz/116-3101-xyc.json
Plotted outer arc for ../LuisLL/j8oc14010_drz/116-3101-xyc.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/117-421-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/117-421-xyc.json
Plotted inner arc for ../LuisLL/j8oc14010_drz/119-3155-xyc.json
Plotted outer arc for ../LuisLL/j8oc14010_drz/119-3155-xyc.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/121-434-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/121-434-xyc.json
Plotted inner arc for ../LuisLL/j8oc02010_drz/131-046-xyc.json
Plotted outer arc for ../LuisLL/j8oc02010_drz/131-046-xyc.json
Plotted inner arc for ../LuisLL/j8oc02010_drz/132-053-xyc.json
Plotted outer arc for ../LuisLL/j8oc02010_drz/132-053-xyc.json
Plotted inner arc for ../LuisLL/j8oc14010_drz/136-3057-xyc.json
Plotted outer arc for ../LuisLL/j8oc14010_drz/136-3057-xyc.json
Plotted inner arc for ../LuisLL/j8oc14010_drz/138-3024-xyc.json
Plotted outer arc for ../LuisLL/j8oc14010_drz/138-3024-xyc.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/142-301-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/142-301-xyc.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/154-225-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/154-225-xyc.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/154-240-xy.json
Plotted inner arc for ../Jorge_prop/LV5/LV5-xyc.json
Plotted outer arc for ../Jorge_prop/LV5/LV5-xyc.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/159-221-xy.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/159-326-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/159-326-xyc.json
Plotted inner arc for ../Jorge_prop/LV4/LV4-xyc.json
Plotted outer arc for ../Jorge_prop/LV4/LV4-xyc.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/163-222-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/163-222-xyc.json
Plotted inner arc for ../Jorge_prop/LV3/LV3-xyc.json
Plotted outer arc for ../Jorge_prop/LV3/LV3-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/165-235-xy.json
Plotted inner arc for ../Jorge_prop/LV2b/LV2b-xyc.json
Plotted outer arc for ../Jorge_prop/LV2b/LV2b-xyc.json
Plotted inner arc for ../Jorge_prop/LV2/LV2-xyc.json
Plotted outer arc for ../Jorge_prop/LV2/LV2-xyc.json
Could not open  LV1-xy.json
Could not open  168-326N-xy.json
Could not open  168-328-xy.json
Plotted inner arc for ../Jorge_prop/169-338/169-338-xyc.json
Plotted outer arc for ../Jorge_prop/169-338/169-338-xyc.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/170-249-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/170-249-xyc.json
Could not open  173-236-xy.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/175-321-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/175-321-xyc.json
Plotted inner arc for ../Jorge_prop/HST1/HST1-xyc.json
Plotted outer arc for ../Jorge_prop/HST1/HST1-xyc.json
Could not open  173-342-xy.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/178-258-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/178-258-xyc.json
Plotted inner arc for ../Jorge_prop/180-331/180-331-xyc.json
Plotted outer arc for ../Jorge_prop/180-331/180-331-xyc.json
Plotted inner arc for ../LuisLL/j8oc01010_drz/189-329-xyc.json
Plotted outer arc for ../LuisLL/j8oc01010_drz/189-329-xyc.json
Plotted inner arc for ../LuisLL/j8oc14010_drz/203-3039-xyc.json
Plotted outer arc for ../LuisLL/j8oc14010_drz/203-3039-xyc.json
Could not open  205-230-xy.json
Plotted inner arc for ../LuisLL/j8oc02010_drz/206-043-xyc.json
Plotted outer arc for ../LuisLL/j8oc02010_drz/206-043-xyc.json
Could not open  212-400-xy.json
Plotted inner arc for ../LuisLL/j8oc07010_drz/261-3018-xyc.json
Plotted outer arc for ../LuisLL/j8oc07010_drz/261-3018-xyc.json
Could not open  w266-558-xy.json
Plotted inner arc for ../LuisLL/j8oc07010_drz/305-811-xyc.json
Plotted outer arc for ../LuisLL/j8oc07010_drz/305-811-xyc.json
Plotted inner arc for ../LuisLL/j8oc08010_drz/308-3036-xyc.json
Plotted outer arc for ../LuisLL/j8oc08010_drz/308-3036-xyc.json
Plotted inner arc for ../LuisLL/j8oc07010_drz/LL5-xyc.json
Plotted outer arc for ../LuisLL/j8oc07010_drz/LL5-xyc.json
Plotted inner arc for ../LuisLL/j8oc08010_drz/LL6-xyc.json
Plotted outer arc for ../LuisLL/j8oc08010_drz/LL6-xyc.json
Plotted inner arc for ../LuisLL/j8oc08010_drz/344-3020-xyc.json
Plotted outer arc for ../LuisLL/j8oc08010_drz/344-3020-xyc.json
Could not open  LL7-xy.json
Plotted inner arc for ../LuisLL/j8oc08010_drz/362-3137-xyc.json
Plotted outer arc for ../LuisLL/j8oc08010_drz/362-3137-xyc.json
#+end_example


**** Write tables to JSON files
:LOGBOOK:
CLOCK: [2013-11-14 Thu 16:34]--[2013-11-14 Thu 17:34] =>  1:00
:END:
+ This is to minimise the amount of work that is done inside the org-mode file
+ Write both JSON and TOML versions of the files
  + [[https://github.com/mojombo/toml][TOML spec]]
  + [[https://github.com/uiri/toml/blob/master/toml.py][TOML python parser/writer]]
    + [ ] The writer needs improving
      + blank lines between dicts
      + indentation 

***** LL object database
:PROPERTIES:
:ID:       D793BFA8-E258-4B2E-B7E6-34302B2C994B
:END:
#+header: :var table=orion-ll-objects
#+BEGIN_SRC python :results list :return filelist
  import json
  import toml
  db = {}
  dbfile = "ll-data.json"
  top40list = []
  for bname, oname, sname, RA, Dec, Ref, Bally, Notes, Arc, Top40 in table[1:-1]:
      key = bname or oname or sname
      if key == oname:
          key = key.split()[-1]
      if key.startswith("w"):
          key = key[1:]
      db[key] = dict(bname=bname, oname=oname, sname=sname, RA=RA,
                     Dec=Dec, Ref=Ref, Bally=Bally, Notes=Notes, Arc=Arc)
      if Top40 == 1:
          top40list.append(key)


  with open(dbfile, "w") as f:
      json.dump(db, f, indent=2)
  with open(dbfile.replace(".json", ".tml"), "w") as f:
      toml.dump(db, f)

  with open("top40-list.txt", "w") as f:
      f.write("\n".join(top40list))

  filelist = ["[[file:{}]]".format(fn) for fn in [dbfile, "top40-list.txt"]]
#+END_SRC

#+RESULTS:
- [[file:ll-data.json]]
- [[file:top40-list.txt]]


***** Proplyd database
#+header: :var table=ricci-proplyd-table
#+BEGIN_SRC python :results file
  import json
  import toml
  db = {}
  dbfile = "ricci-data.json"
  for name, RA, Dec, OW, Type, Note in table[2:]:
      RA = RA.replace(" ", ":")
      Dec = Dec.replace(" ", ":")
      key = name
      db[key] = dict(RA=RA, Dec=Dec, Type=Type)
      if OW:
          db[key].update(OW=OW)
      if Note:
          db[key].update(Note=Note)
  
      with open(dbfile, "w") as f:
          json.dump(db, f, indent=2)
      with open(dbfile.replace(".json", ".tml"), "w") as f:
          toml.dump(db, f)
  return dbfile
#+END_SRC

#+RESULTS:
[[file:ricci-data.json]]

**** TODO Write ds9 region file for the LL objects
:PROPERTIES:
:ID:       0552A67D-F467-4F41-BD5D-DF5212B4AB35
:END:
#+header: :var table=orion-ll-objects
#+BEGIN_SRC python :results file :tangle generate-ll-boxes-region-file.py
  region_hdr_lines = [
      "# Region file format: DS9 version 4.1",
      "global color=red dashlist=8 3 width=1 font=\"helvetica 10 normal roman\" select=1 highlite=1 dash=0 fixed=0 edit=1 move=1 delete=1 include=1 source=1",
      "fk5",
  ]

  def region_box_to_string(ra="5:34:40.800", dec="-5:22:43.00",
                           width=50, height=50, angle=0.0, text="LL2"):
      return "box({},{},{}\",{}\",{}) # text={{{}}}".format(ra, dec, width, height, angle, text)

  boxes = []
  for [bname, oname, sname, RA, Dec, Ref, Bally, Notes, Arc, Top40] in table[1:]:
      if not oname:
          continue
      if "LL" in bname:
          size = 30.0
      else:
          size = 15.0
      if bname.startswith("LL"):
          name = bname
      else:
          name = oname.split()[-1]

      boxes.append(region_box_to_string(RA, Dec, size, size, text=name))

  region_file = "ll-boxes-new.reg"
  with open(region_file, "w") as f:
      f.writelines([s + "\n" for s in region_hdr_lines + boxes])
  print(region_file, end="")
#+END_SRC

#+begin_src sh :results file
python generate-ll-boxes-region-file.py
#+end_src

#+RESULTS:
[[file:ll-boxes-new.reg]]



#+begin_src sh
echo $SHELL
#+end_src

#+RESULTS:
: /bin/zsh




**** Proplyd catalog from Ricci et al 2008
This is Table 3 from their paper, but with extraneous columns removed
#+name: ricci-proplyd-table
|     Name | RAJ2000     | DEJ2000      |   [OW94] | Type | Note   |
|          | "h:m:s"     | "d:m:s"      |          |      |        |
|----------+-------------+--------------+----------+------+--------|
| 4364-146 | 05 34 36.44 | -05 21 45.95 |          | j    | J      |
| 4466-324 | 05 34 46.59 | -05 23 24.19 |          | j    | J,B    |
| 4468-605 | 05 34 46.76 | -05 26 04.79 |          | i    | J      |
| 4538-311 | 05 34 53.79 | -05 23 10.73 |          | rn   |        |
| 4596-400 | 05 34 59.56 | -05 24 00.19 | 4596-400 | i    |        |
| 4582-635 | 05 34 58.16 | -05 26 35.13 |          | i    |        |
|  005-514 | 05 35 00.47 | -05 25 14.34 |  005-514 | i    |        |
|  006-439 | 05 35 00.58 | -05 24 38.79 |          | j    | J      |
|  016-149 | 05 35 01.60 | -05 21 49.35 |          | rn   |        |
|  038-627 | 05 35 04.19 | -05 26 27.89 |  038-627 | i    |        |
|  044-527 | 05 35 04.42 | -05 25 27.40 |  044-527 | i    |        |
| 046-3838 | 05 35 04.61 | -05 38 38.00 |          | rn   |        |
|  046-245 | 05 35 04.63 | -05 22 44.85 |          | i    |        |
|  049-143 | 05 35 04.94 | -05 21 42.99 |          | i    |        |
| 051-3541 | 05 35 05.05 | -05 35 40.84 |          | rn   | EO     |
|  053-717 | 05 35 05.40 | -05 27 16.99 |          | d    |        |
|  057-419 | 05 35 05.73 | -05 24 18.55 |  057-419 | i    |        |
|  061-401 | 05 35 06.09 | -05 24 00.60 |  061-401 | i    |        |
| 064-3335 | 05 35 06.44 | -05 33 35.25 |          | i    |        |
| 066-3251 | 05 35 06.57 | -05 32 51.49 |          | i    |        |
|  066-652 | 05 35 06.59 | -05 26 51.99 |  066-652 | i    | B      |
|  069-601 | 05 35 06.91 | -05 26 00.60 |  069-601 | i    |        |
|  072-135 | 05 35 07.21 | -05 21 34.43 |  072-135 | i    | EO     |
|  073-227 | 05 35 07.27 | -05 22 26.56 |  073-227 | i    |        |
| 078-3658 | 05 35 07.84 | -05 36 58.15 |          | j    | J,B    |
|  090-326 | 05 35 09.02 | -05 23 26.20 |          | d    |        |
|  093-822 | 05 35 09.59 | -05 28 22.92 |  093-822 | i    |        |
|  099-339 | 05 35 09.89 | -05 23 38.50 |          | i    | J      |
|  102-233 | 05 35 10.13 | -05 22 32.74 |  102-233 | i    |        |
|  102-021 | 05 35 10.19 | -05 20 20.99 |  102-021 | i    |        |
|  102-322 | 05 35 10.20 | -05 23 21.56 |  102-322 | i    |        |
|  106-417 | 05 35 10.54 | -05 24 16.70 |  106-417 | i    |        |
|  106-156 | 05 35 10.58 | -05 21 56.24 |  106-156 | i    |        |
|  109-246 | 05 35 10.90 | -05 22 46.36 |  109-246 | i    |        |
|  109-327 | 05 35 10.95 | -05 23 26.45 |  109-327 | i    | J      |
| 110-3035 | 05 35 10.98 | -05 30 35.23 |          | rn   | J      |
|  114-426 | 05 35 11.30 | -05 24 26.50 |  114-426 | d    | EO,RN  |
|  117-421 | 05 35 11.65 | -05 24 21.50 |  117-421 | i    |        |
|  117-352 | 05 35 11.73 | -05 23 51.70 |          | i    |        |
|  119-340 | 05 35 11.90 | -05 23 39.70 |  119-340 | i    |        |
| 121-1925 | 05 35 12.09 | -05 19 24.80 | 121-1925 | d    |        |
|  121-434 | 05 35 12.12 | -05 24 33.80 |  121-434 | i    |        |
|  124-132 | 05 35 12.38 | -05 21 31.39 |  124-132 | i    | J,EO,B |
|  131-046 | 05 35 13.05 | -05 20 45.79 |  131-046 | i    |        |
|  131-247 | 05 35 13.11 | -05 22 47.11 |  131-247 | i    | J      |
| 132-1832 | 05 35 13.24 | -05 18 32.95 |          | d    | EO     |
|  132-042 | 05 35 13.24 | -05 20 41.94 |  132-042 | i    | J,EO   |
|  133-353 | 05 35 13.30 | -05 23 53.05 |  133-353 | i    | B      |
|  135-220 | 05 35 13.51 | -05 22 19.49 |  135-220 | i    |        |
|  138-207 | 05 35 13.78 | -05 22 07.39 |  138-207 | i    |        |
|  139-320 | 05 35 13.92 | -05 23 20.16 |          | i    |        |
|  141-520 | 05 35 14.05 | -05 25 20.50 |  141-520 | i    | FO     |
| 140-1952 | 05 35 14.05 | -05 19 51.90 | 140-1952 | d    | FO     |
|  142-301 | 05 35 14.15 | -05 23 00.91 |  142-301 | i    |        |
|  143-425 | 05 35 14.27 | -05 24 24.55 |  143-425 | i    |        |
|  144-522 | 05 35 14.34 | -05 25 22.30 |  144-522 | i    |        |
|  146-201 | 05 35 14.61 | -05 22 00.94 |          | i    |        |
|  147-323 | 05 35 14.72 | -05 23 23.01 |          | i    |        |
|  148-305 | 05 35 14.80 | -05 23 04.76 |  148-305 | i    | B      |
|  149-329 | 05 35 14.92 | -05 23 29.05 |  149-329 | i    |        |
|  150-147 | 05 35 15.00 | -05 21 47.34 |          | i    |        |
|  150-231 | 05 35 15.02 | -05 22 31.11 |  150-231 | i    | B      |
|  152-319 | 05 35 15.20 | -05 23 18.81 |  152-319 | i    |        |
|  152-738 | 05 35 15.21 | -05 27 37.85 |  152-738 | i    |        |
|  154-324 | 05 35 15.35 | -05 23 24.11 |  154-324 | i    | B      |
|  154-225 | 05 35 15.37 | -05 22 25.35 |  154-225 | i    | B      |
|  154-240 | 05 35 15.38 | -05 22 39.85 |          | i    |        |
|  155-338 | 05 35 15.51 | -05 23 37.45 |  155-338 | i    |        |
|  157-323 | 05 35 15.72 | -05 23 22.59 |  157-323 | i    | B      |
|  158-323 | 05 35 15.83 | -05 23 22.59 |  158-323 | i    | B      |
|  158-327 | 05 35 15.79 | -05 23 26.51 |  158-327 | i    | B      |
|  158-326 | 05 35 15.81 | -05 23 25.51 |  158-326 | i    | B      |
|  159-338 | 05 35 15.90 | -05 23 38.00 |  159-338 | i    | B      |
|  159-418 | 05 35 15.90 | -05 24 17.85 |  159-418 | i    |        |
|  159-221 | 05 35 15.93 | -05 22 21.05 |  159-221 | d    |        |
|  159-350 | 05 35 15.96 | -05 23 50.30 |  159-350 | i    | B      |
|  160-353 | 05 35 16.01 | -05 23 53.00 |  160-353 | i    | J      |
|  161-324 | 05 35 16.05 | -05 23 24.35 |  161-324 | i    |        |
|  161-328 | 05 35 16.07 | -05 23 27.81 |  161-328 | i    |        |
|  161-314 | 05 35 16.10 | -05 23 14.05 |  161-314 | i    |        |
|  162-133 | 05 35 16.19 | -05 21 32.39 |  162-133 | i    |        |
|  163-026 | 05 35 16.31 | -05 20 25.24 |          | d    | B      |
|  163-210 | 05 35 16.27 | -05 22 10.45 |  163-210 | i    | B      |
|  163-317 | 05 35 16.27 | -05 23 16.51 |  163-317 | i    |        |
|  163-222 | 05 35 16.30 | -05 22 21.50 |  163-222 | i    | B,FO   |
|  163-249 | 05 35 16.33 | -05 22 49.01 |  163-249 | i    | B      |
|  164-511 | 05 35 16.35 | -05 25 09.60 |  164-511 | i    |        |
|  165-235 | 05 35 16.48 | -05 22 35.16 |  165-235 | i    |        |
|  165-254 | 05 35 16.54 | -05 22 53.70 |          | d    | RN     |
|  166-316 | 05 35 16.61 | -05 23 16.19 |  166-315 | i    |        |
|  166-519 | 05 35 16.57 | -05 25 17.74 |  166-519 | d    |        |
|  166-406 | 05 35 16.57 | -05 24 06.00 |  166-406 | i    |        |
|  166-250 | 05 35 16.59 | -05 22 50.36 |  166-250 | i    |        |
|  167-231 | 05 35 16.73 | -05 22 31.30 |  167-231 | d    | FO     |
|  167-317 | 05 35 16.74 | -05 23 16.51 |  167-317 | i    |        |
|  168-235 | 05 35 16.81 | -05 22 34.71 |  168-235 | i    |        |
|  168-328 | 05 35 16.77 | -05 23 28.06 |  168-328 | i    | B      |
|  168-326 | 05 35 16.83 | -05 23 25.91 |  168-326 | i    | B      |
|  169-338 | 05 35 16.88 | -05 23 38.10 |  169-338 | i    | B      |
|  170-301 | 05 35 16.95 | -05 23 00.91 |  170-301 | i    |        |
|  170-249 | 05 35 16.96 | -05 22 48.51 |  170-249 | i    | B      |
|  170-337 | 05 35 16.97 | -05 23 37.15 |  170-337 | i    | B      |
|  171-340 | 05 35 17.04 | -05 23 39.75 |  171-340 | i    | B      |
|  171-434 | 05 35 17.11 | -05 24 34.40 |  171-434 | i    | B      |
|  172-028 | 05 35 17.22 | -05 20 27.84 |  172-028 | d    |        |
|  173-341 | 05 35 17.32 | -05 23 41.40 |  173-341 | i    | B      |
|  173-236 | 05 35 17.34 | -05 22 35.81 |  173-236 | i    |        |
|  174-305 | 05 35 17.37 | -05 23 04.86 |  174-305 | i    |        |
|  174-414 | 05 35 17.38 | -05 24 13.90 |  174-414 | i    |        |
|  175-251 | 05 35 17.47 | -05 22 51.26 |  175-251 | i    | B      |
|  175-355 | 05 35 17.54 | -05 23 55.05 |  175-355 | i    |        |
|  175-543 | 05 35 17.54 | -05 25 42.89 |  175-543 | i    | J,EO,B |
|  176-325 | 05 35 17.55 | -05 23 24.96 |  176-325 | i    |        |
|  176-252 | 05 35 17.64 | -05 22 51.66 |  176-252 | i    |        |
| 177-341W | 05 35 17.66 | -05 23 41.00 |  177-341 | i    | B      |
|  177-454 | 05 35 17.69 | -05 24 54.10 |  177-454 | i    |        |
|  177-541 | 05 35 17.71 | -05 25 40.76 |          | i    | EO,B   |
|  177-444 | 05 35 17.73 | -05 24 43.75 |  177-444 | i    |        |
| 177-341E | 05 35 17.73 | -05 23 41.10 |  177-341 | i    | B      |
|  178-441 | 05 35 17.81 | -05 24 41.05 |          | i    |        |
|  178-258 | 05 35 17.84 | -05 22 58.15 |          | i    |        |
|  179-056 | 05 35 17.92 | -05 20 55.44 |  179-056 | i    | B      |
|  179-354 | 05 35 17.96 | -05 23 53.50 |  179-354 | i    |        |
|  180-331 | 05 35 18.03 | -05 23 30.80 |  180-331 | i    | B      |
|  181-247 | 05 35 18.08 | -05 22 47.10 |  181-247 | i    | B      |
|  181-825 | 05 35 18.10 | -05 28 25.04 |          | i    | RN     |
|  182-316 | 05 35 18.19 | -05 23 31.55 |  182-316 | d    | B      |
|  182-413 | 05 35 18.22 | -05 24 13.45 |  182-413 | i    |        |
|  183-439 | 05 35 18.28 | -05 24 38.85 |  183-439 | i    | B      |
|  183-419 | 05 35 18.31 | -05 24 18.85 |  183-419 | i    |        |
|  183-405 | 05 35 18.33 | -05 24 04.85 |  183-405 | d    | FO,B   |
|  184-427 | 05 35 18.35 | -05 24 26.85 |  184-427 | i    | B      |
|  184-520 | 05 35 18.44 | -05 25 19.29 |  184-520 | i    |        |
|  187-314 | 05 35 18.68 | -05 23 14.01 |  187-314 | i    | B      |
|  189-329 | 05 35 18.87 | -05 23 28.85 |  189-329 | i    |        |
|  190-251 | 05 35 19.03 | -05 22 50.65 |          | i    | B      |
|  191-232 | 05 35 19.13 | -05 22 31.20 |          | d    |        |
|  191-350 | 05 35 19.06 | -05 23 49.50 |  191-350 | i    | J      |
| 193-1659 | 05 35 19.25 | -05 16 58.69 |          | rn   |        |
|  197-427 | 05 35 19.65 | -05 24 26.70 |  197-427 | i    | RN     |
|  198-222 | 05 35 19.82 | -05 22 21.55 |  198-222 | i    |        |
|  198-448 | 05 35 19.83 | -05 24 47.95 |  198-448 | i    |        |
| 199-1508 | 05 35 19.89 | -05 15 08.25 |          | i    | B      |
|  200-106 | 05 35 20.04 | -05 21 05.99 |  200-106 | i    |        |
|  201-534 | 05 35 20.14 | -05 25 33.84 |  201-534 | i    |        |
|  202-228 | 05 35 20.15 | -05 22 28.30 |  202-228 | i    | B      |
|  203-504 | 05 35 20.26 | -05 25 04.05 |  203-504 | i    | B      |
|  203-506 | 05 35 20.32 | -05 25 05.55 |          | d    | RN     |
|  205-330 | 05 35 20.45 | -05 23 29.96 |  205-330 | i    | B      |
|  205-052 | 05 35 20.52 | -05 20 52.05 |  205-052 | i    |        |
|  205-421 | 05 35 20.53 | -05 24 21.00 |  205-421 | i    | FO     |
|  206-446 | 05 35 20.62 | -05 24 46.45 |  206-446 | i    |        |
|  208-122 | 05 35 20.83 | -05 21 21.45 |  208-122 | rn   |        |
|  209-151 | 05 35 21.00 | -05 21 52.30 |  209-151 | i    | B      |
|  210-225 | 05 35 21.03 | -05 22 25.20 |          | i    |        |
|  212-557 | 05 35 21.15 | -05 25 57.04 |  212-557 | i    |        |
|  212-400 | 05 35 21.19 | -05 24 00.20 |          | i    |        |
|  212-260 | 05 35 21.24 | -05 22 59.51 |  212-260 | i    |        |
|  213-533 | 05 35 21.28 | -05 25 33.11 |          | i    | B      |
|  213-346 | 05 35 21.30 | -05 23 46.10 |          | i    | B      |
|  215-652 | 05 35 21.45 | -05 26 52.40 |          | i    |        |
|  215-317 | 05 35 21.49 | -05 23 16.71 |  215-317 | i    |        |
|  215-106 | 05 35 21.55 | -05 21 05.60 |  215-106 | i    | J      |
|  216-541 | 05 35 21.60 | -05 25 40.70 |          | i    |        |
|  216-715 | 05 35 21.62 | -05 27 14.65 |  216-715 | i    |        |
|  218-339 | 05 35 21.77 | -05 23 39.30 |  218-339 | i    |        |
|  218-354 | 05 35 21.79 | -05 23 53.90 |  218-354 | d    | EO,B   |
|  218-529 | 05 35 21.82 | -05 25 28.46 |          | i    | B      |
|  218-306 | 05 35 21.84 | -05 23 06.46 |          | i    | B      |
|  221-433 | 05 35 22.08 | -05 24 32.95 |  221-433 | i    |        |
|  223-414 | 05 35 22.31 | -05 24 14.25 |  223-414 | i    | B      |
|  224-728 | 05 35 22.37 | -05 27 28.40 |  224-728 | i    |        |
|  228-548 | 05 35 22.83 | -05 25 47.69 |  228-548 | i    |        |
|  230-536 | 05 35 23.02 | -05 25 36.29 |          | d    |        |
|  231-460 | 05 35 23.05 | -05 24 59.86 |  231-460 | i    |        |
|  231-502 | 05 35 23.16 | -05 25 02.19 |  231-502 | i    | B      |
|  231-838 | 05 35 23.10 | -05 28 37.34 |  231-838 | i    | J      |
|  232-453 | 05 35 23.22 | -05 24 52.79 |  232-453 | i    |        |
|  234-853 | 05 35 23.40 | -05 28 53.19 |          | i    |        |
|  236-527 | 05 35 23.59 | -05 25 26.54 |  236-527 | i    |        |
|  237-627 | 05 35 23.66 | -05 26 27.15 |  237-627 | i    |        |
|  238-334 | 05 35 23.80 | -05 23 34.30 |  238-334 | i    | B      |
|  239-334 | 05 35 23.86 | -05 23 34.05 |          | d    | EO,B   |
|  239-510 | 05 35 23.98 | -05 25 09.94 |  239-510 | i    |        |
|  240-314 | 05 35 24.02 | -05 23 13.85 |  240-314 | i    | B      |
|  242-519 | 05 35 24.22 | -05 25 18.79 |  242-519 | i    |        |
|  244-440 | 05 35 24.38 | -05 24 39.74 |  244-440 | i    |        |
|  245-632 | 05 35 24.45 | -05 26 31.55 |  245-632 | i    | B      |
| 245-1910 | 05 35 24.48 | -05 19 09.84 |          | i    | RN,B   |
|  245-502 | 05 35 24.51 | -05 25 01.59 |  245-502 | i    |        |
|  247-436 | 05 35 24.69 | -05 24 35.74 |  247-436 | i    | J      |
|  250-439 | 05 35 25.02 | -05 24 38.49 |  250-439 | i    |        |
|  252-457 | 05 35 25.21 | -05 24 57.34 |  252-457 | i    |        |
| 253-1536 | 05 35 25.30 | -05 15 35.54 |          | d    | J,RN,B |
|  254-412 | 05 35 25.37 | -05 24 11.50 |  254-412 | i    |        |
|  255-512 | 05 35 25.52 | -05 25 11.84 |          | i    |        |
|  262-521 | 05 35 26.18 | -05 25 20.49 |  262-521 | i    |        |
|  264-532 | 05 35 26.42 | -05 25 31.69 |  264-532 | i    |        |
|  266-558 | 05 35 26.62 | -05 25 57.84 |          | i    |        |
|  280-931 | 05 35 27.96 | -05 29 31.15 |          | i    |        |
| 280-1720 | 05 35 28.05 | -05 17 20.33 |          | d    | FO     |
|  281-306 | 05 35 28.13 | -05 23 06.45 |          | d    | FO     |
|  282-458 | 05 35 28.20 | -05 24 58.19 |  282-458 | i    | J      |
|  282-614 | 05 35 28.20 | -05 26 14.20 |          | i    |        |
|  284-439 | 05 35 28.40 | -05 24 38.69 |          | i    |        |
|  294-757 | 05 35 29.43 | -05 37 56.60 |          | rn   |        |
|  294-606 | 05 35 29.48 | -05 26 06.63 |          | d    | RN     |
|  297-025 | 05 35 29.67 | -05 30 24.75 |          | i    |        |
|  304-539 | 05 35 30.41 | -05 25 38.63 |  304-539 | i    |        |
| 307-1807 | 05 35 30.70 | -05 18 07.24 | 307-1807 | i    |        |
|  314-816 | 05 35 31.40 | -05 28 16.48 |          | i    |        |
|  321-602 | 05 35 32.10 | -05 26 01.94 |  321-602 | d    | EO     |
|  332-405 | 05 35 33.19 | -05 24 04.74 |          | d    |        |
| 332-1605 | 05 35 33.20 | -05 16 05.38 | 332-1605 | i    |        |
| 346-1553 | 05 35 34.62 | -05 15 52.92 |          | d    | FO     |
| 347-1535 | 05 35 34.67 | -05 15 34.88 | 347-1535 | d    | J      |
| 351-3349 | 05 35 35.13 | -05 33 49.18 |          | i    | J      |
|  353-130 | 05 35 35.32 | -05 21 29.59 |          | j    | J,B    |
|  473-245 | 05 35 47.34 | -05 22 44.82 |          | d    | EO     |


***** Write ds9 region file for the proplyds
#+header: :var table=ricci-proplyd-table
#+BEGIN_SRC python :results file
  region_hdr_lines = [
      "# Region file format: DS9 version 4.1",
      "global color=#dd8822 dashlist=8 3 width=1 font=\"helvetica 6 normal roman\" select=1 highlite=1 dash=0 fixed=0 edit=1 move=1 delete=1 include=1 source=1",
      "fk5",
      ]
  
  def region_box_to_string(ra="5:34:40.800", dec="-5:22:43.00",
                           width=50, height=50, angle=0.0, text="LL2"):
      return "box({},{},{}\",{}\",{}) # text={{{}}}".format(ra, dec, width, height, angle, text)
  
  boxes = []
  size = 2
  for name, RA, Dec, OW, Type, Note in table[2:]:
      RA = RA.replace(" ", ":")
      Dec = Dec.replace(" ", ":")
      boxes.append(region_box_to_string(RA, Dec, size, size, text=name))
  
  region_file = "proplyd-boxes.reg"
  with open(region_file, "w") as f:
      f.writelines([s + "\n" for s in region_hdr_lines + boxes])
  return region_file
#+END_SRC

#+RESULTS:
[[file:proplyd-boxes.reg]]




**** Star catalog from Da Rio et al 2012
+ Data is in [[file:Da-Rio-2012-Tab3.dat][Da-Rio-2012-Tab3.dat]]
+ Analysis is  now done in an ipython notebook.

*** TODO 






** =read-shapes-LL= program design
+ This is a suite of programs for fitting the arcs and measuring their brightness
*** Original design
These programs must be run in order:
1. =find-xy-shell.py --region SOURCE-forma.reg= 
   + Reads arcs from =SOURCE-forma.reg=
   + Writes data to =SOURCE-xy.json=
2. =fit-circle-shell.py SOURCE-xy.json=
   + Reads arc data from =SOURCE-xy.json=
   + Fits circles to inner and outer arcs
   + Saves plot: =SOURCE-arcfits.pdf=
   + Saves DS9 region file: =SOURCE-arcfits.reg=
   + Writes data to =SOURCE-xyc.json=
3. =extract-image.py --source SOURCE --fitsfile IMAGE.fits=
   + Reads arc data from =SOURCE-xyc.json=
   + Reads large image data from =IMAGE.fits=
   + Writes small image around source to =SOURCE-extract.fits=
4. =arc_brightness.py --source SOURCE=
   + Reads arc data from =SOURCE-xyc.json=
   + Reads image data from =SOURCE-extract.fits=
   + Calculates brightness in shell and background regions
   + Writes data to =SOURCE-xycb.json=
   + Saves plots: =SOURCE-arcbright-th.png= and =SOURCE-arcbright-z.png=
5. =plot-image.py --source SOURCE= 
   + Reads arc data from =SOURCE-xycb.json=
   + Reads image data from =SOURCE-extract.fits=
   + Saves image plot: =SOURCE-images.pdf=
   + Writes extra data to =SOURCE-xycb.json=

*** New design
:LOGBOOK:
CLOCK: [2013-11-16 Sat 11:10]--[2013-11-16 Sat 11:47] =>  0:37
CLOCK: [2013-11-15 Fri 11:58]--[2013-11-15 Fri 13:47] =>  1:49
:END:
1. [X] =find-xy-shell.py SOURCE= 
   + Reads arcs from =SOURCE-forma.reg=
   + Writes data to =SOURCE-arcdata.json=
2. [X] =fit-circle-shell.py SOURCE=
   + Reads arc data from =SOURCE-arcdata.json=
   + Fits circles to inner and outer arcs
   + Saves plot: =SOURCE-arcfits.pdf=
   + Saves DS9 region file: =SOURCE-arcfits.reg=
   + Writes fit data to =SOURCE-arcdata.json=
3. [X] =extract-image.py SOURCE --fitsfile PATH/IMAGE.fits=
   + Run separately for each IMAGE
   + Reads arc data from =SOURCE-arcdata.json=
   + Reads large image data from =IMAGE.fits=
   + Reads instrument configuration from  =IMAGE.fits=
   + Writes small image around source to =SOURCE-IMAGE-extract.fits=
   + Writes data about instrument configuration and image files to =SOURCE-arcdata.json=
4. [X] =arc_brightness.py SOURCE=
   + Reads arc data and instrument data from =SOURCE-arcdata.json=
   + For each =IMAGE= found:
     + Reads image data from =SOURCE-IMAGE-extract.fits=
     + Calculates brightness in shell and background regions
     + Writes data about shell brightness to =SOURCE-arcdata.json=
     + Saves plots: =SOURCE-IMAGE-arcbright-th.png= and =SOURCE-IMAGE-arcbright-z.png=
5. [X] =plot-image.py SOURCE --image IMAGE= 
   + Reads arc data from =SOURCE-arcdata.json=
   + Reads image data from =SOURCE-IMAGE-extract.fits=
   + Saves image plot: =SOURCE-IMAGE-images.pdf=
   + Writes data about plot limits to =SOURCE-arcdata.json=
     


**** Notes
+ extract-image.py must encode the camera/instrument in the output file somehow
** Using circle_fit to replace read-shapes-LL/fit-circle-shell.py
*** DONE Systematic application of circle_fit to all sources
CLOSED: [2020-08-06 Thu 23:39]
+ Only do \delta\theta = 60, 65, 70, 75
+ We can get the list of sources from ~luis-programas/arcs-summary-classify.ecsv~
  + But how do we find which field each source is in?
  + We seem to have already solved that problem in [[id:F5BEFDCB-D776-4CD5-B6BA-E93439AF7A8F][Output latex figures with the individual sources]]
    + This uses ~ll-data.json~ in addition to the astropy table
      + Why do we have data in two places?
      + The file is written in [[id:D793BFA8-E258-4B2E-B7E6-34302B2C994B][LL object database]] with data from [[id:B35A749C-92D8-4A89-8821-A6A03CE75A4D][Tabla de objetos LL]]
      + It seems that it uses the json file to find which Bally field is associated with each source, but we use a different approach here
  + Parse the folder names to find the Bally field
+ So there is no need to use the ~.ecsv~ file. We just do the fitting on all the sources that we can find.  And we don't bother at this stage whether they are ~*I~ or ~*P~ sources
#+begin_src python :eval no :tangle apply-circle-fit/all-sources-circle-fit.py
  import sys
  from pathlib import Path
  from circle_fit import circle_fit
  from astropy.table import Table
  import pandas as pd

  df = Table.read(
      "luis-programas/arcs-summary-classify.ecsv", format="ascii.ecsv"
  ).to_pandas()
  qstring = "~((Group == '*P') | (Group == '*I'))"
  arcdata_paths = sorted(Path().rglob("*-arcdata.json"))

  circle_fit.PT_STAR = "o"

  lv_mir = {
      "168-326": "lv1",
      "167-317": "lv2",
      "163-317": "lv3",
      "161-324": "lv4",
      "158-323": "lv5",
  }

  for arcdata_path in arcdata_paths:
      arcdata_file = arcdata_path.name
      source_dir = arcdata_path.parent
      source_id = arcdata_file.replace("-arcdata.json", "")
      fits_paths = sorted(source_dir.glob(f"{source_id}-*-extract.fits"))
      # Filter the list of fits files to choose the one that corresponds to the Bally field
      # This is designed to fail if more than one file meets the filter
      if str(source_dir).startswith("j8oc"):
          bally_field = str(source_dir).replace("j8oc", "")[:2]
          (fits_path,) = [_ for _ in fits_paths if f"-Bally_{bally_field}-" in str(_)]
      else:
          # Deal with the case of LL 7 that is only in WFPC2
          bally_field = str(source_dir).replace("wfpc2_", "")[:2]
          (fits_path,) = [_ for _ in fits_paths if f"_WFPC2_{bally_field}_" in str(_)]
      print("[][] " * 10)
      print(source_dir, source_id, bally_field, fits_path)

      for arc, circle_fit.PT_ARC in ["outer", "x"], ["inner", "+"], ["ridge", "x"]:
          region_file = f"{source_id}-forma.reg"
          if arc == "ridge":
              # Special case of MIR LV arcs
              if source_id in lv_mir:
                  region_file = f"{lv_mir[source_id]}-smith-2005-forma.reg"
              else:
                  # Skip the ridge method if not an LV arc
                  continue
          else:
              # Opposite logic for the outer/inner arcs: skip the LV knots
              if source_id in lv_mir:
                  continue

          for delta_theta in 60, 65, 70, 75:
              plot_path = source_dir / f"{source_id}-{arc}-{delta_theta:02d}.pdf"
              print("#### " * 10)
              print("Creating", plot_path)
              try:
                  circle_fit.plot_solution(
                      source_dir / region_file,
                      fits_path,
                      plot_path,
                      delta_theta=delta_theta,
                      maxiter=5,
                  )
              except AssertionError as e:
                  print(f".@.@.@.@. Failed assertion: {e.args}")
                  continue
#+end_src

#+begin_src sh :results verbatim :eval no
  PYTHONPATH=. python apply-circle-fit/all-sources-circle-fit.py
#+end_src

*This should be run in a terminal* 
**** Sources that are still failing
[2020-10-01 Thu]
+ 124-131 NW
  + Missing JSON files
  + [2021-01-07 Thu] I think this is because it is best seen in [O III]
+ 154-240 N
+ 159-221 N
+ Todos los LV


*** TODO Collate the results of circle_fit

+ This time we do use the ~.ecsv~ table to get the list of sources, so we can winnow out the unwanted ones
+ This is currently better implemented in the notebook
  + [[file:notebooks/First look at statistics of applying circle_fit to all sources.ipynb]]
  + [[file:notebooks/First look at statistics of applying circle_fit to all sources.py]]
  + which generated the following figures:
    + [[file:all-sources-Pi_out-Lambda_out.pdf]]
    + [[file:all-sources-Pi_in-Lambda_in.pdf]]
  + Once everything is debugged, I want to port the notebook stuff to the following script, which will write out a table of the results
+ Current status [2020-08-08 Sat]
  1. From the Pi--Lambda plots for both inner and outer arcs, we find smaller values of Lambda than in other samples
     - Lots of points are in the oblate-spheroid region of the graph
     - I suspect this is because ~circle_fit~ is failing to measure R90 correctly for arcs that stop before getting to 90 degrees from axis
  2. Also, there seem to be a lot of sources with very few points in the arcs, which makes some of the fitting unreliable
+ That turned out to be correct [2020-08-08 Sat 20:23]
  + I now set Lambda = NaN if the arc doesn't get far enough on either side (R90+ and R90- do not exist)
  + If only one of R90+ or R90- exists, then we use that for Lambda but set d Lambda to NaN
  + So, we need R90+ and R90- to both exist in order to have valid values of both Lambda and d Lambda
  + New figures are:
    + [[file:all-sources-new-Pi_out-Lambda_out.pdf]]
    + [[file:all-sources-new-Pi_in-Lambda_in.pdf]]
  + These eliminate the big clump of points in the oblate spheroid region
  + But they also have much fewer points
+ [2020-08-19 Wed] It turns out that the inner and outer arcs are indistinguishable statistically, so it makes sense to merge all the measurements:
  + [[file:all-sources-merge-Pi-Lambda.pdf]]
+ [2020-09-11 Fri] Now added the mid-IR arcs for the LV knots
  + There are only 5 of them - LV 1, 2, 3, 4, 5
  + They all use the ridge method

#+begin_src python :eval no :tangle apply-circle-fit/collate-results-circle-fit.py
  import sys
  from pathlib import Path
  from astropy.table import Table
  import pandas as pd
  import numpy as np
  import json


  ROOT_PATH = Path()

  # Query to exclude problematic and interproplyd sources
  qstring = "~((Group == '*P') | (Group == '*I'))"
  df = Table.read(
      "luis-programas/arcs-summary-classify.ecsv",
      format="ascii.ecsv").to_pandas().query(qstring)

  # New columns for the circle_fit results
  df = df.assign(
      Pi_in=np.nan, e_Pi_in=np.nan,
      Pi_out=np.nan, e_Pi_out=np.nan,
      Lambda_in=np.nan, e_Lambda_in=np.nan, d_Lambda_in=np.nan,
      Lambda_out=np.nan, e_Lambda_out=np.nan, d_Lambda_out=np.nan,
  )

  # Keys in JSON file for each variable
  VARS = "Pi", "Lambda", "d Lambda", "R0"
  # And a parallel version for the table column names (no spaces!)
  VVARS = [_.replace(" ", "_") for _ in VARS]


  def mad(x):
      """Median absolute deviation rescaled to sigma for Gaussian"""
      return 1.4826*np.nanmedian(np.abs(x - np.nanmedian(x)))


  def collate_circle_fit_one_source(source_id):
      rslt = {}
    
      for arc_long, arc in [["inner", "in"], ["outer", "out"]]:
          json_paths = ROOT_PATH.glob(f"*/{source_id}-{arc_long}-*.json")

          # Initialize empty lists for each variable
          var_lists = {f"{vv}_{arc}": [] for vv in VVARS}

          # Now fill in those lists with data from JSON files
          for json_path in json_paths:
              data = json.load(json_path.open())
              if not 60 <= data["d theta"] <= 75:
                  continue # skip anything outside this range of d theta
              for v, vv in zip(VARS, VVARS):
                  var_lists[f"{vv}_{arc}"].append(data.get(v))

          # Finally, calculate median and dispersion
          for vv in VVARS:
              key = f"{vv}_{arc}"
              vmedian = np.nanmedian(var_lists[key])
              vsig = mad(np.array(var_lists[key]))
              rslt[key] = vmedian
              rslt[f"e_{key}"] = vsig
              rslt[f"n_{key}"] = len(var_lists[key])
              rslt[f"list_{key}"] = var_lists[key]

      return rslt

        
  for source_id in df["Object"]:
      cfit_files = ROOT_PATH.glob(f"*/{source_id}-*er-*.json")
      print(source_id, sorted(cfit_files))

#+end_src

#+begin_src sh :results verbatim
PYTHONPATH=. python apply-circle-fit/collate-results-circle-fit.py
#+end_src

#+RESULTS:
#+begin_example
022-635 [PosixPath('j8oc16010_wcs/022-635-inner-60.json'), PosixPath('j8oc16010_wcs/022-635-inner-65.json'), PosixPath('j8oc16010_wcs/022-635-inner-70.json'), PosixPath('j8oc16010_wcs/022-635-inner-75.json'), PosixPath('j8oc16010_wcs/022-635-outer-60.json'), PosixPath('j8oc16010_wcs/022-635-outer-65.json'), PosixPath('j8oc16010_wcs/022-635-outer-70.json'), PosixPath('j8oc16010_wcs/022-635-outer-75.json')]
041-637 [PosixPath('j8oc16010_wcs/041-637-outer-60.json'), PosixPath('j8oc16010_wcs/041-637-outer-65.json'), PosixPath('j8oc16010_wcs/041-637-outer-70.json'), PosixPath('j8oc16010_wcs/041-637-outer-75.json')]
042-628 [PosixPath('j8oc16010_wcs/042-628-inner-60.json'), PosixPath('j8oc16010_wcs/042-628-inner-65.json'), PosixPath('j8oc16010_wcs/042-628-inner-70.json'), PosixPath('j8oc16010_wcs/042-628-inner-75.json'), PosixPath('j8oc16010_wcs/042-628-outer-60.json'), PosixPath('j8oc16010_wcs/042-628-outer-65.json'), PosixPath('j8oc16010_wcs/042-628-outer-70.json'), PosixPath('j8oc16010_wcs/042-628-outer-75.json')]
049-143 [PosixPath('j8oc09010_wcs/049-143-outer-60.json'), PosixPath('j8oc09010_wcs/049-143-outer-65.json'), PosixPath('j8oc09010_wcs/049-143-outer-70.json'), PosixPath('j8oc09010_wcs/049-143-outer-75.json')]
051-024 [PosixPath('j8oc09010_wcs/051-024-inner-60.json'), PosixPath('j8oc09010_wcs/051-024-inner-65.json'), PosixPath('j8oc09010_wcs/051-024-inner-70.json'), PosixPath('j8oc09010_wcs/051-024-inner-75.json'), PosixPath('j8oc09010_wcs/051-024-outer-60.json'), PosixPath('j8oc09010_wcs/051-024-outer-65.json'), PosixPath('j8oc09010_wcs/051-024-outer-70.json'), PosixPath('j8oc09010_wcs/051-024-outer-75.json')]
066-3251 []
072-134 [PosixPath('j8oc09010_wcs/072-134-inner-60.json'), PosixPath('j8oc09010_wcs/072-134-inner-65.json'), PosixPath('j8oc09010_wcs/072-134-inner-70.json'), PosixPath('j8oc09010_wcs/072-134-inner-75.json'), PosixPath('j8oc09010_wcs/072-134-outer-60.json'), PosixPath('j8oc09010_wcs/072-134-outer-65.json'), PosixPath('j8oc09010_wcs/072-134-outer-70.json'), PosixPath('j8oc09010_wcs/072-134-outer-75.json')]
074-229 [PosixPath('j8oc01010_wcs/074-229-outer-60.json'), PosixPath('j8oc01010_wcs/074-229-outer-65.json'), PosixPath('j8oc01010_wcs/074-229-outer-70.json'), PosixPath('j8oc01010_wcs/074-229-outer-75.json')]
101-233 [PosixPath('j8oc01010_wcs/101-233-inner-60.json'), PosixPath('j8oc01010_wcs/101-233-inner-65.json'), PosixPath('j8oc01010_wcs/101-233-inner-70.json'), PosixPath('j8oc01010_wcs/101-233-inner-75.json'), PosixPath('j8oc01010_wcs/101-233-outer-60.json'), PosixPath('j8oc01010_wcs/101-233-outer-65.json'), PosixPath('j8oc01010_wcs/101-233-outer-70.json'), PosixPath('j8oc01010_wcs/101-233-outer-75.json')]
102-157 [PosixPath('j8oc01010_wcs/102-157-inner-60.json'), PosixPath('j8oc01010_wcs/102-157-inner-65.json'), PosixPath('j8oc01010_wcs/102-157-inner-70.json'), PosixPath('j8oc01010_wcs/102-157-inner-75.json'), PosixPath('j8oc01010_wcs/102-157-outer-60.json'), PosixPath('j8oc01010_wcs/102-157-outer-65.json'), PosixPath('j8oc01010_wcs/102-157-outer-70.json'), PosixPath('j8oc01010_wcs/102-157-outer-75.json')]
106-245 [PosixPath('j8oc01010_wcs/106-245-inner-60.json'), PosixPath('j8oc01010_wcs/106-245-inner-65.json'), PosixPath('j8oc01010_wcs/106-245-inner-70.json'), PosixPath('j8oc01010_wcs/106-245-inner-75.json'), PosixPath('j8oc01010_wcs/106-245-outer-60.json'), PosixPath('j8oc01010_wcs/106-245-outer-65.json'), PosixPath('j8oc01010_wcs/106-245-outer-70.json'), PosixPath('j8oc01010_wcs/106-245-outer-75.json')]
109-246 [PosixPath('j8oc01010_wcs/109-246-inner-60.json'), PosixPath('j8oc01010_wcs/109-246-inner-65.json'), PosixPath('j8oc01010_wcs/109-246-inner-70.json'), PosixPath('j8oc01010_wcs/109-246-inner-75.json'), PosixPath('j8oc01010_wcs/109-246-outer-60.json'), PosixPath('j8oc01010_wcs/109-246-outer-65.json'), PosixPath('j8oc01010_wcs/109-246-outer-70.json'), PosixPath('j8oc01010_wcs/109-246-outer-75.json')]
116-3101 [PosixPath('j8oc14010_wcs/116-3101-inner-60.json'), PosixPath('j8oc14010_wcs/116-3101-inner-65.json'), PosixPath('j8oc14010_wcs/116-3101-inner-70.json'), PosixPath('j8oc14010_wcs/116-3101-inner-75.json'), PosixPath('j8oc14010_wcs/116-3101-outer-60.json'), PosixPath('j8oc14010_wcs/116-3101-outer-65.json'), PosixPath('j8oc14010_wcs/116-3101-outer-70.json'), PosixPath('j8oc14010_wcs/116-3101-outer-75.json')]
119-3155 [PosixPath('j8oc14010_wcs/119-3155-inner-60.json'), PosixPath('j8oc14010_wcs/119-3155-inner-65.json'), PosixPath('j8oc14010_wcs/119-3155-inner-70.json'), PosixPath('j8oc14010_wcs/119-3155-inner-75.json'), PosixPath('j8oc14010_wcs/119-3155-outer-60.json'), PosixPath('j8oc14010_wcs/119-3155-outer-65.json'), PosixPath('j8oc14010_wcs/119-3155-outer-70.json'), PosixPath('j8oc14010_wcs/119-3155-outer-75.json')]
124-131 []
136-3057 [PosixPath('j8oc14010_wcs/136-3057-inner-60.json'), PosixPath('j8oc14010_wcs/136-3057-inner-65.json'), PosixPath('j8oc14010_wcs/136-3057-inner-70.json'), PosixPath('j8oc14010_wcs/136-3057-inner-75.json'), PosixPath('j8oc14010_wcs/136-3057-outer-60.json'), PosixPath('j8oc14010_wcs/136-3057-outer-65.json'), PosixPath('j8oc14010_wcs/136-3057-outer-70.json'), PosixPath('j8oc14010_wcs/136-3057-outer-75.json')]
138-3024 [PosixPath('j8oc14010_wcs/138-3024-inner-60.json'), PosixPath('j8oc14010_wcs/138-3024-inner-65.json'), PosixPath('j8oc14010_wcs/138-3024-inner-70.json'), PosixPath('j8oc14010_wcs/138-3024-inner-75.json'), PosixPath('j8oc14010_wcs/138-3024-outer-60.json'), PosixPath('j8oc14010_wcs/138-3024-outer-65.json'), PosixPath('j8oc14010_wcs/138-3024-outer-70.json'), PosixPath('j8oc14010_wcs/138-3024-outer-75.json')]
142-301 [PosixPath('j8oc01010_wcs/142-301-inner-60.json'), PosixPath('j8oc01010_wcs/142-301-inner-65.json'), PosixPath('j8oc01010_wcs/142-301-inner-70.json'), PosixPath('j8oc01010_wcs/142-301-inner-75.json'), PosixPath('j8oc01010_wcs/142-301-outer-60.json'), PosixPath('j8oc01010_wcs/142-301-outer-65.json'), PosixPath('j8oc01010_wcs/142-301-outer-70.json'), PosixPath('j8oc01010_wcs/142-301-outer-75.json')]
154-225 [PosixPath('j8oc01010_wcs/154-225-inner-60.json'), PosixPath('j8oc01010_wcs/154-225-inner-65.json'), PosixPath('j8oc01010_wcs/154-225-inner-70.json'), PosixPath('j8oc01010_wcs/154-225-inner-75.json'), PosixPath('j8oc01010_wcs/154-225-outer-60.json'), PosixPath('j8oc01010_wcs/154-225-outer-65.json'), PosixPath('j8oc01010_wcs/154-225-outer-70.json'), PosixPath('j8oc01010_wcs/154-225-outer-75.json')]
154-240 [PosixPath('j8oc01010_wcs/154-240-inner-60.json'), PosixPath('j8oc01010_wcs/154-240-inner-65.json'), PosixPath('j8oc01010_wcs/154-240-inner-70.json'), PosixPath('j8oc01010_wcs/154-240-inner-75.json')]
158-323 [PosixPath('j8oc01010_wcs/158-323-inner-60.json'), PosixPath('j8oc01010_wcs/158-323-inner-65.json'), PosixPath('j8oc01010_wcs/158-323-inner-70.json'), PosixPath('j8oc01010_wcs/158-323-inner-75.json'), PosixPath('j8oc01010_wcs/158-323-outer-60.json'), PosixPath('j8oc01010_wcs/158-323-outer-65.json'), PosixPath('j8oc01010_wcs/158-323-outer-70.json'), PosixPath('j8oc01010_wcs/158-323-outer-75.json')]
159-221 [PosixPath('j8oc01010_wcs/159-221-inner-60.json'), PosixPath('j8oc01010_wcs/159-221-inner-65.json'), PosixPath('j8oc01010_wcs/159-221-inner-70.json'), PosixPath('j8oc01010_wcs/159-221-inner-75.json')]
161-324 [PosixPath('j8oc01010_wcs/161-324-inner-60.json'), PosixPath('j8oc01010_wcs/161-324-inner-65.json'), PosixPath('j8oc01010_wcs/161-324-inner-70.json'), PosixPath('j8oc01010_wcs/161-324-inner-75.json'), PosixPath('j8oc01010_wcs/161-324-outer-60.json'), PosixPath('j8oc01010_wcs/161-324-outer-65.json'), PosixPath('j8oc01010_wcs/161-324-outer-70.json'), PosixPath('j8oc01010_wcs/161-324-outer-75.json')]
163-222 [PosixPath('j8oc01010_wcs/163-222-inner-60.json'), PosixPath('j8oc01010_wcs/163-222-inner-65.json'), PosixPath('j8oc01010_wcs/163-222-inner-70.json'), PosixPath('j8oc01010_wcs/163-222-inner-75.json'), PosixPath('j8oc01010_wcs/163-222-outer-70.json'), PosixPath('j8oc01010_wcs/163-222-outer-75.json')]
163-317 [PosixPath('j8oc01010_wcs/163-317-inner-60.json'), PosixPath('j8oc01010_wcs/163-317-inner-65.json'), PosixPath('j8oc01010_wcs/163-317-inner-70.json'), PosixPath('j8oc01010_wcs/163-317-inner-75.json'), PosixPath('j8oc01010_wcs/163-317-outer-60.json'), PosixPath('j8oc01010_wcs/163-317-outer-65.json'), PosixPath('j8oc01010_wcs/163-317-outer-70.json'), PosixPath('j8oc01010_wcs/163-317-outer-75.json')]
165-235 [PosixPath('j8oc01010_wcs/165-235-inner-60.json'), PosixPath('j8oc01010_wcs/165-235-inner-65.json'), PosixPath('j8oc01010_wcs/165-235-inner-70.json'), PosixPath('j8oc01010_wcs/165-235-inner-75.json'), PosixPath('j8oc01010_wcs/165-235-outer-60.json'), PosixPath('j8oc01010_wcs/165-235-outer-65.json'), PosixPath('j8oc01010_wcs/165-235-outer-70.json'), PosixPath('j8oc01010_wcs/165-235-outer-75.json')]
166-316 [PosixPath('j8oc01010_wcs/166-316-inner-60.json'), PosixPath('j8oc01010_wcs/166-316-inner-65.json'), PosixPath('j8oc01010_wcs/166-316-inner-70.json'), PosixPath('j8oc01010_wcs/166-316-inner-75.json'), PosixPath('j8oc01010_wcs/166-316-outer-60.json'), PosixPath('j8oc01010_wcs/166-316-outer-65.json'), PosixPath('j8oc01010_wcs/166-316-outer-70.json'), PosixPath('j8oc01010_wcs/166-316-outer-75.json')]
167-317 []
168-326 [PosixPath('j8oc01010_wcs/168-326-inner-60.json'), PosixPath('j8oc01010_wcs/168-326-inner-65.json'), PosixPath('j8oc01010_wcs/168-326-inner-70.json'), PosixPath('j8oc01010_wcs/168-326-inner-75.json'), PosixPath('j8oc01010_wcs/168-326-outer-60.json'), PosixPath('j8oc01010_wcs/168-326-outer-65.json'), PosixPath('j8oc01010_wcs/168-326-outer-70.json'), PosixPath('j8oc01010_wcs/168-326-outer-75.json')]
168-328 [PosixPath('j8oc01010_wcs/168-328-inner-60.json'), PosixPath('j8oc01010_wcs/168-328-inner-65.json'), PosixPath('j8oc01010_wcs/168-328-inner-70.json'), PosixPath('j8oc01010_wcs/168-328-outer-60.json'), PosixPath('j8oc01010_wcs/168-328-outer-65.json'), PosixPath('j8oc01010_wcs/168-328-outer-70.json'), PosixPath('j8oc01010_wcs/168-328-outer-75.json')]
169-338 []
170-249 [PosixPath('j8oc01010_wcs/170-249-outer-60.json'), PosixPath('j8oc01010_wcs/170-249-outer-65.json'), PosixPath('j8oc01010_wcs/170-249-outer-70.json'), PosixPath('j8oc01010_wcs/170-249-outer-75.json')]
177-341 [PosixPath('j8oc01010_wcs/177-341-inner-70.json'), PosixPath('j8oc01010_wcs/177-341-inner-75.json'), PosixPath('j8oc01010_wcs/177-341-outer-60.json'), PosixPath('j8oc01010_wcs/177-341-outer-65.json'), PosixPath('j8oc01010_wcs/177-341-outer-70.json'), PosixPath('j8oc01010_wcs/177-341-outer-75.json')]
178-258 [PosixPath('j8oc01010_wcs/178-258-inner-60.json'), PosixPath('j8oc01010_wcs/178-258-inner-65.json'), PosixPath('j8oc01010_wcs/178-258-inner-70.json'), PosixPath('j8oc01010_wcs/178-258-inner-75.json'), PosixPath('j8oc01010_wcs/178-258-outer-60.json'), PosixPath('j8oc01010_wcs/178-258-outer-65.json'), PosixPath('j8oc01010_wcs/178-258-outer-70.json'), PosixPath('j8oc01010_wcs/178-258-outer-75.json')]
180-331 [PosixPath('j8oc01010_wcs/180-331-inner-60.json'), PosixPath('j8oc01010_wcs/180-331-inner-65.json'), PosixPath('j8oc01010_wcs/180-331-inner-70.json'), PosixPath('j8oc01010_wcs/180-331-inner-75.json'), PosixPath('j8oc01010_wcs/180-331-outer-60.json'), PosixPath('j8oc01010_wcs/180-331-outer-65.json'), PosixPath('j8oc01010_wcs/180-331-outer-70.json'), PosixPath('j8oc01010_wcs/180-331-outer-75.json')]
189-329 [PosixPath('j8oc01010_wcs/189-329-inner-60.json'), PosixPath('j8oc01010_wcs/189-329-inner-65.json'), PosixPath('j8oc01010_wcs/189-329-inner-70.json'), PosixPath('j8oc01010_wcs/189-329-inner-75.json'), PosixPath('j8oc01010_wcs/189-329-outer-60.json'), PosixPath('j8oc01010_wcs/189-329-outer-65.json'), PosixPath('j8oc01010_wcs/189-329-outer-70.json'), PosixPath('j8oc01010_wcs/189-329-outer-75.json')]
203-3039 [PosixPath('j8oc14010_wcs/203-3039-outer-60.json'), PosixPath('j8oc14010_wcs/203-3039-outer-65.json'), PosixPath('j8oc14010_wcs/203-3039-outer-70.json'), PosixPath('j8oc14010_wcs/203-3039-outer-75.json')]
206-043 [PosixPath('j8oc02010_wcs/206-043-inner-60.json'), PosixPath('j8oc02010_wcs/206-043-inner-65.json'), PosixPath('j8oc02010_wcs/206-043-inner-70.json'), PosixPath('j8oc02010_wcs/206-043-inner-75.json'), PosixPath('j8oc02010_wcs/206-043-outer-60.json'), PosixPath('j8oc02010_wcs/206-043-outer-65.json'), PosixPath('j8oc02010_wcs/206-043-outer-70.json'), PosixPath('j8oc02010_wcs/206-043-outer-75.json')]
261-3018 [PosixPath('j8oc07010_wcs/261-3018-inner-60.json'), PosixPath('j8oc07010_wcs/261-3018-inner-65.json'), PosixPath('j8oc07010_wcs/261-3018-inner-70.json'), PosixPath('j8oc07010_wcs/261-3018-inner-75.json'), PosixPath('j8oc07010_wcs/261-3018-outer-60.json'), PosixPath('j8oc07010_wcs/261-3018-outer-65.json'), PosixPath('j8oc07010_wcs/261-3018-outer-70.json'), PosixPath('j8oc07010_wcs/261-3018-outer-75.json')]
305-811 [PosixPath('j8oc07010_wcs/305-811-inner-60.json'), PosixPath('j8oc07010_wcs/305-811-inner-65.json'), PosixPath('j8oc07010_wcs/305-811-inner-70.json'), PosixPath('j8oc07010_wcs/305-811-inner-75.json'), PosixPath('j8oc07010_wcs/305-811-outer-60.json'), PosixPath('j8oc07010_wcs/305-811-outer-65.json'), PosixPath('j8oc07010_wcs/305-811-outer-70.json'), PosixPath('j8oc07010_wcs/305-811-outer-75.json')]
308-3036 [PosixPath('j8oc08010_wcs/308-3036-inner-60.json'), PosixPath('j8oc08010_wcs/308-3036-inner-65.json'), PosixPath('j8oc08010_wcs/308-3036-inner-70.json'), PosixPath('j8oc08010_wcs/308-3036-inner-75.json'), PosixPath('j8oc08010_wcs/308-3036-outer-60.json'), PosixPath('j8oc08010_wcs/308-3036-outer-65.json'), PosixPath('j8oc08010_wcs/308-3036-outer-70.json'), PosixPath('j8oc08010_wcs/308-3036-outer-75.json')]
344-3020 [PosixPath('j8oc08010_wcs/344-3020-inner-60.json'), PosixPath('j8oc08010_wcs/344-3020-inner-65.json'), PosixPath('j8oc08010_wcs/344-3020-inner-70.json'), PosixPath('j8oc08010_wcs/344-3020-inner-75.json'), PosixPath('j8oc08010_wcs/344-3020-outer-60.json'), PosixPath('j8oc08010_wcs/344-3020-outer-65.json'), PosixPath('j8oc08010_wcs/344-3020-outer-70.json'), PosixPath('j8oc08010_wcs/344-3020-outer-75.json')]
362-3137 [PosixPath('j8oc08010_wcs/362-3137-inner-60.json'), PosixPath('j8oc08010_wcs/362-3137-inner-65.json'), PosixPath('j8oc08010_wcs/362-3137-inner-75.json'), PosixPath('j8oc08010_wcs/362-3137-outer-60.json'), PosixPath('j8oc08010_wcs/362-3137-outer-65.json'), PosixPath('j8oc08010_wcs/362-3137-outer-70.json'), PosixPath('j8oc08010_wcs/362-3137-outer-75.json')]
4285-458 []
4417-653 [PosixPath('j8oc17010_wcs/4417-653-inner-45.json'), PosixPath('j8oc17010_wcs/4417-653-inner-50.json'), PosixPath('j8oc17010_wcs/4417-653-inner-55.json'), PosixPath('j8oc17010_wcs/4417-653-inner-60.json'), PosixPath('j8oc17010_wcs/4417-653-inner-65.json'), PosixPath('j8oc17010_wcs/4417-653-inner-70.json'), PosixPath('j8oc17010_wcs/4417-653-inner-75.json'), PosixPath('j8oc17010_wcs/4417-653-inner-80.json'), PosixPath('j8oc17010_wcs/4417-653-outer-45.json'), PosixPath('j8oc17010_wcs/4417-653-outer-50.json'), PosixPath('j8oc17010_wcs/4417-653-outer-55.json'), PosixPath('j8oc17010_wcs/4417-653-outer-60.json'), PosixPath('j8oc17010_wcs/4417-653-outer-65.json'), PosixPath('j8oc17010_wcs/4417-653-outer-70.json'), PosixPath('j8oc17010_wcs/4417-653-outer-75.json'), PosixPath('j8oc17010_wcs/4417-653-outer-80.json')]
4468-605 [PosixPath('j8oc17010_wcs/4468-605-outer-60.json'), PosixPath('j8oc17010_wcs/4468-605-outer-65.json'), PosixPath('j8oc17010_wcs/4468-605-outer-70.json'), PosixPath('j8oc17010_wcs/4468-605-outer-75.json')]
4491-627 [PosixPath('j8oc17010_wcs/4491-627-inner-45.json'), PosixPath('j8oc17010_wcs/4491-627-inner-50.json'), PosixPath('j8oc17010_wcs/4491-627-inner-55.json'), PosixPath('j8oc17010_wcs/4491-627-inner-60.json'), PosixPath('j8oc17010_wcs/4491-627-inner-65.json'), PosixPath('j8oc17010_wcs/4491-627-inner-70.json'), PosixPath('j8oc17010_wcs/4491-627-inner-75.json'), PosixPath('j8oc17010_wcs/4491-627-inner-80.json'), PosixPath('j8oc17010_wcs/4491-627-outer-45.json'), PosixPath('j8oc17010_wcs/4491-627-outer-50.json'), PosixPath('j8oc17010_wcs/4491-627-outer-55.json'), PosixPath('j8oc17010_wcs/4491-627-outer-60.json'), PosixPath('j8oc17010_wcs/4491-627-outer-65.json'), PosixPath('j8oc17010_wcs/4491-627-outer-70.json'), PosixPath('j8oc17010_wcs/4491-627-outer-75.json'), PosixPath('j8oc17010_wcs/4491-627-outer-80.json')]
4505-336 [PosixPath('j8oc17010_wcs/4505-336-inner-45.json'), PosixPath('j8oc17010_wcs/4505-336-inner-50.json'), PosixPath('j8oc17010_wcs/4505-336-inner-55.json'), PosixPath('j8oc17010_wcs/4505-336-inner-60.json'), PosixPath('j8oc17010_wcs/4505-336-inner-65.json'), PosixPath('j8oc17010_wcs/4505-336-inner-70.json'), PosixPath('j8oc17010_wcs/4505-336-inner-75.json'), PosixPath('j8oc17010_wcs/4505-336-inner-80.json'), PosixPath('j8oc17010_wcs/4505-336-outer-45.json'), PosixPath('j8oc17010_wcs/4505-336-outer-50.json'), PosixPath('j8oc17010_wcs/4505-336-outer-55.json'), PosixPath('j8oc17010_wcs/4505-336-outer-60.json'), PosixPath('j8oc17010_wcs/4505-336-outer-65.json'), PosixPath('j8oc17010_wcs/4505-336-outer-70.json'), PosixPath('j8oc17010_wcs/4505-336-outer-75.json'), PosixPath('j8oc17010_wcs/4505-336-outer-80.json')]
4520-419 [PosixPath('j8oc17010_wcs/4520-419-inner-45.json'), PosixPath('j8oc17010_wcs/4520-419-inner-50.json'), PosixPath('j8oc17010_wcs/4520-419-inner-55.json'), PosixPath('j8oc17010_wcs/4520-419-inner-60.json'), PosixPath('j8oc17010_wcs/4520-419-inner-65.json'), PosixPath('j8oc17010_wcs/4520-419-inner-70.json'), PosixPath('j8oc17010_wcs/4520-419-inner-75.json'), PosixPath('j8oc17010_wcs/4520-419-inner-80.json'), PosixPath('j8oc17010_wcs/4520-419-outer-45.json'), PosixPath('j8oc17010_wcs/4520-419-outer-50.json'), PosixPath('j8oc17010_wcs/4520-419-outer-55.json'), PosixPath('j8oc17010_wcs/4520-419-outer-60.json'), PosixPath('j8oc17010_wcs/4520-419-outer-65.json'), PosixPath('j8oc17010_wcs/4520-419-outer-70.json'), PosixPath('j8oc17010_wcs/4520-419-outer-75.json'), PosixPath('j8oc17010_wcs/4520-419-outer-80.json')]
4531-628 [PosixPath('j8oc16010_wcs/4531-628-inner-60.json'), PosixPath('j8oc16010_wcs/4531-628-inner-65.json'), PosixPath('j8oc16010_wcs/4531-628-inner-70.json'), PosixPath('j8oc16010_wcs/4531-628-inner-75.json'), PosixPath('j8oc16010_wcs/4531-628-outer-60.json'), PosixPath('j8oc16010_wcs/4531-628-outer-65.json'), PosixPath('j8oc16010_wcs/4531-628-outer-70.json'), PosixPath('j8oc16010_wcs/4531-628-outer-75.json')]
4550-659 [PosixPath('j8oc16010_wcs/4550-659-inner-60.json'), PosixPath('j8oc16010_wcs/4550-659-inner-65.json'), PosixPath('j8oc16010_wcs/4550-659-inner-70.json'), PosixPath('j8oc16010_wcs/4550-659-inner-75.json'), PosixPath('j8oc16010_wcs/4550-659-outer-60.json'), PosixPath('j8oc16010_wcs/4550-659-outer-65.json'), PosixPath('j8oc16010_wcs/4550-659-outer-70.json'), PosixPath('j8oc16010_wcs/4550-659-outer-75.json')]
4578-251 [PosixPath('j8oc09010_wcs/4578-251-inner-60.json'), PosixPath('j8oc09010_wcs/4578-251-inner-65.json'), PosixPath('j8oc09010_wcs/4578-251-inner-70.json'), PosixPath('j8oc09010_wcs/4578-251-inner-75.json'), PosixPath('j8oc09010_wcs/4578-251-outer-60.json'), PosixPath('j8oc09010_wcs/4578-251-outer-65.json'), PosixPath('j8oc09010_wcs/4578-251-outer-70.json'), PosixPath('j8oc09010_wcs/4578-251-outer-75.json')]
4582-635 [PosixPath('j8oc16010_wcs/4582-635-inner-60.json'), PosixPath('j8oc16010_wcs/4582-635-inner-65.json'), PosixPath('j8oc16010_wcs/4582-635-inner-70.json'), PosixPath('j8oc16010_wcs/4582-635-inner-75.json'), PosixPath('j8oc16010_wcs/4582-635-outer-60.json'), PosixPath('j8oc16010_wcs/4582-635-outer-65.json'), PosixPath('j8oc16010_wcs/4582-635-outer-70.json'), PosixPath('j8oc16010_wcs/4582-635-outer-75.json')]
LL1 [PosixPath('j8oc01010_wcs/LL1-inner-60.json'), PosixPath('j8oc01010_wcs/LL1-inner-65.json'), PosixPath('j8oc01010_wcs/LL1-inner-70.json'), PosixPath('j8oc01010_wcs/LL1-inner-75.json'), PosixPath('j8oc01010_wcs/LL1-outer-60.json'), PosixPath('j8oc01010_wcs/LL1-outer-65.json'), PosixPath('j8oc01010_wcs/LL1-outer-70.json'), PosixPath('j8oc01010_wcs/LL1-outer-75.json')]
LL2 [PosixPath('j8oc18010_wcs/LL2-inner-65.json'), PosixPath('j8oc18010_wcs/LL2-inner-70.json'), PosixPath('j8oc18010_wcs/LL2-inner-75.json'), PosixPath('j8oc18010_wcs/LL2-outer-60.json'), PosixPath('j8oc18010_wcs/LL2-outer-65.json'), PosixPath('j8oc18010_wcs/LL2-outer-70.json'), PosixPath('j8oc18010_wcs/LL2-outer-75.json')]
LL3 [PosixPath('j8oc17010_wcs/LL3-inner-60.json'), PosixPath('j8oc17010_wcs/LL3-inner-65.json'), PosixPath('j8oc17010_wcs/LL3-inner-70.json'), PosixPath('j8oc17010_wcs/LL3-inner-75.json'), PosixPath('j8oc17010_wcs/LL3-outer-60.json'), PosixPath('j8oc17010_wcs/LL3-outer-65.json'), PosixPath('j8oc17010_wcs/LL3-outer-70.json'), PosixPath('j8oc17010_wcs/LL3-outer-75.json')]
LL4 [PosixPath('j8oc24010_wcs/LL4-inner-60.json'), PosixPath('j8oc24010_wcs/LL4-inner-65.json'), PosixPath('j8oc24010_wcs/LL4-inner-70.json'), PosixPath('j8oc24010_wcs/LL4-inner-75.json'), PosixPath('j8oc24010_wcs/LL4-outer-60.json'), PosixPath('j8oc24010_wcs/LL4-outer-65.json'), PosixPath('j8oc24010_wcs/LL4-outer-70.json'), PosixPath('j8oc24010_wcs/LL4-outer-75.json')]
LL5 [PosixPath('j8oc07010_wcs/LL5-inner-60.json'), PosixPath('j8oc07010_wcs/LL5-inner-65.json'), PosixPath('j8oc07010_wcs/LL5-inner-70.json'), PosixPath('j8oc07010_wcs/LL5-inner-75.json'), PosixPath('j8oc07010_wcs/LL5-outer-60.json'), PosixPath('j8oc07010_wcs/LL5-outer-65.json'), PosixPath('j8oc07010_wcs/LL5-outer-70.json'), PosixPath('j8oc07010_wcs/LL5-outer-75.json')]
LL6 [PosixPath('j8oc08010_wcs/LL6-inner-60.json'), PosixPath('j8oc08010_wcs/LL6-inner-65.json'), PosixPath('j8oc08010_wcs/LL6-inner-70.json'), PosixPath('j8oc08010_wcs/LL6-inner-75.json'), PosixPath('j8oc08010_wcs/LL6-outer-60.json'), PosixPath('j8oc08010_wcs/LL6-outer-65.json'), PosixPath('j8oc08010_wcs/LL6-outer-70.json'), PosixPath('j8oc08010_wcs/LL6-outer-75.json')]
LL7 [PosixPath('wfpc2_64_f656n/LL7-inner-60.json'), PosixPath('wfpc2_64_f656n/LL7-inner-65.json'), PosixPath('wfpc2_64_f656n/LL7-inner-70.json'), PosixPath('wfpc2_64_f656n/LL7-inner-75.json'), PosixPath('wfpc2_64_f656n/LL7-outer-60.json'), PosixPath('wfpc2_64_f656n/LL7-outer-65.json'), PosixPath('wfpc2_64_f656n/LL7-outer-70.json'), PosixPath('wfpc2_64_f656n/LL7-outer-75.json')]
w000-400 [PosixPath('j8oc09010_wcs/w000-400-inner-60.json'), PosixPath('j8oc09010_wcs/w000-400-inner-65.json'), PosixPath('j8oc09010_wcs/w000-400-inner-70.json'), PosixPath('j8oc09010_wcs/w000-400-inner-75.json'), PosixPath('j8oc09010_wcs/w000-400-outer-60.json'), PosixPath('j8oc09010_wcs/w000-400-outer-65.json'), PosixPath('j8oc09010_wcs/w000-400-outer-70.json'), PosixPath('j8oc09010_wcs/w000-400-outer-75.json')]
w005-514 [PosixPath('j8oc01010_wcs/w005-514-inner-60.json'), PosixPath('j8oc01010_wcs/w005-514-inner-65.json'), PosixPath('j8oc01010_wcs/w005-514-inner-70.json'), PosixPath('j8oc01010_wcs/w005-514-inner-75.json'), PosixPath('j8oc01010_wcs/w005-514-outer-60.json'), PosixPath('j8oc01010_wcs/w005-514-outer-65.json'), PosixPath('j8oc01010_wcs/w005-514-outer-70.json'), PosixPath('j8oc01010_wcs/w005-514-outer-75.json'), PosixPath('j8oc16010_wcs/w005-514-inner-60.json'), PosixPath('j8oc16010_wcs/w005-514-inner-65.json'), PosixPath('j8oc16010_wcs/w005-514-inner-70.json'), PosixPath('j8oc16010_wcs/w005-514-inner-75.json'), PosixPath('j8oc16010_wcs/w005-514-outer-60.json'), PosixPath('j8oc16010_wcs/w005-514-outer-65.json'), PosixPath('j8oc16010_wcs/w005-514-outer-70.json'), PosixPath('j8oc16010_wcs/w005-514-outer-75.json')]
w012-407 [PosixPath('j8oc01010_wcs/w012-407-inner-70.json'), PosixPath('j8oc01010_wcs/w012-407-inner-75.json'), PosixPath('j8oc01010_wcs/w012-407-outer-60.json'), PosixPath('j8oc01010_wcs/w012-407-outer-65.json'), PosixPath('j8oc01010_wcs/w012-407-outer-70.json'), PosixPath('j8oc01010_wcs/w012-407-outer-75.json')]
w014-414 [PosixPath('j8oc01010_wcs/w014-414-inner-60.json'), PosixPath('j8oc01010_wcs/w014-414-inner-65.json'), PosixPath('j8oc01010_wcs/w014-414-inner-70.json'), PosixPath('j8oc01010_wcs/w014-414-inner-75.json'), PosixPath('j8oc01010_wcs/w014-414-outer-65.json'), PosixPath('j8oc01010_wcs/w014-414-outer-70.json'), PosixPath('j8oc01010_wcs/w014-414-outer-75.json')]
w030-524 [PosixPath('j8oc01010_wcs/w030-524-inner-60.json'), PosixPath('j8oc01010_wcs/w030-524-inner-65.json'), PosixPath('j8oc01010_wcs/w030-524-inner-70.json'), PosixPath('j8oc01010_wcs/w030-524-inner-75.json'), PosixPath('j8oc01010_wcs/w030-524-outer-60.json'), PosixPath('j8oc01010_wcs/w030-524-outer-65.json'), PosixPath('j8oc01010_wcs/w030-524-outer-70.json'), PosixPath('j8oc01010_wcs/w030-524-outer-75.json')]
w044-527 [PosixPath('j8oc01010_wcs/w044-527-outer-75.json')]
w069-601 [PosixPath('j8oc01010_wcs/w069-601-inner-60.json'), PosixPath('j8oc01010_wcs/w069-601-inner-65.json'), PosixPath('j8oc01010_wcs/w069-601-inner-70.json'), PosixPath('j8oc01010_wcs/w069-601-inner-75.json'), PosixPath('j8oc01010_wcs/w069-601-outer-60.json'), PosixPath('j8oc01010_wcs/w069-601-outer-65.json'), PosixPath('j8oc01010_wcs/w069-601-outer-70.json'), PosixPath('j8oc01010_wcs/w069-601-outer-75.json')]
w073-227 [PosixPath('j8oc01010_wcs/w073-227-inner-60.json'), PosixPath('j8oc01010_wcs/w073-227-inner-65.json'), PosixPath('j8oc01010_wcs/w073-227-inner-70.json'), PosixPath('j8oc01010_wcs/w073-227-inner-75.json'), PosixPath('j8oc01010_wcs/w073-227-outer-60.json'), PosixPath('j8oc01010_wcs/w073-227-outer-65.json'), PosixPath('j8oc01010_wcs/w073-227-outer-70.json'), PosixPath('j8oc01010_wcs/w073-227-outer-75.json')]
w266-558 [PosixPath('j8oc06010_wcs/w266-558-inner-60.json'), PosixPath('j8oc06010_wcs/w266-558-inner-65.json'), PosixPath('j8oc06010_wcs/w266-558-inner-70.json'), PosixPath('j8oc06010_wcs/w266-558-inner-75.json'), PosixPath('j8oc06010_wcs/w266-558-outer-60.json'), PosixPath('j8oc06010_wcs/w266-558-outer-65.json'), PosixPath('j8oc06010_wcs/w266-558-outer-70.json'), PosixPath('j8oc06010_wcs/w266-558-outer-75.json')]
#+end_example


*** Sources with missing \Lambda measurements
+ Results of trying to find alatude for arcs
+ Four squares show status:
  1. Filled if \Lambda_{out} on at least one side
  2. Filled if \Lambda_{out} on both sides
  3. Filled if \Lambda_{in} on at least one side
  4. Filled if \Lambda_{in} on both sides
+ Sources where the folder is blank don't have any planitude measurements either
  + In many cases, this is due to insufficient points in arc
+ Some sources seem to have changed since the ~*-images.pdf~ was generated
  + For instance, LL4 has much fewer points in the outer arc, and so no longer reaches \pm90 deg
  + Presumably, we removed them for what seemed like a good reason - possibly the thought that the arc wings are affected by the jet
+ [ ] Other region files for arc shapes
  + [[file:~/Work/Bowshocks/Jorge/bowshock-shape/LL-shapes-2017/][bowshock-shape/LL-shapes-2017/]] from Paper IV of the main bow shock project
    + I ended up using the ridge of the arc (brightness maximum), instead of inner or outer boundary
    + These are files like ~new-LL4-ridge.reg~, which have a lot of points
  + Fits to infrared images of LV arcs in [[id:150F249D-1943-457D-AEC6-2A9189EF5160][Second opinion on proplyd shapes]]
    + We should maybe use some of these, since we manage to get alatude for LV1, LV3, and LV4
    + LV5, as traced, does not get to 90 deg, but looking at the image it seems that the arc can be traced further
    + These all use the ridge method, since the MIR resolution is not good enough to clearly see the inner and outer boundaries
    + *UPDATE* [2020-09-11 Fri] I have copied these from the ~bowshock-shape~ project to the [[file:j8oc01010_wcs/]] folder
      + They are named lv1, lv2, etc, rather than 167-317, so in order to use them I will make a dictionary of name mappings
        + Example: [[file:j8oc01010_wcs/lv1-smith-2005-forma.reg]]
      + Also, the arc is by the ridge method and they use the "x" point type
      + So, I will add "ridge" to the list of arc types

|   Object | Group | Folder         | 2020-08-11 | 2020-08-18 | 2020-08-25 |
|----------+-------+----------------+------------+------------+------------|
|  022-635 | W     | j8oc16010_wcs  | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   |
|  041-637 | W     | j8oc16010_wcs  | ⬛⬜⬜⬜   | ⬛⬜⬜⬜   | ⬛⬜⬛⬜ X |
|  042-628 | W     | j8oc16010_wcs  | ⬛⬜⬜⬜   | ⬛⬜⬜⬜   | ⬛⬜⬛⬜ X |
|  049-143 | NW    | j8oc09010_wcs  | ⬜⬜⬜⬜   | ⬜⬜⬛⬜   | ⬜⬜⬛⬜ X |
|  051-024 | NW    | j8oc09010_wcs  | ⬜⬜⬜⬜   | ⬛⬜⬛⬜   | ⬛⬜⬛⬜   |
| 066-3251 | S     |                | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   |
|  072-134 | NW    | j8oc09010_wcs  | ⬛⬜⬜⬜   | ⬛⬛⬛⬛   | ⬛⬛⬛⬛   |
|  074-229 | NW    | j8oc01010_wcs  | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   |
|  101-233 | NW    | j8oc01010_wcs  | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   |
|  102-157 | NW    | j8oc01010_wcs  | ⬛⬜⬜⬜   | ⬛⬜⬛⬛   | ⬛⬜⬛⬛   |
|  106-245 | NW    | j8oc01010_wcs  | ⬛⬜⬛⬜   | ⬛⬛⬛⬜   | ⬛⬛⬛⬜   |
|  109-246 | NW    | j8oc01010_wcs  | ⬛⬜⬛⬜   | ⬛⬜⬛⬜   | ⬛⬛⬛⬛ X |
| 116-3101 | S     | j8oc14010_wcs  | ⬛⬜⬜⬜   | ⬛⬜⬛⬜   | ⬛⬜⬛⬜   |
| 119-3155 | S     | j8oc14010_wcs  | ⬛⬜⬛⬜   | ⬛⬜⬛⬜   | ⬛⬜⬛⬜   |
|  124-131 | NW    |                | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   |
| 136-3057 | S     | j8oc14010_wcs  | ⬛⬛⬛⬜   | ⬛⬛⬛⬜   | ⬛⬛⬛⬛ X |
| 138-3024 | S     | j8oc14010_wcs  | ⬜⬜⬜⬜   | ⬜⬜⬛⬜   | ⬜⬜⬛⬜   |
|  142-301 | N     | j8oc01010_wcs  | ⬛⬜⬛⬜   | ⬛⬜⬛⬜   | ⬛⬜⬛⬛ X |
|  154-225 | N     | j8oc01010_wcs  | ⬜⬜⬜⬜   | ⬛⬜⬜⬜   | ⬛⬜⬜⬜   |
|  154-240 | N     |                | ⬜⬜⬛⬜   | ⬜⬜⬛⬜   | ⬜⬜⬛⬜   |
|  158-323 | LV    | j8oc01010_wcs  | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   |
|  159-221 | N     |                | ⬜⬜⬛⬜   | ⬜⬜⬛⬜   | ⬜⬜⬛⬜   |
|  161-324 | LV    | j8oc01010_wcs  | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   |
|  163-222 | N     | j8oc01010_wcs  | ⬛⬜⬜⬜   | ⬛⬜⬜⬜   | ⬛⬜⬜⬜   |
|  163-317 | LV    | j8oc01010_wcs  | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   |
|  165-235 | N     | j8oc01010_wcs  | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   |
|  166-316 | LV    | j8oc01010_wcs  | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   |
|  167-317 | LV    |                | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   |
|  168-326 | LV    | j8oc01010_wcs  | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   |
|  168-328 | LV    | j8oc01010_wcs  | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   |
|  169-338 | SE    |                | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   |
|  170-249 | N     | j8oc01010_wcs  | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   |
|  177-341 | SE    | j8oc01010_wcs  | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   |
|  178-258 | N     | j8oc01010_wcs  | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬜⬜⬛⬜ X |
|  180-331 | SE    | j8oc01010_wcs  | ⬛⬜⬛⬜   | ⬛⬜⬛⬜   | ⬛⬜⬛⬜   |
|  189-329 | SE    | j8oc01010_wcs  | ⬛⬜⬛⬜   | ⬛⬜⬛⬜   | ⬛⬜⬛⬛ X |
| 203-3039 | S     | j8oc14010_wcs  | ⬛⬜⬜⬜   | ⬛⬜⬜⬜   | ⬛⬛⬛⬜ X |
|  206-043 | NW    | j8oc02010_wcs  | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   |
| 261-3018 | S     | j8oc07010_wcs  | ⬛⬜⬜⬜   | ⬛⬜⬜⬜   | ⬛⬜⬛⬛ X |
|  305-811 | S     | j8oc07010_wcs  | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   |
| 308-3036 | S     | j8oc08010_wcs  | ⬛⬜⬛⬜   | ⬛⬜⬛⬜   | ⬛⬜⬛⬛ X |
| 344-3020 | S     | j8oc08010_wcs  | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬛⬜⬛⬜ X |
| 362-3137 | S     | j8oc08010_wcs  | ⬜⬜⬛⬜   | ⬜⬜⬛⬜   | ⬜⬜⬛⬜   |
| 4285-458 | W     |                | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   |
| 4417-653 | W     | j8oc17010_wcs  | ⬛⬛⬛⬛   | ⬛⬛⬛⬛   | ⬛⬛⬛⬛   |
| 4468-605 | W     | j8oc17010_wcs  | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬛⬛⬛⬜ X |
| 4491-627 | W     | j8oc17010_wcs  | ⬛⬜⬜⬜   | ⬛⬜⬜⬜   | ⬛⬜⬛⬜ X |
| 4505-336 | W     | j8oc17010_wcs  | ⬛⬜⬛⬜   | ⬛⬜⬛⬜   | ⬛⬜⬛⬜   |
| 4520-419 | W     | j8oc17010_wcs  | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   |
| 4531-628 | W     | j8oc16010_wcs  | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   |
| 4550-659 | W     | j8oc16010_wcs  | ⬛⬜⬛⬜   | ⬛⬜⬛⬜   | ⬛⬜⬛⬜   |
| 4578-251 | W     | j8oc09010_wcs  | ⬛⬜⬜⬜   | ⬛⬜⬜⬜   | ⬛⬛⬛⬛ X |
| 4582-635 | W     | j8oc16010_wcs  | ⬛⬜⬜⬜   | ⬛⬜⬜⬜   | ⬛⬜⬜⬜   |
|      LL1 | W     | j8oc01010_wcs  | ⬛⬛⬛⬛   | ⬛⬛⬛⬛   | ⬛⬛⬛⬛   |
|      LL2 | W     | j8oc18010_wcs  | ⬛⬜⬛⬜   | ⬛⬛⬛⬛   | ⬛⬛⬛⬛   |
|      LL3 | W     | j8oc17010_wcs  | ⬛⬜⬜⬜   | ⬛⬛⬛⬛   | ⬛⬛⬛⬛   |
|      LL4 | W     | j8oc24010_wcs  | ⬜⬜⬜⬜   | ⬛⬛⬛⬛   | ⬛⬛⬛⬛   |
|      LL5 | S     | j8oc07010_wcs  | ⬛⬛⬛⬜   | ⬛⬛⬛⬜   | ⬛⬛⬛⬛ X |
|      LL6 | S     | j8oc08010_wcs  | ⬛⬜⬛⬜   | ⬛⬛⬛⬛   | ⬛⬛⬛⬛   |
|      LL7 | S     | wfpc2_64_f656n | ⬜⬜⬜⬜   | ⬛⬛⬛⬜   | ⬛⬛⬛⬜   |
| w000-400 | W     | j8oc09010_wcs  | ⬛⬛⬛⬛   | ⬛⬛⬛⬛   | ⬛⬛⬛⬛   |
| w005-514 | W     | j8oc01010_wcs  | ⬛⬜⬛⬜   | ⬛⬜⬛⬜   | ⬛⬜⬛⬜   |
| w012-407 | W     | j8oc01010_wcs  | ⬛⬜⬛⬜   | ⬛⬜⬛⬜   | ⬛⬜⬛⬜   |
| w014-414 | W     | j8oc01010_wcs  | ⬛⬜⬛⬜   | ⬛⬜⬛⬜   | ⬛⬜⬛⬜   |
| w030-524 | W     | j8oc01010_wcs  | ⬛⬛⬜⬜   | ⬛⬛⬜⬜   | ⬛⬛⬜⬜   |
| w044-527 | W     | j8oc01010_wcs  | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   | ⬜⬜⬜⬜   |
| w069-601 | W     | j8oc01010_wcs  | ⬛⬜⬛⬜   | ⬛⬜⬛⬜   | ⬛⬜⬛⬜   |
| w073-227 | NW    | j8oc01010_wcs  | ⬛⬜⬜⬜   | ⬛⬜⬛⬜   | ⬛⬜⬛⬜   |
| w266-558 | S     | j8oc06010_wcs  | ⬛⬜⬜⬜   | ⬛⬜⬜⬜   | ⬛⬜⬜⬜   |



*** Test using circle_fit on a individual sources
#+begin_src python :eval no :tangle apply-circle-fit/test-circle-fit.py
  import sys
  from pathlib import Path
  from circle_fit import circle_fit

  try:
      SOURCE_DIR = Path(sys.argv[1])
      SOURCE_ID = sys.argv[2]
      FITS_ID = sys.argv[3]
  except IndexError:
      sys.exit(f"Usage: {sys.argv[0]} SOURCE_ID FITS_ID")


  circle_fit.PT_STAR = "o"
  for arc, circle_fit.PT_ARC in ["outer", "x"], ["inner", "+"]:
      for delta_theta in 45, 50, 55, 60, 65, 70, 75, 80:
          plotfile = SOURCE_DIR / f"{SOURCE_ID}-{arc}-{delta_theta:02d}.pdf"
          print('#### '*10)
          print("Creating", plotfile)
          circle_fit.plot_solution(
              SOURCE_DIR / f"{SOURCE_ID}-forma.reg",
              SOURCE_DIR / f"{SOURCE_ID}-{FITS_ID}-extract.fits",
              plotfile,
              delta_theta=delta_theta, maxiter=5)
#+end_src


+ I try it on the four new sources from Bally field 17
+ In general it works well
  + Stable results with low variation for \delta\theta = 60 \to 75 degrees at least
+ Some comments
  + 4491-627 has very few points in inner arc, so that many different values of \delta\theta fit to the same point set
  + Also, the inner arc is not traced far enough to get \Lambda - but maybe this is not possible

#+begin_src sh :results output verbatim
  export PYTHONPATH=.
  time python apply-circle-fit/test-circle-fit.py j8oc17010_wcs 4417-653 Bally_17
#+end_src

#+RESULTS:
#+begin_example
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4417-653-outer-45.pdf
CircleFit(Pi = 6.169, Lambda = 3.368, dLambda = 0.019)
CircleFit(Pi = 3.603, Lambda = 3.173, dLambda = -0.027)
CircleFit(Pi = 3.603, Lambda = 3.173, dLambda = -0.027)
CircleFit(Pi = 3.603, Lambda = 3.173, dLambda = -0.027)
CircleFit(Pi = 3.603, Lambda = 3.173, dLambda = -0.027)
CircleFit(Pi = 3.603, Lambda = 3.173, dLambda = -0.027)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4417-653-outer-50.pdf
CircleFit(Pi = 6.169, Lambda = 3.368, dLambda = 0.019)
CircleFit(Pi = 3.603, Lambda = 3.173, dLambda = -0.027)
CircleFit(Pi = 3.603, Lambda = 3.173, dLambda = -0.027)
CircleFit(Pi = 3.603, Lambda = 3.173, dLambda = -0.027)
CircleFit(Pi = 3.603, Lambda = 3.173, dLambda = -0.027)
CircleFit(Pi = 3.603, Lambda = 3.173, dLambda = -0.027)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4417-653-outer-55.pdf
CircleFit(Pi = 6.169, Lambda = 3.368, dLambda = 0.019)
CircleFit(Pi = 3.701, Lambda = 3.175, dLambda = -0.029)
CircleFit(Pi = 3.701, Lambda = 3.175, dLambda = -0.029)
CircleFit(Pi = 3.701, Lambda = 3.175, dLambda = -0.029)
CircleFit(Pi = 3.701, Lambda = 3.175, dLambda = -0.029)
CircleFit(Pi = 3.701, Lambda = 3.175, dLambda = -0.029)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4417-653-outer-60.pdf
CircleFit(Pi = 6.169, Lambda = 3.368, dLambda = 0.019)
CircleFit(Pi = 3.387, Lambda = 3.162, dLambda = -0.001)
CircleFit(Pi = 3.387, Lambda = 3.162, dLambda = -0.001)
CircleFit(Pi = 3.387, Lambda = 3.162, dLambda = -0.001)
CircleFit(Pi = 3.387, Lambda = 3.162, dLambda = -0.001)
CircleFit(Pi = 3.387, Lambda = 3.162, dLambda = -0.001)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4417-653-outer-65.pdf
CircleFit(Pi = 6.169, Lambda = 3.368, dLambda = 0.019)
CircleFit(Pi = 3.671, Lambda = 3.177, dLambda = 0.001)
CircleFit(Pi = 3.671, Lambda = 3.177, dLambda = 0.001)
CircleFit(Pi = 3.671, Lambda = 3.177, dLambda = 0.001)
CircleFit(Pi = 3.671, Lambda = 3.177, dLambda = 0.001)
CircleFit(Pi = 3.671, Lambda = 3.177, dLambda = 0.001)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4417-653-outer-70.pdf
CircleFit(Pi = 6.169, Lambda = 3.368, dLambda = 0.019)
CircleFit(Pi = 4.156, Lambda = 3.204, dLambda = 0.063)
CircleFit(Pi = 4.252, Lambda = 3.209, dLambda = 0.051)
CircleFit(Pi = 4.252, Lambda = 3.209, dLambda = 0.051)
CircleFit(Pi = 4.252, Lambda = 3.209, dLambda = 0.051)
CircleFit(Pi = 4.252, Lambda = 3.209, dLambda = 0.051)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4417-653-outer-75.pdf
CircleFit(Pi = 6.169, Lambda = 3.368, dLambda = 0.019)
CircleFit(Pi = 4.453, Lambda = 3.222, dLambda = 0.073)
CircleFit(Pi = 4.211, Lambda = 3.207, dLambda = 0.055)
CircleFit(Pi = 4.211, Lambda = 3.207, dLambda = 0.055)
CircleFit(Pi = 4.211, Lambda = 3.207, dLambda = 0.055)
CircleFit(Pi = 4.211, Lambda = 3.207, dLambda = 0.055)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4417-653-outer-80.pdf
CircleFit(Pi = 6.169, Lambda = 3.368, dLambda = 0.019)
CircleFit(Pi = 4.541, Lambda = 3.229, dLambda = 0.099)
CircleFit(Pi = 4.541, Lambda = 3.229, dLambda = 0.099)
CircleFit(Pi = 4.541, Lambda = 3.229, dLambda = 0.099)
CircleFit(Pi = 4.541, Lambda = 3.229, dLambda = 0.099)
CircleFit(Pi = 4.541, Lambda = 3.229, dLambda = 0.099)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4417-653-inner-45.pdf
CircleFit(Pi = 7.466, Lambda = 3.556, dLambda = -0.036)
CircleFit(Pi = 1.943, Lambda = 3.389, dLambda = -1.220)
CircleFit(Pi = 5.650, Lambda = 3.330, dLambda = -0.569)
CircleFit(Pi = 5.650, Lambda = 3.330, dLambda = -0.569)
CircleFit(Pi = 5.650, Lambda = 3.330, dLambda = -0.569)
CircleFit(Pi = 5.650, Lambda = 3.330, dLambda = -0.569)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4417-653-inner-50.pdf
CircleFit(Pi = 7.466, Lambda = 3.556, dLambda = -0.036)
CircleFit(Pi = 3.806, Lambda = 3.157, dLambda = -0.289)
CircleFit(Pi = 5.650, Lambda = 3.330, dLambda = -0.569)
CircleFit(Pi = 5.650, Lambda = 3.330, dLambda = -0.569)
CircleFit(Pi = 5.650, Lambda = 3.330, dLambda = -0.569)
CircleFit(Pi = 5.650, Lambda = 3.330, dLambda = -0.569)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4417-653-inner-55.pdf
CircleFit(Pi = 7.466, Lambda = 3.556, dLambda = -0.036)
CircleFit(Pi = 3.806, Lambda = 3.157, dLambda = -0.289)
CircleFit(Pi = 3.806, Lambda = 3.157, dLambda = -0.289)
CircleFit(Pi = 3.806, Lambda = 3.157, dLambda = -0.289)
CircleFit(Pi = 3.806, Lambda = 3.157, dLambda = -0.289)
CircleFit(Pi = 3.806, Lambda = 3.157, dLambda = -0.289)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4417-653-inner-60.pdf
CircleFit(Pi = 7.466, Lambda = 3.556, dLambda = -0.036)
CircleFit(Pi = 4.416, Lambda = 3.187, dLambda = -0.325)
CircleFit(Pi = 3.806, Lambda = 3.157, dLambda = -0.289)
CircleFit(Pi = 3.806, Lambda = 3.157, dLambda = -0.289)
CircleFit(Pi = 3.806, Lambda = 3.157, dLambda = -0.289)
CircleFit(Pi = 3.806, Lambda = 3.157, dLambda = -0.289)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4417-653-inner-65.pdf
CircleFit(Pi = 7.466, Lambda = 3.556, dLambda = -0.036)
CircleFit(Pi = 4.179, Lambda = 3.245, dLambda = -0.423)
CircleFit(Pi = 4.179, Lambda = 3.245, dLambda = -0.423)
CircleFit(Pi = 4.179, Lambda = 3.245, dLambda = -0.423)
CircleFit(Pi = 4.179, Lambda = 3.245, dLambda = -0.423)
CircleFit(Pi = 4.179, Lambda = 3.245, dLambda = -0.423)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4417-653-inner-70.pdf
CircleFit(Pi = 7.466, Lambda = 3.556, dLambda = -0.036)
CircleFit(Pi = 3.816, Lambda = 3.165, dLambda = -0.332)
CircleFit(Pi = 5.034, Lambda = 3.208, dLambda = -0.288)
CircleFit(Pi = 5.034, Lambda = 3.208, dLambda = -0.288)
CircleFit(Pi = 5.034, Lambda = 3.208, dLambda = -0.288)
CircleFit(Pi = 5.034, Lambda = 3.208, dLambda = -0.288)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4417-653-inner-75.pdf
CircleFit(Pi = 7.466, Lambda = 3.556, dLambda = -0.036)
CircleFit(Pi = 4.446, Lambda = 3.183, dLambda = -0.210)
CircleFit(Pi = 4.446, Lambda = 3.183, dLambda = -0.210)
CircleFit(Pi = 4.446, Lambda = 3.183, dLambda = -0.210)
CircleFit(Pi = 4.446, Lambda = 3.183, dLambda = -0.210)
CircleFit(Pi = 4.446, Lambda = 3.183, dLambda = -0.210)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4417-653-inner-80.pdf
CircleFit(Pi = 7.466, Lambda = 3.556, dLambda = -0.036)
CircleFit(Pi = 4.438, Lambda = 3.180, dLambda = -0.119)
CircleFit(Pi = 4.438, Lambda = 3.180, dLambda = -0.119)
CircleFit(Pi = 4.438, Lambda = 3.180, dLambda = -0.119)
CircleFit(Pi = 4.438, Lambda = 3.180, dLambda = -0.119)
CircleFit(Pi = 4.438, Lambda = 3.180, dLambda = -0.119)
#+end_example

#+begin_src sh :results output verbatim
  export PYTHONPATH=.
  time python apply-circle-fit/test-circle-fit.py j8oc17010_wcs 4491-627 Bally_17
#+end_src

#+RESULTS:
#+begin_example
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4491-627-outer-45.pdf
CircleFit(Pi = 2.396, Lambda = 1.574, dLambda = 0.393)
CircleFit(Pi = 2.035, Lambda = 1.530, dLambda = 0.369)
CircleFit(Pi = 1.992, Lambda = 1.525, dLambda = 0.365)
CircleFit(Pi = 1.992, Lambda = 1.525, dLambda = 0.365)
CircleFit(Pi = 1.992, Lambda = 1.525, dLambda = 0.365)
CircleFit(Pi = 1.992, Lambda = 1.525, dLambda = 0.365)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4491-627-outer-50.pdf
CircleFit(Pi = 2.396, Lambda = 1.574, dLambda = 0.393)
CircleFit(Pi = 1.992, Lambda = 1.525, dLambda = 0.365)
CircleFit(Pi = 1.992, Lambda = 1.525, dLambda = 0.365)
CircleFit(Pi = 1.992, Lambda = 1.525, dLambda = 0.365)
CircleFit(Pi = 1.992, Lambda = 1.525, dLambda = 0.365)
CircleFit(Pi = 1.992, Lambda = 1.525, dLambda = 0.365)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4491-627-outer-55.pdf
CircleFit(Pi = 2.396, Lambda = 1.574, dLambda = 0.393)
CircleFit(Pi = 1.992, Lambda = 1.525, dLambda = 0.365)
CircleFit(Pi = 1.992, Lambda = 1.525, dLambda = 0.365)
CircleFit(Pi = 1.992, Lambda = 1.525, dLambda = 0.365)
CircleFit(Pi = 1.992, Lambda = 1.525, dLambda = 0.365)
CircleFit(Pi = 1.992, Lambda = 1.525, dLambda = 0.365)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4491-627-outer-60.pdf
CircleFit(Pi = 2.396, Lambda = 1.574, dLambda = 0.393)
CircleFit(Pi = 1.926, Lambda = 1.529, dLambda = 0.371)
CircleFit(Pi = 1.926, Lambda = 1.529, dLambda = 0.371)
CircleFit(Pi = 1.926, Lambda = 1.529, dLambda = 0.371)
CircleFit(Pi = 1.926, Lambda = 1.529, dLambda = 0.371)
CircleFit(Pi = 1.926, Lambda = 1.529, dLambda = 0.371)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4491-627-outer-65.pdf
CircleFit(Pi = 2.396, Lambda = 1.574, dLambda = 0.393)
CircleFit(Pi = 1.926, Lambda = 1.529, dLambda = 0.371)
CircleFit(Pi = 1.926, Lambda = 1.529, dLambda = 0.371)
CircleFit(Pi = 1.926, Lambda = 1.529, dLambda = 0.371)
CircleFit(Pi = 1.926, Lambda = 1.529, dLambda = 0.371)
CircleFit(Pi = 1.926, Lambda = 1.529, dLambda = 0.371)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4491-627-outer-70.pdf
CircleFit(Pi = 2.396, Lambda = 1.574, dLambda = 0.393)
CircleFit(Pi = 2.254, Lambda = 1.545, dLambda = 0.373)
CircleFit(Pi = 1.926, Lambda = 1.529, dLambda = 0.371)
CircleFit(Pi = 1.926, Lambda = 1.529, dLambda = 0.371)
CircleFit(Pi = 1.926, Lambda = 1.529, dLambda = 0.371)
CircleFit(Pi = 1.926, Lambda = 1.529, dLambda = 0.371)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4491-627-outer-75.pdf
CircleFit(Pi = 2.396, Lambda = 1.574, dLambda = 0.393)
CircleFit(Pi = 2.254, Lambda = 1.545, dLambda = 0.373)
CircleFit(Pi = 2.254, Lambda = 1.545, dLambda = 0.373)
CircleFit(Pi = 2.254, Lambda = 1.545, dLambda = 0.373)
CircleFit(Pi = 2.254, Lambda = 1.545, dLambda = 0.373)
CircleFit(Pi = 2.254, Lambda = 1.545, dLambda = 0.373)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4491-627-outer-80.pdf
CircleFit(Pi = 2.396, Lambda = 1.574, dLambda = 0.393)
CircleFit(Pi = 2.254, Lambda = 1.545, dLambda = 0.373)
CircleFit(Pi = 2.254, Lambda = 1.545, dLambda = 0.373)
CircleFit(Pi = 2.254, Lambda = 1.545, dLambda = 0.373)
CircleFit(Pi = 2.254, Lambda = 1.545, dLambda = 0.373)
CircleFit(Pi = 2.254, Lambda = 1.545, dLambda = 0.373)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4491-627-inner-45.pdf
CircleFit(Pi = 1.595, Lambda = 1.241, dLambda = 0.069)
CircleFit(Pi = 160.137, Lambda = 1.349, dLambda = 0.075)
CircleFit(Pi = 160.137, Lambda = 1.349, dLambda = 0.075)
CircleFit(Pi = 160.137, Lambda = 1.349, dLambda = 0.075)
CircleFit(Pi = 160.137, Lambda = 1.349, dLambda = 0.075)
CircleFit(Pi = 160.137, Lambda = 1.349, dLambda = 0.075)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4491-627-inner-50.pdf
CircleFit(Pi = 1.595, Lambda = 1.241, dLambda = 0.069)
CircleFit(Pi = 160.137, Lambda = 1.349, dLambda = 0.075)
CircleFit(Pi = 160.137, Lambda = 1.349, dLambda = 0.075)
CircleFit(Pi = 160.137, Lambda = 1.349, dLambda = 0.075)
CircleFit(Pi = 160.137, Lambda = 1.349, dLambda = 0.075)
CircleFit(Pi = 160.137, Lambda = 1.349, dLambda = 0.075)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4491-627-inner-55.pdf
CircleFit(Pi = 1.595, Lambda = 1.241, dLambda = 0.069)
CircleFit(Pi = 2.242, Lambda = 1.294, dLambda = 0.072)
CircleFit(Pi = 2.242, Lambda = 1.294, dLambda = 0.072)
CircleFit(Pi = 2.242, Lambda = 1.294, dLambda = 0.072)
CircleFit(Pi = 2.242, Lambda = 1.294, dLambda = 0.072)
CircleFit(Pi = 2.242, Lambda = 1.294, dLambda = 0.072)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4491-627-inner-60.pdf
CircleFit(Pi = 1.595, Lambda = 1.241, dLambda = 0.069)
CircleFit(Pi = 2.242, Lambda = 1.294, dLambda = 0.072)
CircleFit(Pi = 2.242, Lambda = 1.294, dLambda = 0.072)
CircleFit(Pi = 2.242, Lambda = 1.294, dLambda = 0.072)
CircleFit(Pi = 2.242, Lambda = 1.294, dLambda = 0.072)
CircleFit(Pi = 2.242, Lambda = 1.294, dLambda = 0.072)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4491-627-inner-65.pdf
CircleFit(Pi = 1.595, Lambda = 1.241, dLambda = 0.069)
CircleFit(Pi = 2.028, Lambda = 1.283, dLambda = 0.071)
CircleFit(Pi = 2.028, Lambda = 1.283, dLambda = 0.071)
CircleFit(Pi = 2.028, Lambda = 1.283, dLambda = 0.071)
CircleFit(Pi = 2.028, Lambda = 1.283, dLambda = 0.071)
CircleFit(Pi = 2.028, Lambda = 1.283, dLambda = 0.071)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4491-627-inner-70.pdf
CircleFit(Pi = 1.595, Lambda = 1.241, dLambda = 0.069)
CircleFit(Pi = 2.028, Lambda = 1.283, dLambda = 0.071)
CircleFit(Pi = 2.028, Lambda = 1.283, dLambda = 0.071)
CircleFit(Pi = 2.028, Lambda = 1.283, dLambda = 0.071)
CircleFit(Pi = 2.028, Lambda = 1.283, dLambda = 0.071)
CircleFit(Pi = 2.028, Lambda = 1.283, dLambda = 0.071)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4491-627-inner-75.pdf
CircleFit(Pi = 1.595, Lambda = 1.241, dLambda = 0.069)
CircleFit(Pi = 2.028, Lambda = 1.283, dLambda = 0.071)
CircleFit(Pi = 2.028, Lambda = 1.283, dLambda = 0.071)
CircleFit(Pi = 2.028, Lambda = 1.283, dLambda = 0.071)
CircleFit(Pi = 2.028, Lambda = 1.283, dLambda = 0.071)
CircleFit(Pi = 2.028, Lambda = 1.283, dLambda = 0.071)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4491-627-inner-80.pdf
CircleFit(Pi = 1.595, Lambda = 1.241, dLambda = 0.069)
CircleFit(Pi = 1.595, Lambda = 1.241, dLambda = 0.069)
CircleFit(Pi = 1.595, Lambda = 1.241, dLambda = 0.069)
CircleFit(Pi = 1.595, Lambda = 1.241, dLambda = 0.069)
CircleFit(Pi = 1.595, Lambda = 1.241, dLambda = 0.069)
CircleFit(Pi = 1.595, Lambda = 1.241, dLambda = 0.069)
#+end_example


#+begin_src sh :results output verbatim
  export PYTHONPATH=.
  time python apply-circle-fit/test-circle-fit.py j8oc17010_wcs 4520-419 Bally_17
#+end_src

#+RESULTS:
#+begin_example
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4520-419-outer-45.pdf
CircleFit(Pi = 2.572, Lambda = 1.682, dLambda = -0.295)
CircleFit(Pi = 4.686, Lambda = 1.705, dLambda = -0.299)
CircleFit(Pi = 4.686, Lambda = 1.705, dLambda = -0.299)
CircleFit(Pi = 4.686, Lambda = 1.705, dLambda = -0.299)
CircleFit(Pi = 4.686, Lambda = 1.705, dLambda = -0.299)
CircleFit(Pi = 4.686, Lambda = 1.705, dLambda = -0.299)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4520-419-outer-50.pdf
CircleFit(Pi = 2.572, Lambda = 1.682, dLambda = -0.295)
CircleFit(Pi = 2.768, Lambda = 1.686, dLambda = -0.296)
CircleFit(Pi = 2.772, Lambda = 1.686, dLambda = -0.296)
CircleFit(Pi = 2.772, Lambda = 1.686, dLambda = -0.296)
CircleFit(Pi = 2.772, Lambda = 1.686, dLambda = -0.296)
CircleFit(Pi = 2.772, Lambda = 1.686, dLambda = -0.296)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4520-419-outer-55.pdf
CircleFit(Pi = 2.572, Lambda = 1.682, dLambda = -0.295)
CircleFit(Pi = 2.768, Lambda = 1.686, dLambda = -0.296)
CircleFit(Pi = 2.768, Lambda = 1.686, dLambda = -0.296)
CircleFit(Pi = 2.768, Lambda = 1.686, dLambda = -0.296)
CircleFit(Pi = 2.768, Lambda = 1.686, dLambda = -0.296)
CircleFit(Pi = 2.768, Lambda = 1.686, dLambda = -0.296)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4520-419-outer-60.pdf
CircleFit(Pi = 2.572, Lambda = 1.682, dLambda = -0.295)
CircleFit(Pi = 2.704, Lambda = 1.684, dLambda = -0.295)
CircleFit(Pi = 2.704, Lambda = 1.684, dLambda = -0.295)
CircleFit(Pi = 2.704, Lambda = 1.684, dLambda = -0.295)
CircleFit(Pi = 2.704, Lambda = 1.684, dLambda = -0.295)
CircleFit(Pi = 2.704, Lambda = 1.684, dLambda = -0.295)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4520-419-outer-65.pdf
CircleFit(Pi = 2.572, Lambda = 1.682, dLambda = -0.295)
CircleFit(Pi = 2.560, Lambda = 1.679, dLambda = -0.295)
CircleFit(Pi = 2.560, Lambda = 1.679, dLambda = -0.295)
CircleFit(Pi = 2.560, Lambda = 1.679, dLambda = -0.295)
CircleFit(Pi = 2.560, Lambda = 1.679, dLambda = -0.295)
CircleFit(Pi = 2.560, Lambda = 1.679, dLambda = -0.295)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4520-419-outer-70.pdf
CircleFit(Pi = 2.572, Lambda = 1.682, dLambda = -0.295)
CircleFit(Pi = 2.560, Lambda = 1.679, dLambda = -0.295)
CircleFit(Pi = 2.560, Lambda = 1.679, dLambda = -0.295)
CircleFit(Pi = 2.560, Lambda = 1.679, dLambda = -0.295)
CircleFit(Pi = 2.560, Lambda = 1.679, dLambda = -0.295)
CircleFit(Pi = 2.560, Lambda = 1.679, dLambda = -0.295)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4520-419-outer-75.pdf
CircleFit(Pi = 2.572, Lambda = 1.682, dLambda = -0.295)
CircleFit(Pi = 2.507, Lambda = 1.677, dLambda = -0.294)
CircleFit(Pi = 2.507, Lambda = 1.677, dLambda = -0.294)
CircleFit(Pi = 2.507, Lambda = 1.677, dLambda = -0.294)
CircleFit(Pi = 2.507, Lambda = 1.677, dLambda = -0.294)
CircleFit(Pi = 2.507, Lambda = 1.677, dLambda = -0.294)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4520-419-outer-80.pdf
CircleFit(Pi = 2.572, Lambda = 1.682, dLambda = -0.295)
CircleFit(Pi = 2.507, Lambda = 1.677, dLambda = -0.294)
CircleFit(Pi = 2.507, Lambda = 1.677, dLambda = -0.294)
CircleFit(Pi = 2.507, Lambda = 1.677, dLambda = -0.294)
CircleFit(Pi = 2.507, Lambda = 1.677, dLambda = -0.294)
CircleFit(Pi = 2.507, Lambda = 1.677, dLambda = -0.294)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4520-419-inner-45.pdf
CircleFit(Pi = 2.690, Lambda = 1.772, dLambda = -0.351)
CircleFit(Pi = 4.149, Lambda = 1.795, dLambda = -0.356)
CircleFit(Pi = 4.149, Lambda = 1.795, dLambda = -0.356)
CircleFit(Pi = 4.149, Lambda = 1.795, dLambda = -0.356)
CircleFit(Pi = 4.149, Lambda = 1.795, dLambda = -0.356)
CircleFit(Pi = 4.149, Lambda = 1.795, dLambda = -0.356)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4520-419-inner-50.pdf
CircleFit(Pi = 2.690, Lambda = 1.772, dLambda = -0.351)
CircleFit(Pi = 4.149, Lambda = 1.795, dLambda = -0.356)
CircleFit(Pi = 4.149, Lambda = 1.795, dLambda = -0.356)
CircleFit(Pi = 4.149, Lambda = 1.795, dLambda = -0.356)
CircleFit(Pi = 4.149, Lambda = 1.795, dLambda = -0.356)
CircleFit(Pi = 4.149, Lambda = 1.795, dLambda = -0.356)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4520-419-inner-55.pdf
CircleFit(Pi = 2.690, Lambda = 1.772, dLambda = -0.351)
CircleFit(Pi = 2.971, Lambda = 1.775, dLambda = -0.352)
CircleFit(Pi = 2.805, Lambda = 1.772, dLambda = -0.351)
CircleFit(Pi = 2.805, Lambda = 1.772, dLambda = -0.351)
CircleFit(Pi = 2.805, Lambda = 1.772, dLambda = -0.351)
CircleFit(Pi = 2.805, Lambda = 1.772, dLambda = -0.351)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4520-419-inner-60.pdf
CircleFit(Pi = 2.690, Lambda = 1.772, dLambda = -0.351)
CircleFit(Pi = 2.805, Lambda = 1.772, dLambda = -0.351)
CircleFit(Pi = 2.805, Lambda = 1.772, dLambda = -0.351)
CircleFit(Pi = 2.805, Lambda = 1.772, dLambda = -0.351)
CircleFit(Pi = 2.805, Lambda = 1.772, dLambda = -0.351)
CircleFit(Pi = 2.805, Lambda = 1.772, dLambda = -0.351)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4520-419-inner-65.pdf
CircleFit(Pi = 2.690, Lambda = 1.772, dLambda = -0.351)
CircleFit(Pi = 2.366, Lambda = 1.750, dLambda = -0.347)
CircleFit(Pi = 2.805, Lambda = 1.772, dLambda = -0.351)
CircleFit(Pi = 3.002, Lambda = 1.779, dLambda = -0.353)
CircleFit(Pi = 3.002, Lambda = 1.779, dLambda = -0.353)
CircleFit(Pi = 3.002, Lambda = 1.779, dLambda = -0.353)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4520-419-inner-70.pdf
CircleFit(Pi = 2.690, Lambda = 1.772, dLambda = -0.351)
CircleFit(Pi = 2.568, Lambda = 1.760, dLambda = -0.349)
CircleFit(Pi = 2.568, Lambda = 1.760, dLambda = -0.349)
CircleFit(Pi = 2.568, Lambda = 1.760, dLambda = -0.349)
CircleFit(Pi = 2.568, Lambda = 1.760, dLambda = -0.349)
CircleFit(Pi = 2.568, Lambda = 1.760, dLambda = -0.349)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4520-419-inner-75.pdf
CircleFit(Pi = 2.690, Lambda = 1.772, dLambda = -0.351)
CircleFit(Pi = 2.565, Lambda = 1.760, dLambda = -0.349)
CircleFit(Pi = 2.565, Lambda = 1.760, dLambda = -0.349)
CircleFit(Pi = 2.565, Lambda = 1.760, dLambda = -0.349)
CircleFit(Pi = 2.565, Lambda = 1.760, dLambda = -0.349)
CircleFit(Pi = 2.565, Lambda = 1.760, dLambda = -0.349)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4520-419-inner-80.pdf
CircleFit(Pi = 2.690, Lambda = 1.772, dLambda = -0.351)
CircleFit(Pi = 2.565, Lambda = 1.760, dLambda = -0.349)
CircleFit(Pi = 2.565, Lambda = 1.760, dLambda = -0.349)
CircleFit(Pi = 2.565, Lambda = 1.760, dLambda = -0.349)
CircleFit(Pi = 2.565, Lambda = 1.760, dLambda = -0.349)
CircleFit(Pi = 2.565, Lambda = 1.760, dLambda = -0.349)
#+end_example


#+begin_src sh :results output verbatim
  export PYTHONPATH=.
  time python apply-circle-fit/test-circle-fit.py j8oc17010_wcs 4505-336 Bally_17
#+end_src

#+RESULTS:
#+begin_example
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4505-336-outer-45.pdf
CircleFit(Pi = 5.199, Lambda = 2.031, dLambda = -0.929)
CircleFit(Pi = 1.951, Lambda = 1.477, dLambda = -0.430)
CircleFit(Pi = 1.869, Lambda = 1.465, dLambda = -0.420)
CircleFit(Pi = 1.869, Lambda = 1.465, dLambda = -0.420)
CircleFit(Pi = 1.869, Lambda = 1.465, dLambda = -0.420)
CircleFit(Pi = 1.869, Lambda = 1.465, dLambda = -0.420)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4505-336-outer-50.pdf
CircleFit(Pi = 5.199, Lambda = 2.031, dLambda = -0.929)
CircleFit(Pi = 1.951, Lambda = 1.477, dLambda = -0.430)
CircleFit(Pi = 1.797, Lambda = 1.465, dLambda = -0.420)
CircleFit(Pi = 1.797, Lambda = 1.465, dLambda = -0.420)
CircleFit(Pi = 1.797, Lambda = 1.465, dLambda = -0.420)
CircleFit(Pi = 1.797, Lambda = 1.465, dLambda = -0.420)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4505-336-outer-55.pdf
CircleFit(Pi = 5.199, Lambda = 2.031, dLambda = -0.929)
CircleFit(Pi = 1.951, Lambda = 1.477, dLambda = -0.430)
CircleFit(Pi = 1.797, Lambda = 1.465, dLambda = -0.420)
CircleFit(Pi = 1.797, Lambda = 1.465, dLambda = -0.420)
CircleFit(Pi = 1.797, Lambda = 1.465, dLambda = -0.420)
CircleFit(Pi = 1.797, Lambda = 1.465, dLambda = -0.420)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4505-336-outer-60.pdf
CircleFit(Pi = 5.199, Lambda = 2.031, dLambda = -0.929)
CircleFit(Pi = 2.074, Lambda = 1.494, dLambda = -0.443)
CircleFit(Pi = 1.797, Lambda = 1.465, dLambda = -0.420)
CircleFit(Pi = 1.797, Lambda = 1.465, dLambda = -0.420)
CircleFit(Pi = 1.797, Lambda = 1.465, dLambda = -0.420)
CircleFit(Pi = 1.797, Lambda = 1.465, dLambda = -0.420)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4505-336-outer-65.pdf
CircleFit(Pi = 5.199, Lambda = 2.031, dLambda = -0.929)
CircleFit(Pi = 2.208, Lambda = 1.513, dLambda = -0.460)
CircleFit(Pi = 1.951, Lambda = 1.477, dLambda = -0.430)
CircleFit(Pi = 1.951, Lambda = 1.477, dLambda = -0.430)
CircleFit(Pi = 1.951, Lambda = 1.477, dLambda = -0.430)
CircleFit(Pi = 1.951, Lambda = 1.477, dLambda = -0.430)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4505-336-outer-70.pdf
CircleFit(Pi = 5.199, Lambda = 2.031, dLambda = -0.929)
CircleFit(Pi = 2.208, Lambda = 1.513, dLambda = -0.460)
CircleFit(Pi = 1.951, Lambda = 1.477, dLambda = -0.430)
CircleFit(Pi = 1.951, Lambda = 1.477, dLambda = -0.430)
CircleFit(Pi = 1.951, Lambda = 1.477, dLambda = -0.430)
CircleFit(Pi = 1.951, Lambda = 1.477, dLambda = -0.430)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4505-336-outer-75.pdf
CircleFit(Pi = 5.199, Lambda = 2.031, dLambda = -0.929)
CircleFit(Pi = 2.434, Lambda = 1.549, dLambda = -0.491)
CircleFit(Pi = 2.074, Lambda = 1.494, dLambda = -0.443)
CircleFit(Pi = 1.951, Lambda = 1.477, dLambda = -0.430)
CircleFit(Pi = 1.951, Lambda = 1.477, dLambda = -0.430)
CircleFit(Pi = 1.951, Lambda = 1.477, dLambda = -0.430)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4505-336-outer-80.pdf
CircleFit(Pi = 5.199, Lambda = 2.031, dLambda = -0.929)
CircleFit(Pi = 2.434, Lambda = 1.549, dLambda = -0.491)
CircleFit(Pi = 2.208, Lambda = 1.513, dLambda = -0.460)
CircleFit(Pi = 2.208, Lambda = 1.513, dLambda = -0.460)
CircleFit(Pi = 2.208, Lambda = 1.513, dLambda = -0.460)
CircleFit(Pi = 2.208, Lambda = 1.513, dLambda = -0.460)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4505-336-inner-45.pdf
CircleFit(Pi = 12.878, Lambda = 3.002, dLambda = -1.715)
CircleFit(Pi = 4.068, Lambda = 1.776, dLambda = -0.589)
CircleFit(Pi = 5.167, Lambda = 1.787, dLambda = -0.597)
CircleFit(Pi = 5.167, Lambda = 1.787, dLambda = -0.597)
CircleFit(Pi = 5.167, Lambda = 1.787, dLambda = -0.597)
CircleFit(Pi = 5.167, Lambda = 1.787, dLambda = -0.597)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4505-336-inner-50.pdf
CircleFit(Pi = 12.878, Lambda = 3.002, dLambda = -1.715)
CircleFit(Pi = 4.068, Lambda = 1.776, dLambda = -0.589)
CircleFit(Pi = 5.167, Lambda = 1.787, dLambda = -0.597)
CircleFit(Pi = 5.167, Lambda = 1.787, dLambda = -0.597)
CircleFit(Pi = 5.167, Lambda = 1.787, dLambda = -0.597)
CircleFit(Pi = 5.167, Lambda = 1.787, dLambda = -0.597)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4505-336-inner-55.pdf
CircleFit(Pi = 12.878, Lambda = 3.002, dLambda = -1.715)
CircleFit(Pi = 4.416, Lambda = 1.794, dLambda = -0.606)
CircleFit(Pi = 4.416, Lambda = 1.794, dLambda = -0.606)
CircleFit(Pi = 4.416, Lambda = 1.794, dLambda = -0.606)
CircleFit(Pi = 4.416, Lambda = 1.794, dLambda = -0.606)
CircleFit(Pi = 4.416, Lambda = 1.794, dLambda = -0.606)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4505-336-inner-60.pdf
CircleFit(Pi = 12.878, Lambda = 3.002, dLambda = -1.715)
CircleFit(Pi = 4.416, Lambda = 1.794, dLambda = -0.606)
CircleFit(Pi = 4.416, Lambda = 1.794, dLambda = -0.606)
CircleFit(Pi = 4.416, Lambda = 1.794, dLambda = -0.606)
CircleFit(Pi = 4.416, Lambda = 1.794, dLambda = -0.606)
CircleFit(Pi = 4.416, Lambda = 1.794, dLambda = -0.606)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4505-336-inner-65.pdf
CircleFit(Pi = 12.878, Lambda = 3.002, dLambda = -1.715)
CircleFit(Pi = 2.804, Lambda = 1.724, dLambda = -0.566)
CircleFit(Pi = 4.416, Lambda = 1.794, dLambda = -0.606)
CircleFit(Pi = 4.416, Lambda = 1.794, dLambda = -0.606)
CircleFit(Pi = 4.416, Lambda = 1.794, dLambda = -0.606)
CircleFit(Pi = 4.416, Lambda = 1.794, dLambda = -0.606)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4505-336-inner-70.pdf
CircleFit(Pi = 12.878, Lambda = 3.002, dLambda = -1.715)
CircleFit(Pi = 2.804, Lambda = 1.724, dLambda = -0.566)
CircleFit(Pi = 4.416, Lambda = 1.794, dLambda = -0.606)
CircleFit(Pi = 4.416, Lambda = 1.794, dLambda = -0.606)
CircleFit(Pi = 4.416, Lambda = 1.794, dLambda = -0.606)
CircleFit(Pi = 4.416, Lambda = 1.794, dLambda = -0.606)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4505-336-inner-75.pdf
CircleFit(Pi = 12.878, Lambda = 3.002, dLambda = -1.715)
CircleFit(Pi = 2.804, Lambda = 1.724, dLambda = -0.566)
CircleFit(Pi = 4.416, Lambda = 1.794, dLambda = -0.606)
CircleFit(Pi = 4.416, Lambda = 1.794, dLambda = -0.606)
CircleFit(Pi = 4.416, Lambda = 1.794, dLambda = -0.606)
CircleFit(Pi = 4.416, Lambda = 1.794, dLambda = -0.606)
#### #### #### #### #### #### #### #### #### #### 
Creating j8oc17010_wcs/4505-336-inner-80.pdf
CircleFit(Pi = 12.878, Lambda = 3.002, dLambda = -1.715)
CircleFit(Pi = 3.401, Lambda = 1.805, dLambda = -0.627)
CircleFit(Pi = 2.804, Lambda = 1.724, dLambda = -0.566)
CircleFit(Pi = 2.804, Lambda = 1.724, dLambda = -0.566)
CircleFit(Pi = 2.804, Lambda = 1.724, dLambda = -0.566)
CircleFit(Pi = 2.804, Lambda = 1.724, dLambda = -0.566)
#+end_example


*** DONE Test import from the submodule
CLOSED: [2020-08-04 Tue 20:45]
#+begin_src python :results output
from circle_fit import circle_fit
help(circle_fit.plot_solution)
#+end_src

#+RESULTS:
: Help on function plot_solution in module circle_fit.circle_fit:
: 
: plot_solution(region_filename, fits_filename, plotfile, delta_theta, vmin=2.8, vmax=3.5, sigma=2.0, resample=False, resample_fraction=0.5, verbose=False, maxiter=3, remove_sip_kwds_from_header=True)
:     Iteratively fit circle to bow and plot the result.
: 

** [3/3] Next steps for Luis Ángel

*** DONE Finish tracing the arcs
CLOSED: [2013-11-12 Tue 09:15]
*** DONE Determine radius of curvature
CLOSED: [2013-11-15 Fri 11:20]
*** DONE Measure surface brightnesses
CLOSED: [2014-11-24 Mon 09:20]

** DONE Determinando la forma de los arcos
CLOSED: [2014-11-24 Mon 09:20]
:LOGBOOK:
CLOCK: [2013-09-19 Thu 19:27]--[2013-10-07 Mon 09:47] => 422:20
:END:

*** Trazando los arcos
+ Este se hace con ds9
  + Estrella: =Region->Shape->Point->Circle=
  + Exterior: =Region->Shape->Point->X=
  + Interior: =Region->Shape->Point->Cross=
+ Se guardan las regiones en archivos =*-forma.reg=
  + Por ejemplo, =072-134-forma.reg=
  + En coordenados WCS, FK5, HMS

    
*** Procesando los arcos

**** DONE Etapa 1: Encontrar R0 y PA de cada arco
CLOSED: [2013-09-19 Thu 19:35]
+ Este se hace con [[file:programas/find-xy-shell.py][programas/find-xy-shell.py]]
+ Escribe archivos de la forma =*-xy.json=
  + Por ejemplo, =072-134-xy.json=

    
**** DONE Etapa 2: Resumir todos los objetos en una tabla
CLOSED: [2013-09-26 Thu 10:13]


**** Problemas encontrados

***** DONE 136-3057
CLOSED: [2013-09-26 Thu 11:14]
+ campo 14
+ [X] PA_in muy diferente
  + Arreglado por agregar puntos extras al choque interior
+ [X] R_out, R_in muy grandes
  + realmente es grande
***** DONE 344-3020
CLOSED: [2013-10-03 Thu 10:31]
+ campo 08
+ R_in negativo
+ Muy débil y tiene jet que sale al este-noreste
+ Restringimos los arcos a ángulos pequeños respeto al eje para evitar las regiones posiblemente afectadas por el jet

***** DONE 041-637
CLOSED: [2013-10-03 Thu 10:39]
+ campo 16
+ R_out < R_in
+ Agregamos más puntos al arco interior para resolver el problema
***** DONE 066-3251
CLOSED: [2013-10-03 Thu 10:56]
+ campo 14
+ muy grande (corregimos esto)
+ Muestra el arco exterio solamente, y es muy débil

*** Objetos problemáticos
Unos objetos son más complicados.  Por ejemplo, que necesita más de dos arcos para describirlos

**** 051-024
This has detached inner shell and outer shells, with a gap between them
**** 4578-251
This might have 3 arcs.  On the other hand, the innermost one may just be a diffraction artefact

** Buena descripción de los números OW
Este viene del =README= de la tabla de Ricci: http://vizier.cfa.harvard.edu/viz-bin/Cat?J/AJ/136/2136

: Note (G1): Sources identified as <[RRS2008] NNNN-NNNN> in Simbad:
:    * NNNN-NNN  : MSSs-MSS   (position: 5 3M SS.s -5 2M SS)
:    * NNN-NNN   : SSs-MSS    (position: 5 35 SS.s -5 2M SS)
:    * NNN-NNNN  : SSs-MMSS   (position: 5 35 SS.s -5 MM SS)
:    * NNNN-NNNN : MSSs-MMSS  (position: 5 3M SS.s -5 MM SS)

** Fixing coordinates of WFC mosaic
+ Plan is to check each Bally field by hand in ds9
+ Use an RGB image to load:
  + Red: Bally image
  + Green: Robberto image
  + Blue: WFC mosaic
+ Use the "WCS Parameters" panel to make adjustments to the WFC coordinates
  + Only change the CRPIX parameters
    + Original values: CRPIX1 = 1642.6, CRPIX2 = 2441.3
  + Check each corner of each Bally field
+ Bally 01:
  + E corner:
    + coordinates: 5:35:18.654 -5:23:13.88
    + CRPIX1 = 1643, CRPIX2 = 2442
  + N corner
    + coordinates: 5:35:10.560 -5:21:56.47
    + CRPIX1 = 1648, CRPIX2 = 2442
  + W corner
    + coordinates 5:34:59.553 -5:24:00.19
    + CRPIX1 = 1649.5, CRPIX2 = 2438.5
  + S corner
    + coordinates  5:35:06.596 -5:26:50.87
    + CRPIX1 = 1646.5, CRPIX2 = 2436
  + CENTER
    + coordinates  5:35:12.593 -5:23:44.06
    + CRPIX1 = 1645, CRPIX2 = 2440
+ Bally 02:
  + SW
    + coordinates  5:35:17.209 -5:21:31.59
    + CRPIX1 = 1646, CRPIX2 = 2443
  + W corner
    + coordinates  5:35:12.804 -5:20:43.48
    + CRPIX1 = 1647, CRPIX2 = 2443.5
  + S corner (NO SHIFT)
    + coordinates  5:35:19.204 -5:22:50.59
    + CRPIX1 = 1642.6, CRPIX2 = 2441.3
+ Bally 06
  + E corner
    + coordinates  5:35:26.348 -5:25:40.19
    + CRPIX1 = 1641.5, CRPIX2 = 2436
  + N corner
    + coordinates  5:35:20.458 -5:23:29.72




** Fixing the coordinates of the Bally images

*** Comparing source positions
:LOGBOOK:
CLOCK: [2013-11-14 Thu 11:12]--[2013-11-14 Thu 13:45] =>  2:33
- Note taken on [2013-11-14 Thu 11:11] \\
  Actually, it does work well enough.  Accuracy of 2 or 3 pixels
- Note taken on [2013-11-14 Thu 09:49] \\
  No, this does not work so well - go back to doing this by hand
:END:
+ [[file:~/Work/Bowshocks/Jorge/bowshock-shape/read-shapes-LL/find-bally-offsets.py][Script]] to calculate the offsets
+ [[file:~/Work/Bowshocks/Jorge/bowshock-shape/read-shapes-LL/plot-bally-offsets.py][Another script]] to plot the offsets
+ There is quite a lot of dispersion in the offsets
  + Both within a field and between fields
  + Some fields appear to share a common median offset:
    + 01, 16, 14, (17, 06, 24?) all have [-1.0, 0.5] (or more or less)
  + But others are inconsistent:
    + 07, 08 are around [-2.0, 0.0] (but with large scatter)
    + 09 is around [-0.8, -0.2] (compact)
    + 02 is around [0.0, 0.0] (also compact)
    + 18 is in a world of its own at [0.5, 1.0], but there is only 1 source
**** DONE Checking each field
CLOSED: [2013-11-14 Thu 16:13]
+ [X] 01
+ [X] 02
+ [X] 09
+ [X] 24
+ [X] 07  
+ [X] 17
+ [X] 18
+ [X] 16
+ [X] 14
+ [X] 09
+ [X] 08

  
*** Aligning images by hand
:LOGBOOK:
CLOCK: [2013-11-14 Thu 09:50]--[2013-11-14 Thu 11:11] =>  1:21
CLOCK: [2013-09-05 Thu 12:34]--[2013-09-06 Fri 08:53] => 20:19
:END:
+ Hopefully a simple shift will suffice
#+name: bally-corrections 
| Original           |      x |      y |        RA |        Dec | Fix |
| j8oc01010_drz.fits | 2074.0 | 2010.0 | 83.777118 | -5.4114893 |   1 |

#+name: fix-bally-wcs
#+BEGIN_SRC python :var table=bally-corrections :dir ~/Work/OrionTreasury/Bally-ACS :results output
import astropy.io.fits as pyfits
for infile, x, y, ra, dec, dofix in table[1:]:
    if int(dofix) == 1:
        hdu = pyfits.open(infile)["SCI"]
        hdu.header.update(crpix1=float(x), crpix2=float(y), crval1=float(ra), crval2=float(dec))
        outfile = infile.replace("_drz", "_wcs")
        hdu.writeto(outfile, clobber=True)
#+END_SRC

#+name: bally-corrections-2021
| Original           |         x |        y |         RA |        Dec | Fix |
| j8oc03010_drz.fits | 885.68776 | 602.6489 | 83.7924446 | -5.3391411 |   1 |


#+call: fix-bally-wcs(table=bally-corrections-2021)

#+RESULTS:

** Buscar objetos LL adicionales
El mosaico de Robberto cubre una área mayor que las observaciones de BR2001.  Es posible que hay más objetos para descubrir. 

*** Two LL objects in M8 - the Lagoon
+ See Arias et al (2008)
  + http://adsabs.harvard.edu/abs/2006MNRAS.366..739A
+ In the Hourglass central region of the nebula
*** An LL object in Carina
     CLOCK: [2012-02-27 Mon 21:51]--[2012-02-27 Mon 22:01] =>  0:10

+ \cite{Smith:2010} find a object in the Carina Nebula (HH 1012) that looks identical to the LL objects.  See their Fig 14.
+ There is also the object HHc-9 (see their Fig 24), which they say is a jet bowshock, but it looks to me like it might be a LL bow too.  However, there is no central star to be seen, which is rather odd. 


#+BEGIN_SRC bibtex
  
  @article{Smith:2010,
    Abstract =     {We report the discovery of new Herbig-Haro (HH) jets
                    in the Carina Nebula, and we discuss the
                    protostellar outflow activity of a young OB
                    association. These are the first results of an
                    Halpha imaging survey of Carina conducted with the
                    Hubble Space Telescope (HST)/Advanced Camera for
                    Surveys. Adding to the one previously known example
                    (HH 666), we detect 21 new HH jets, plus 17 new
                    candidate jets, ranging in length from 0.005 to
                    3pc. Using the Halpha emission measure to estimate
                    jet densities, we derive jet mass-loss rates ranging
                    from 8 × 10-9 to ~10-6Msolaryr-1, but a comparison
                    to the distribution of jet mass-loss rates in Orion
                    suggests that we may be missing a large fraction of
                    the jets below 10-8Msolaryr-1. A key qualitative
                    result is that even some of the smallest dark
                    globules with sizes of <~1 arcsec (0.01pc) are
                    active sites of ongoing star formation because we
                    see HH jets emerging from them, and that these offer
                    potential analogues to the cradle of our Solar
                    system because of their proximity to dozens of
                    imminent supernovae that will enrich them with
                    radioactive nuclides like 60Fe. Although most
                    proplyd candidates identified from ground-based data
                    are dark cometary globules, HST images now reveal
                    proplyd structures in the core of the Tr 14 cluster,
                    only 0.1-0.2 pc from several extreme O-type
                    stars. Throughout Carina, some HH jets have axes
                    bent away from nearby massive stars, while others
                    show no bend, and still others are bent toward the
                    massive stars. These jet morphologies serve as `wind
                    socks' strong photoevaporative flows can shape the
                    jets, competing with the direct winds and radiation
                    from massive stars. We find no clear tendency for
                    jets to be aligned perpendicular to the axes of dust
                    pillars. Finally, even allowing for a large number
                    of jets that may escape detection, we find that HH
                    jets are negligible to the global turbulence of the
                    surrounding region, which is driven by massive star
                    feedback.  Based on observations made with the
                    NASA/ESA Hubble Space Telescope, obtained at the
                    Space Telescope Science Institute, which is operated
                    by the Association of Universities for Research in
                    Astronomy, Inc., under NASA contract NAS5-26555.
                    E-mail: nathans@astro.berkeley.edu},
    Adsnote =      {Provided by the SAO/NASA Astrophysics Data System},
    Adsurl =       {http://adsabs.harvard.edu/abs/2010MNRAS.405.1153S},
    Archiveprefix ={arXiv},
    Author =       {{Smith}, N. and {Bally}, J. and {Walborn}, N.~R.},
    Date-Added =   {2012-02-28 03:16:39 +0000},
    Date-Modified ={2012-02-28 03:16:39 +0000},
    Doi =          {10.1111/j.1365-2966.2010.16520.x},
    Eprint =       {1002.4898},
    Journal =      {\mnras},
    Keywords =     {stars: formation, stars: pre-main-sequence, ISM:
                    Herbig-Haro objects, ISM: individual: NGC 3372, ISM:
                    individual: NGC 3324, ISM: jets and outflows},
    Month =        jun,
    Pages =        {1153-1186},
    Primaryclass = {astro-ph.SR},
    Title =        {{HST/ACS H{$\alpha$} imaging of the Carina Nebula:
                    outflow activity traced by irradiated Herbig-Haro
                    Jets}},
    Volume =       405,
    Year =         2010,
    Bdsk-Url-1 =   {http://dx.doi.org/10.1111/j.1365-2966.2010.16520.x}
  }
  
#+END_SRC

*** A new LL object: LL 261-3018!
      CLOCK: [2012-02-27 Mon 20:45]--[2012-02-27 Mon 21:00] =>  0:15
+ I just found a new object while looking at the Bally 2006 paper!
  + It is along the southern side of the HH 502 jet
    + Same RA as knot S6 (boxes 18, 19): 05 35 26.1
    + Nearly same Dec as knot S5 (box 17): say -05 30 18

+ I thought I had found another one too, but it is already catalogued as 308-3036, just to W of LL6

** Llenar datos faltantes en la tabla

** Medir los radios R0 y R90 para los objetos LL
    
** Comparar los LL que son proplyds con los que no son

** Surface brightness measurements
:LOGBOOK:
CLOCK: [2013-11-20 Wed 13:26]--[2013-11-20 Wed 13:43] =>  0:17
:END:

*** Data on the relevant filters
:LOGBOOK:
CLOCK: [2013-11-20 Wed 17:33]--[2013-11-20 Wed 18:00] =>  0:27
CLOCK: [2013-11-20 Wed 17:28]--[2013-11-20 Wed 17:33] =>  0:05
:END:
Useful places I have discussed this before
+ [[id:C1210509-AE95-4F02-8556-1BF7B670B2E9][llobjects.org]] has callibration constants from OD and discussion
  + it seems that [N II] and continuum contribution to H\alpha are small
  + whereas H\alpha contribution to [N II] is more

*** Comparison of WFPC2 and ACS images
+ WFPC2 has f656n (H alpha) and f658n ([N II]) which have small contaminations from the other line
+ ACS has f658n (H \alpha + [N II]) which passes both lines
+ So in prinicple we can find the H alpha brightness
  + See github [[https://github.com/deprecated/bowshock-shape/issues/25][issue #25]]
  + But we do need to worry about the continuum as well
**** Relative calibration of the WFPC2 and ACS images
**** Working out which WFPC2 image applies to each source
:LOGBOOK:
CLOCK: [2013-11-20 Wed 21:32]--[2013-11-20 Wed 23:56] =>  2:24
:END:
+ Use montage's =mCoverageCheck= ([[http://montage.ipac.caltech.edu/docs/mCoverageCheck.html][docs]])
+ Opened github [[https://github.com/deprecated/bowshock-shape/issues/26][issue #26]] on this
+ Can't get python version to work - try command line version:
***** FIrst get tables of each type of image file
#+BEGIN_SRC sh :results verbatim
  for instrument in wfpc2 acs nicmos; do
      mImgTbl ~/Work/OrionTreasury/${instrument} montage-images-${instrument}.tbl
  done
  mImgTbl ~/Work/OrionTreasury/Bally-ACS montage-images-bally.tbl
#+END_SRC

#+RESULTS:
: [struct stat="OK", count=117, badfits=0, badwcs=0]
: [struct stat="OK", count=76, badfits=37, badwcs=75]
: [struct stat="OK", count=204, badfits=0, badwcs=0]
: [struct stat="OK", count=116, badfits=0, badwcs=41]

***** Then try to find all the images that cover 177-341
#+BEGIN_SRC sh :results verbatim
  for instrument in wfpc2 acs nicmos bally; do
      mCoverageCheck foo bar montage-images-${instrument}.tbl coverage-${instrument}-177-341.tbl \
          -point 83.82362812499996 -5.394682638888889 
      grep fits coverage-${instrument}-177-341.tbl |cut -c 269-
  done
#+END_SRC

#+RESULTS:
#+begin_example
[struct stat="OK", count="2"]

wfpc2/hlsp_orion_hst_wfpc2_38_f656n_v1_sci.fits 
wfpc2/hlsp_orion_hst_wfpc2_39_f656n_v1_sci.fits 
[struct stat="OK", count="22"]

acs/hlsp_orion_hst_acs_strip0l_f435w_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip0l_f435w_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip0l_f555w_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip0l_f555w_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip0l_f658n_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip0l_f658n_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip0l_f775w_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip0l_f775w_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip0l_f850lp_v1_drz.fits 
acs/hlsp_orion_hst_acs_strip0l_f850lp_v1_drz.fits 
acs/hlsp_orion_hst_acs_strip5l_f435w_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip5l_f435w_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip5l_f555w_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip5l_f555w_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip5l_f658n_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip5l_f658n_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip5l_f775w_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip5l_f775w_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip5l_f850lp_v1_drz.fits 
acs/hlsp_orion_hst_acs_strip5l_f850lp_v1_drz.fits 
acs/hlsp_orion_hst_acs_strip5r_f658n_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip5r_f658n_v1_drz.fits  
[struct stat="OK", count="4"]

nicmos/hlsp_orion_hst_nicmos_4a_f110w_v1_drz.fits 
nicmos/hlsp_orion_hst_nicmos_4a_f160w_v1_drz.fits 
nicmos/hlsp_orion_hst_nicmos_4c_f110w_v1_drz.fits 
nicmos/hlsp_orion_hst_nicmos_4c_f160w_v1_drz.fits 
[struct stat="OK", count="8"]

Bally-ACS/j8oc01010_drc.fits                 
Bally-ACS/j8oc01010_drz.fits                 
Bally-ACS/j8oc01010_drz.fits                 
Bally-ACS/j8oc01010_drz.fits                 
Bally-ACS/j8oc01010_robwcs.fits              
Bally-ACS/j8oc01010_wcs.fits                 
Bally-ACS/j8oc01010_wcs.fits                 
Bally-ACS/j8oc01010_wcs.fits                 
#+end_example

***** Then try to find all the images that cover LL7
+ Position is 5:35:35.129  -5:33:49.12
#+BEGIN_SRC python
  import astropy.coordinates as coords
  import astropy.units as u
  c = coords.ICRSCoordinates("5:35:35.129  -5:33:49.12", unit=(u.hour, u.deg))
  return c
#+END_SRC

#+RESULTS:
: <ICRSCoordinates RA=83.89637 deg, Dec=-5.56364 deg>

#+BEGIN_SRC sh :results verbatim
  for instrument in wfpc2 acs nicmos bally; do
      mCoverageCheck foo bar montage-images-${instrument}.tbl coverage-${instrument}-LL7.tbl \
          -point 83.89637 -5.56364
      grep fits coverage-${instrument}-LL7.tbl |cut -c 269-
  done
#+END_SRC

#+RESULTS:
#+begin_example
[struct stat="OK", count="2"]

wfpc2/hlsp_orion_hst_wfpc2_1b_f656n_v1_sci.fits 
wfpc2/hlsp_orion_hst_wfpc2_64_f656n_v1_sci.fits 
[struct stat="OK", count="24"]

acs/hlsp_orion_hst_acs_strip2l_f435w_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip2l_f435w_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip2l_f555w_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip2l_f555w_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip2l_f658n_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip2l_f658n_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip2l_f775w_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip2l_f775w_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip2l_f850lp_v1_drz.fits 
acs/hlsp_orion_hst_acs_strip2l_f850lp_v1_drz.fits 
acs/hlsp_orion_hst_acs_strip7l_f435w_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip7l_f435w_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip7l_f555w_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip7l_f555w_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip7l_f658n_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip7l_f658n_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip7l_f775w_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip7l_f775w_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip7l_f850lp_v1_drz.fits 
acs/hlsp_orion_hst_acs_strip7l_f850lp_v1_drz.fits 
acs/hlsp_orion_hst_acs_strip8l_f658n_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip8l_f658n_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip8r_f658n_v1_drz.fits  
acs/hlsp_orion_hst_acs_strip8r_f658n_v1_drz.fits  
[struct stat="OK", count="2"]

nicmos/hlsp_orion_hst_nicmos_0d_f110w_v1_drz.fits 
nicmos/hlsp_orion_hst_nicmos_0d_f160w_v1_drz.fits 
[struct stat="OK", count="0"]

#+end_example


***** Potential issues 
+ The process does work, but it throws up several false positives
+ This is because the FITS images for wfpc2 and nicmos are much bigger than the instrument footprints, so there is a lot of blank space around the outside.
+ Montage cannot tell which bits of the image actually have data in them.
+ [ ] We could check each image one by one and see if the brightness is zero at the point in question


**** Example measurements of object at 5:34:57.780 -5:22:51.21
| Filter      | Shell             | Neb               | (Shell - Neb)/Neb | S(Ha) [Shell - Neb] |
|-------------+-------------------+-------------------+-------------------+---------------------|
| ACS f658n   | 3.0956 +/- 0.0260 | 2.9091 +/- 0.0169 | 0.064 +/- 0.011   |                     |
| WFPC2 f656n | 0.0377 +/- 0.0005 | 0.0356 +/- 0.0005 | 0.059 +/- 0.020   | 1.26e7 +/- 4.23e6   |
#+TBLFM: $4=($2 - $3)/$3 ; f3::@2$2=vmeane([3.08594,  3.14877,  3.00769,  3.14877, 3.08658]);f4::@2$3=vmeane([2.94231, 2.87589, 2.88434, 2.93389]);f4::@3$2=vmeane([0.0385699, 0.0384781, 0.0376776, 0.0362713]);f4::@3$3=vmeane([0.036049, 0.0347518, 0.0347819, 0.0367983]);f4::@3$5=($2 - $3)/1.67e-10 ; s3

+ From O'Dell & Doi (1999), leading order calibration of WFPC2 f656n is =S(Ha) = CPS/1.67e-10= where =S(Ha)= is surface brightness in units of photons/cm^2/s/sr and =CPS= is counts per second in the filter image.
+ => S(Ha) = 1.26e7 +/- 4.23e6
+ Measurements of shell radius and thickness
  + Radius of curvature: R = 2 arcsec (very approximately)
  + Thickness: h = 0.6 arcsec
  + Path length: Delta l = 2 sqrt(R h) = (2.2 +/- 0.5) arcsec
+ Also we have n = sqrt(4 pi S / alpha Delta l)
  + where alpha = 1.27e-13 cm^3/s
  + n = sqrt((1.26e7 +/- 4.23e6) 4 pi / 1.27e-13 (2.2 +/- 0.5) 440 1.49597870691e13)
  + => n = 300 +/- 60 cm^{-3}
 
    
** LL 1 Proper Motions
:PROPERTIES:
:dir:      LL1-proper-motions
:END: 

We need to apply the =-delay= argument before each frame 
#+BEGIN_SRC sh :results silent
ORDER="\
 LL1_1995-03-21_O3-Ha-N2_WFPC2.png \
 LL1_2004-01-14_Ha_ACS.png \
 LL1_2005-04-07_B-V-I_ACS.png \
 LL1_2012-01-07_O3-N2-S2_WFC3.png \
 LL1_2012-01-07_Hb-O3-Ha_WFC3.png"

convert $(for a in "$ORDER"; do printf -- "-delay 25 %s " $a; done; ) HH888-motions.gif
#+END_SRC

Check that the delay came out right (measured in 1/100 sec)
#+BEGIN_SRC sh 
identify -format "%T, " HH888-motions.gif
#+END_SRC
#+RESULTS:
| 25 | 25 | 25 | 25 | 25 |

Display in browser
#+BEGIN_SRC sh :results silent
open -a Safari HH888-motions.gif
#+END_SRC

* Export options
#+TITLE: luis-angel-ll
#+AUTHOR: William Henney
#+EMAIL: will@henney.org
#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:{} arch:headline
#+OPTIONS: author:t c:nil creator:comment d:(not LOGBOOK) date:t e:t
#+OPTIONS: email:nil f:t inline:t num:t p:nil pri:nil stat:t tags:t
#+OPTIONS: tasks:t tex:t timestamp:t toc:t todo:t |:t
#+CREATOR: Emacs 24.3.1 (Org mode 8.0.7)
#+DESCRIPTION:
#+EXCLUDE_TAGS: noexport
#+KEYWORDS:
#+LANGUAGE: en
#+SELECT_TAGS: export
